_G.ColorMethod = Color3.fromRGB(119,0,255)

do  local create =  game:GetService("CoreGui"):FindFirstChild("Reduisceen")  if create then create.win:Destroy() end end

	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local LocalPlayer = game:GetService("Players").LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local tween = game:GetService("TweenService")
	local Red = {RainbowColorValue = 0, HueSelectionPosition = 0}
	local PresetColor = Color3.fromRGB(66, 134, 255)


	coroutine.wrap(
		function()
			while wait() do
				Red.RainbowColorValue = Red.RainbowColorValue + 1 / 255
				Red.HueSelectionPosition = Red.HueSelectionPosition + 1

				if Red.RainbowColorValue >= 1 then
					Red.RainbowColorValue = 0
				end

				if Red.HueSelectionPosition == 160 then
					Red.HueSelectionPosition = 0
				end
			end
		end
	)()

	local Reduisceen = Instance.new("ScreenGui")
	Reduisceen.Parent = game:GetService("CoreGui").RobloxGui.Modules
	Reduisceen.Name = "Reduisceen"
	Reduisceen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local function MakeDraggable(topbarobject, object)
		local Dragging = nil
		local DragInput = nil
		local DragStart = nil
		local StartPosition = nil

		local function Update(input)
			local Delta = input.Position - DragStart
			local pos =
				UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
			local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
			Tween:Play()
		end

		topbarobject.InputBegan:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					Dragging = true
					DragStart = input.Position
					StartPosition = object.Position

					input.Changed:Connect(
						function()
							if input.UserInputState == Enum.UserInputState.End then
								Dragging = false
							end
						end
					)
				end
			end
		)

		topbarobject.InputChanged:Connect(
			function(input)
				if
					input.UserInputType == Enum.UserInputType.MouseMovement or
						input.UserInputType == Enum.UserInputType.Touch
				then
					DragInput = input
				end
			end
		)

		UserInputService.InputChanged:Connect(
			function(input)
				if input == DragInput and Dragging then
					Update(input)
				end
			end
		)
	end

	local function Tween(instance, properties,style,wa)
		if style == nil or "" then
			return Back
		end
		tween:Create(instance,TweenInfo.new(wa,Enum.EasingStyle[style]),{properties}):Play()
	end

	local create = {}
	function create.win()
	    if logoid == nil or logoid == "" then
	        logoid = "10102908112"
	    end
		local fs = false

		local MainSceen = Instance.new("Frame")
		MainSceen.Name = "MainSceen"
		MainSceen.Parent = Reduisceen
		MainSceen.AnchorPoint = Vector2.new(0.5, 0.5)
		MainSceen.BackgroundColor3 = Color3.fromRGB(20,20,20)
		MainSceen.BorderSizePixel = 0
		MainSceen.Position = UDim2.new(0.5, 0, 0.5, 0)
		MainSceen.Size = UDim2.new(0, 0, 0, 0)
		MainSceen.ClipsDescendants = true
		
		local Main_UiConner  = Instance.new("UICorner")

		Main_UiConner.CornerRadius = UDim.new(0, 4)
		Main_UiConner.Name = "Main_UiConner"
		Main_UiConner.Parent = MainSceen

		local ClickFrame = Instance.new("Frame")
		ClickFrame.Name = "ClickFrame"
		ClickFrame.Parent = MainSceen
		ClickFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		ClickFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
		ClickFrame.BorderSizePixel = 0
		ClickFrame.Position = UDim2.new(0.5, 0, 0.036, 0)
		ClickFrame.Size = UDim2.new(0, 534-20, 0, 30)
		ClickFrame.ClipsDescendants = true
		ClickFrame.BackgroundTransparency = 1

		MakeDraggable(ClickFrame,MainSceen)
		tween:Create(MainSceen,TweenInfo.new(0.4,Enum.EasingStyle.Back),{Size = UDim2.new(0, 550, 0, 610)}):Play()

	local ToggleFrameUi = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")
	local ToggleImgUi = Instance.new("ImageLabel")
	local Uitoggle = Instance.new("TextLabel")
	local Yedhee = Instance.new("TextLabel")
	local SearchStroke = Instance.new("UIStroke")

local TextButton7 = Instance.new("TextButton")
    TextButton7.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton7.ClipsDescendants = true
    TextButton7.Position = UDim2.new(0.94, 0, 0.3, 0)
    TextButton7.BorderSizePixel = 0
    TextButton7.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
    TextButton7.AutoButtonColor = false
    TextButton7.FontSize = Enum.FontSize.Size11
    TextButton7.TextSize = 11
    TextButton7.TextColor3 = Color3.fromRGB(109, 109, 109)
    TextButton7.Text = ""
    TextButton7.Font = Enum.Font.GothamSemibold
    TextButton7.TextXAlignment = Enum.TextXAlignment.Left
    TextButton7.Parent = Reduisceen

    
    local TextButton7_UiConner = Instance.new("UICorner")
	
	TextButton7_UiConner.CornerRadius = UDim.new(0, 4)
	TextButton7_UiConner.Parent = TextButton7


local TextButton77 = Instance.new("TextButton")
    TextButton77.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton77.ClipsDescendants = true
    TextButton77.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton77.BorderSizePixel = 0
    TextButton77.BackgroundColor3 = Color3.fromRGB(255,0,0)
    TextButton77.AutoButtonColor = false
    TextButton77.FontSize = Enum.FontSize.Size11
    TextButton77.TextSize = 11
    TextButton77.TextColor3 = Color3.fromRGB(109, 109, 109)
    TextButton77.Text = ""
    TextButton77.Font = Enum.Font.GothamSemibold
    TextButton77.TextXAlignment = Enum.TextXAlignment.Left
    TextButton77.Parent = TextButton7
    
    local TextButton77_UiConner = Instance.new("UICorner")
	
	TextButton77_UiConner.CornerRadius = UDim.new(0, 4)
	TextButton77_UiConner.Parent = TextButton77
	
    local TextButton8 = Instance.new("TextButton")
    TextButton8.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton8.Size = UDim2.new(0, 207, 0, 48)--UDim2.new(0, 198, 0, 48)
    TextButton8.ClipsDescendants = true
    TextButton8.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton8.BorderSizePixel = 0
    TextButton8.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    TextButton8.AutoButtonColor = false
    TextButton8.FontSize = Enum.FontSize.Size11
    TextButton8.TextSize = 11
    TextButton8.TextColor3 = Color3.fromRGB(45, 45, 45)
    TextButton8.Text = ""
    TextButton8.Font = Enum.Font.GothamSemibold
    TextButton8.Parent = TextButton7

    local TextButton8_UiConner = Instance.new("UICorner")
	
	TextButton8_UiConner.CornerRadius = UDim.new(0, 4)
	TextButton8_UiConner.Parent = TextButton8
	
	ToggleImgUi.Name = "ToggleImgUi"
	ToggleImgUi.Parent = TextButton8
	ToggleImgUi.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ToggleImgUi.BackgroundTransparency = 1.000
	ToggleImgUi.Position = UDim2.new(0.0454545468, 0, 0.125000313, 0)
	ToggleImgUi.Size = UDim2.new(0, 35, 0, 35)
	ToggleImgUi.Image = "rbxassetid://"..tostring(7040391851)
	
	Uitoggle.Name = "Uitoggle"
	Uitoggle.Parent = TextButton8
	Uitoggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Uitoggle.BackgroundTransparency = 1.000
	Uitoggle.Position = UDim2.new(0.25757575, 0, 0, 0)
	Uitoggle.Size = UDim2.new(0, 137, 0, 25)
	Uitoggle.Font = Enum.Font.GothamSemibold
	Uitoggle.Text = "Ui Toggle :"
	Uitoggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Uitoggle.TextSize = 13.000
	
	Yedhee.Name = "Yedhee"
	Yedhee.Parent = TextButton8
	Yedhee.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Yedhee.BackgroundTransparency = 1.000
	Yedhee.Position = UDim2.new(0.25757575, 0, 0.479166657, 0)
	Yedhee.Size = UDim2.new(0, 137, 0, 25)
	Yedhee.Font = Enum.Font.GothamSemibold
	Yedhee.Text = "RightControl"
	Yedhee.TextColor3 = Color3.fromRGB(255, 255, 255)
	Yedhee.TextSize = 13.000

    
   --[[ local TextButton7 = Instance.new("TextButton")
    TextButton7.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton7.ClipsDescendants = true
    TextButton7.Position = UDim2.new(0.94, 0, 0.3, 0)
    TextButton7.BorderSizePixel = 0
    TextButton7.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
    TextButton7.AutoButtonColor = false
    TextButton7.FontSize = Enum.FontSize.Size11
    TextButton7.TextSize = 11
    TextButton7.TextColor3 = Color3.fromRGB(109, 109, 109)
    TextButton7.Text = ""
    TextButton7.Font = Enum.Font.GothamSemibold
    TextButton7.TextXAlignment = Enum.TextXAlignment.Left
    TextButton7.Parent = Reduisceen
    
    local TextButton7_UiConner = Instance.new("UICorner")

    TextButton7_UiConner.CornerRadius = UDim.new(0, 9)
    TextButton7_UiConner.Name = "Main_UiConner"
    TextButton7_UiConner.Parent = TextButton7

    local TextButton8 = Instance.new("TextButton")
    TextButton8.AnchorPoint = Vector2.new(0.5, 0.5)
    TextButton8.Size = UDim2.new(0, 198, 0, 48)
    TextButton8.ClipsDescendants = true
    TextButton8.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextButton8.BorderSizePixel = 0
    TextButton8.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    TextButton8.AutoButtonColor = false
    TextButton8.FontSize = Enum.FontSize.Size11
    TextButton8.TextSize = 11
    TextButton8.TextColor3 = Color3.fromRGB(45, 45, 45)
    TextButton8.Text = ""
    TextButton8.Font = Enum.Font.GothamSemibold
    TextButton8.Parent = TextButton7

    local TextButton8_UiConner = Instance.new("UICorner")

    TextButton8_UiConner.CornerRadius = UDim.new(0, 9)
    TextButton8_UiConner.Name = "Main_UiConner"
    TextButton8_UiConner.Parent = TextButton8

    local TextLabel13 = Instance.new("TextLabel")
    TextLabel13.AnchorPoint = Vector2.new(0.5, 0.5)
    TextLabel13.Size = UDim2.new(0, 198, 0, 50)
    TextLabel13.ClipsDescendants = true
    TextLabel13.BackgroundTransparency = 1
    TextLabel13.Position = UDim2.new(0.5, 0, 0.5, 0)
    TextLabel13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel13.TextSize = 13
    TextLabel13.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel13.Text = "Ui Toggle : \nRightControl"
    TextLabel13.TextWrap = true
    TextLabel13.Font = Enum.Font.GothamSemibold
    TextLabel13.TextWrapped = true
    TextLabel13.Parent = TextButton8]]--

	
    --[[KeyButton.MouseButton1Click:Connect(function()
        KeyButton.Text = "..."
        local inputwait = UserInputService.InputBegan:wait()
        if inputwait.KeyCode.Name ~= "Unknown" then
            getgenv().Settings.Key = inputwait.KeyCode
            KeyButton.Text = "[ " .. inputwait.KeyCode.Name .. " ]"
            TextLabel13.Text = "Ui Toggle : " .. inputwait.KeyCode.Name

            Key = inputwait.KeyCode.Name
        end
    end)]]--


    local library = {toggledui = false;}
    game:GetService("UserInputService").InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.RightControl then
            if library.toggledui == false then
                library.toggledui = true
                tween:Create(MainSceen,TweenInfo.new(0.4,Enum.EasingStyle.Back,Enum.EasingDirection.In),{Size = UDim2.new(0, 0, 0, 0)}):Play()
                wait(0.2)
                TweenService:Create(
                    TextButton7,
                    TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 220, 0, 50)}
                ):Play()
                TweenService:Create(
                    TextButton77,
                    TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 217, 0, 47)}
                ):Play()
                --[[wait(9000)
                wait(.51)
                if TextButton7.Size.Y.Offset == UDim2.new(0, 0, 0, 0) then
                    Reduisceen.Enabled = false
                end]]--
            else
                Reduisceen.Enabled = true
                TweenService:Create(
                    TextButton7,
                    TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                    {Size = UDim2.new(0, 0, 0, 0)}
                ):Play()
                TweenService:Create(
                    TextButton77,
                    TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                    {Size = UDim2.new(0, 0, 0, 0)}
                ):Play()
                tween:Create(MainSceen,TweenInfo.new(0.4,Enum.EasingStyle.Back),{Size = UDim2.new(0, 550, 0, 610)}):Play()
                repeat wait() until MainSceen.Size == UDim2.new(0, 550, 0, 610)
                library.toggledui = false
                if MainSceen.Size == UDim2.new(0, 550, 0, 610) then
                    Reduisceen.Enabled = true
                end
            end
        end
    end)
    function UISetToggle(Set)
        if not Set then
            library.toggledui = true
            TweenService:Create(
                MainSceen,
                TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                {Size = UDim2.new(0, 0, 0, 0)}
            ):Play()
            wait(0.2)
            TweenService:Create(
                TextButton7,
                TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
                {Size = UDim2.new(0, 220, 0, 50)}
            ):Play()
                TweenService:Create(
                    TextButton77,
                    TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                    {Size = UDim2.new(0, 210, 0, 50)}
                ):Play()
            wait(2)
            TweenService:Create(
                TextButton7,
                TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                {Size = UDim2.new(0, 0, 0, 0)}
            ):Play()
                TweenService:Create(
                    TextButton77,
                    TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
                    {Size = UDim2.new(0, 0, 0, 0)}
                ):Play()
            wait(.5)
            Reduisceen.Enabled = false
        else
            Reduisceen.Enabled = true
            tween:Create(MainSceen,TweenInfo.new(0.4,Enum.EasingStyle.Back),{Size = UDim2.new(0, 550, 0, 610)}):Play()
            repeat wait() until MainSceen.Size == UDim2.new(0, 553, 0, 466)
            library.toggledui = true
            Reduisceen.Enabled = true
        end
    end
    
    if Config and Config.HideUI then
        UISetToggle(false)
    end
    
		--[[local library = {toggledui = false;}
		game:GetService("UserInputService").InputBegan:Connect(function(input)
			pcall(function()
				if input.KeyCode == Enum.KeyCode.RightControl then
					if library.toggledui == false then
						library.toggledui = true
						tween:Create(MainSceen,TweenInfo.new(0.4,Enum.EasingStyle.Back,Enum.EasingDirection.In),{Size = UDim2.new(0, 0, 0, 0)}):Play()
						wait(.3)
						Reduisceen.Enabled = false
					else
						library.toggledui = false
						tween:Create(MainSceen,TweenInfo.new(0.4,Enum.EasingStyle.Back),{Size = UDim2.new(0, 550, 0, 610)}):Play()
						Reduisceen.Enabled = true
					end
				end
			end)
		end)]]--

	local SearchStroke2 = Instance.new("UIStroke")
	
	SearchStroke2.Thickness = 1
	SearchStroke2.Name = ""
	SearchStroke2.Parent = MainSceen
	SearchStroke2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	SearchStroke2.LineJoinMode = Enum.LineJoinMode.Round
	SearchStroke2.Color = Color3.fromRGB(255,255,255)
	SearchStroke2.Transparency = 0
	
		local MainSceen22 = Instance.new("Frame")
		MainSceen22.Name = "MainSceen22"
		MainSceen22.Parent = MainSceen
		MainSceen22.AnchorPoint = Vector2.new(0.5, 0.5)
		MainSceen22.BackgroundColor3 = Color3.fromRGB(20,20,20)
		MainSceen22.BorderSizePixel = 0
		MainSceen22.Position = UDim2.new(0.5, 0, 0.05, 88)
		MainSceen22.Size = UDim2.new(0, 528, 0, 130)
		MainSceen22.ClipsDescendants = true

		local MainSceen222 = Instance.new("Frame")
		MainSceen222.Name = "MainSceen222"
		MainSceen222.Parent = MainSceen
		MainSceen222.AnchorPoint = Vector2.new(0.5, 0.5)
		MainSceen222.BackgroundColor3 = _G.ColorMethod
		MainSceen222.BorderSizePixel = 0
		MainSceen222.Position = UDim2.new(0.1, 0, 0.05, 72)
		MainSceen222.Size = UDim2.new(0, 6, 0, 70)
		MainSceen222.ClipsDescendants = true

		local Main_UiXConner  = Instance.new("UICorner")

		Main_UiXConner.CornerRadius = UDim.new(0, 4)
		Main_UiXConner.Name = "Main_UiXConner"
		Main_UiXConner.Parent = MainSceen222
		
		local Main_UiXConner  = Instance.new("UICorner")

		Main_UiXConner.CornerRadius = UDim.new(0, 4)
		Main_UiXConner.Name = "Main_UiXConner"
		Main_UiXConner.Parent = MainSceen22

	local SearchStroke = Instance.new("UIStroke")
	
	SearchStroke.Thickness = 1.5
	SearchStroke.Name = ""
	SearchStroke.Parent = MainSceen22
	SearchStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	SearchStroke.LineJoinMode = Enum.LineJoinMode.Round
	SearchStroke.Color = Color3.fromRGB(255,255,255)
	SearchStroke.Transparency = 0

		local NameReal2 = Instance.new("TextLabel")

		NameReal2.Parent = MainSceen22
		NameReal2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NameReal2.BackgroundTransparency = 1
		NameReal2.BorderSizePixel = 0
		NameReal2.Position = UDim2.new(0.2, 0, 0.05, 19)
		NameReal2.AnchorPoint = Vector2.new(0.5, 0.5)
		NameReal2.Size = UDim2.new(0, 1, 0, 0)
		NameReal2.Font = Enum.Font.GothamBold
		NameReal2.Text = "Welcome to"
		NameReal2.TextColor3 = Color3.fromRGB(255,255,255)
		NameReal2.TextSize = 15.000

		local JoinButton = Instance.new("TextButton")

		JoinButton.Parent = MainSceen22
		JoinButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		JoinButton.BackgroundTransparency = 1
		JoinButton.BorderSizePixel = 0
		JoinButton.Position = UDim2.new(0.25, 0, 0.05, 76)
		JoinButton.AnchorPoint = Vector2.new(0.5, 0.5)
		JoinButton.Size = UDim2.new(0, 140, 0.01, 25)
		JoinButton.Font = Enum.Font.GothamBold
		JoinButton.Text = "Join Discord"
		JoinButton.TextColor3 = _G.ColorMethod
		JoinButton.TextSize = 13.000
		JoinButton.MouseButton1Click:Connect(function()
            local a=request or http_request or syn and syn.request;local b=game.HttpService;a({Url="http://127.0.0.1:6463/rpc?v=1",Method="POST",Headers={["Content-Type"]="application/json",["Origin"]="https://discord.com"},Body=b:JSONEncode({cmd="INVITE_BROWSER",args={code="h6UCrbAR9J"},nonce=b:GenerateGUID(false)})})local c=game:GetService("Players").LocalPlayer
		end)
    
		local Main_UiXConner  = Instance.new("UICorner")

		Main_UiXConner.CornerRadius = UDim.new(0, 8)
		Main_UiXConner.Name = "Main_UiXConner"
		Main_UiXConner.Parent = JoinButton
		
local IMGNAME = Instance.new("ImageLabel")
	IMGNAME.Name = "IMGDATA"
	IMGNAME.Parent = MainSceen22
	IMGNAME.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	IMGNAME.BackgroundTransparency = 1.000
	IMGNAME.Position = UDim2.new(0, 360, 0, -24)
	IMGNAME.Size = UDim2.new(0, 180, 0, 180)
	IMGNAME.Image = "rbxassetid://"..tostring(10102908112)
	
	local SearchStroke = Instance.new("UIStroke")
	
	SearchStroke.Thickness = 1.4
	SearchStroke.Name = ""
	SearchStroke.Parent = JoinButton
	SearchStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	SearchStroke.LineJoinMode = Enum.LineJoinMode.Round
	SearchStroke.Color = _G.ColorMethod
	SearchStroke.Transparency = 0		
		local NameReal2 = Instance.new("TextLabel")

		NameReal2.Parent = MainSceen22
		NameReal2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NameReal2.BackgroundTransparency = 1
		NameReal2.BorderSizePixel = 0
		NameReal2.Position = UDim2.new(0.2, 0, 0.05, 40)
		NameReal2.AnchorPoint = Vector2.new(0.5, 0.5)
		NameReal2.Size = UDim2.new(0, 136, 0, 34)
		NameReal2.Font = Enum.Font.GothamBold
		NameReal2.Text = "                 Xero x Community"
		NameReal2.TextColor3 = _G.ColorMethod
		NameReal2.TextSize = 25.000

function create.bar(text)
    Infomation = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId);
    NameGames = Infomation.Name
    local barre = {}
    
	local Label = Instance.new("TextLabel")

    Label.Parent = MainSceen
    Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Label.BackgroundTransparency = 1
    Label.BorderSizePixel = 0
    Label.Position = UDim2.new(0.25, 0, 0.05, 570)
    Label.AnchorPoint = Vector2.new(0.5, 0.5)
    Label.Size = UDim2.new(0, 136, 0, 34)
    Label.Font = Enum.Font.GothamBold
    Label.Text = tostring(""..NameGames..""..text)
    Label.TextColor3 = Color3.fromRGB(255,255,255)
    Label.TextSize = 14.000
    
    function barre:loadbar()
        Label.Text = "                                                                    "..NameGames.."                                                      "..os.date("%H")..":"..os.date("%M")..":"..os.date("%S")
    end
    
    return barre
end

		local NameReal2 = Instance.new("TextLabel")
		
		NameReal2.Parent = MainSceen22
		NameReal2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NameReal2.BackgroundTransparency = 1
		NameReal2.BorderSizePixel = 0
		NameReal2.Position = UDim2.new(0.3, 0, 0.05, 40)
		NameReal2.AnchorPoint = Vector2.new(0.5, 0.5)
		NameReal2.Size = UDim2.new(0, 136, 0, 34)
		NameReal2.Font = Enum.Font.GothamBold
		NameReal2.Text = "        "
		NameReal2.TextColor3 = Color3.fromRGB(255,255,255)
		NameReal2.TextSize = 25.000
		
local IMGNAME = Instance.new("ImageLabel")
	IMGNAME.Name = "IMGDATA"
	IMGNAME.Parent = MainSceen
	IMGNAME.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	IMGNAME.BackgroundTransparency = 1.000
	IMGNAME.Position = UDim2.new(0, 5, 0, -7)
	IMGNAME.Size = UDim2.new(0, 60, 0, 60)
	IMGNAME.Image = "rbxassetid://"..tostring(10102908112)
		
		
		local NameReal = Instance.new("TextLabel")

		NameReal.Parent = MainSceen
		NameReal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NameReal.BackgroundTransparency = 1
		NameReal.BorderSizePixel = 0
		NameReal.Position = UDim2.new(0.09, 0, 0.04, 0)
		NameReal.AnchorPoint = Vector2.new(0.5, 0.5)
		NameReal.Size = UDim2.new(0, 136, 0, 34)
		NameReal.Font = Enum.Font.GothamBold
		NameReal.Text = "            Xero "
		NameReal.TextColor3 = _G.ColorMethod
		NameReal.TextSize = 23.000
		
		local NameReal = Instance.new("TextLabel")

		NameReal.Parent = MainSceen
		NameReal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NameReal.BackgroundTransparency = 1
		NameReal.BorderSizePixel = 0
		NameReal.Position = UDim2.new(0.09, 0, 0.04, 0)
		NameReal.AnchorPoint = Vector2.new(0.5, 0.5)
		NameReal.Size = UDim2.new(0, 136, 0, 34)
		NameReal.Font = Enum.Font.GothamBold
		NameReal.Text = "                                                                     x Script Paid Version [0.1.1]"
		NameReal.TextColor3 = Color3.fromRGB(255,255,255)
		NameReal.TextSize = 23.000
		

		local MainSceen2 = Instance.new("Frame")
		MainSceen2.Name = "MainSceen2"
		MainSceen2.Parent = MainSceen
		MainSceen2.AnchorPoint = Vector2.new(0.5, 0.5)
		MainSceen2.BackgroundColor3 = Color3.fromRGB(15,15,15)--Color3.fromRGB(18,18,18)
		MainSceen2.BorderSizePixel = 0
		MainSceen2.Position = UDim2.new(0.5, 0, 0.5, 0)
		MainSceen2.Size = UDim2.new(0, 0, 0, 0)
		MainSceen2.ClipsDescendants = true

		local Main_UiConner2  = Instance.new("UICorner")

		Main_UiConner2.CornerRadius = UDim.new(0, 4)
		Main_UiConner2.Name = "Main_UiConner"
		Main_UiConner2.Parent = MainSceen

		MainSceen2:TweenSizeAndPosition(UDim2.new(0, 550-20, 0,390), UDim2.new(0.5, 0, 0.53, 70), "Out", "Back", 0.5, true)


		local ScolTapBarFrame = Instance.new("Frame")
		ScolTapBarFrame.Name = "MainSceen2"
		ScolTapBarFrame.Parent = MainSceen2
		ScolTapBarFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		ScolTapBarFrame.BackgroundColor3 = Color3.fromRGB(255,255,255)
		ScolTapBarFrame.BorderSizePixel = 0
		ScolTapBarFrame.BackgroundTransparency = 1
		ScolTapBarFrame.Position = UDim2.new(0.5, 0, 0.07, 0)
		ScolTapBarFrame.Size = UDim2.new(0, 500, 0, 35)
		ScolTapBarFrame.ClipsDescendants = true

		local ScrollingFrame_Menubar = Instance.new("ScrollingFrame")

		ScrollingFrame_Menubar.Parent = ScolTapBarFrame
		ScrollingFrame_Menubar.Active = true
		ScrollingFrame_Menubar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ScrollingFrame_Menubar.BackgroundTransparency = 1
		ScrollingFrame_Menubar.BorderSizePixel = 0
		ScrollingFrame_Menubar.Size = UDim2.new(0, 500, 0, 30)
		ScrollingFrame_Menubar.CanvasSize = UDim2.new(2, 0, 0, 0)
		ScrollingFrame_Menubar.ScrollBarImageColor3 = _G.ColorMethod
		ScrollingFrame_Menubar.ScrollBarThickness = 3


		local UIListLayout_Menubar = Instance.new("UIListLayout")

		UIListLayout_Menubar.Parent = ScrollingFrame_Menubar
		UIListLayout_Menubar.FillDirection = Enum.FillDirection.Horizontal
		UIListLayout_Menubar.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_Menubar.Padding = UDim.new(0, 10)

		local UIPadding_Menubar = Instance.new("UIPadding")

		UIPadding_Menubar.Parent = ScrollingFrame_Menubar
		UIPadding_Menubar.PaddingTop = UDim.new(0, 2)


		local PageOrders = -1

		local Container_Page = Instance.new('Frame',MainSceen2)
		Container_Page.Size = UDim2.new(0, 518, 0, 268)
		Container_Page.Position = UDim2.new(0.5, 0, 0.45, 0)
		Container_Page.BackgroundTransparency = 1
		Container_Page.Name = "Page "
		Container_Page.AnchorPoint = Vector2.new(0.5, 0.5)

		local pagesFolder = Instance.new("Folder")

		pagesFolder.Name = "pagesFolder"
		pagesFolder.Parent = Container_Page


		local UIPage = Instance.new('UIPageLayout',pagesFolder)
		UIPage.SortOrder = Enum.SortOrder.LayoutOrder
		UIPage.EasingDirection = Enum.EasingDirection.InOut
		UIPage.EasingStyle = Enum.EasingStyle.Quad
		UIPage.Padding = UDim.new(0, 10)
		UIPage.TweenTime = 0.500

		local top = {}

		local NotiFrame = Instance.new("Frame")
		NotiFrame.Name = "NotiFrame"
		NotiFrame.Parent = Reduisceen
		NotiFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		NotiFrame.BackgroundColor3 = Color3.fromRGB(18,18,18)
		NotiFrame.BorderSizePixel = 0
		NotiFrame.Position =  UDim2.new(1, -210, 1, -500)
		NotiFrame.Size = UDim2.new(0, 400, 0, 500)
		NotiFrame.ClipsDescendants = true
		NotiFrame.BackgroundTransparency = 1


		local Notilistlayout = Instance.new("UIListLayout")
		Notilistlayout.Parent = NotiFrame
		Notilistlayout.SortOrder = Enum.SortOrder.LayoutOrder
		Notilistlayout.Padding = UDim.new(0, 5)


		function create:Notifile(titel,text,delays)
			local TitleFrame = Instance.new("Frame")
			TitleFrame.Name = "TitleFrame"
			TitleFrame.Parent = NotiFrame
			TitleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
			TitleFrame.BackgroundColor3 = Color3.fromRGB(18,18,18)
			TitleFrame.BorderSizePixel = 0
			TitleFrame.Position =  UDim2.new(0.5, 0, 0.5,0)
			TitleFrame.Size = UDim2.new(0, 0, 0, 0)
			TitleFrame.ClipsDescendants = true
			TitleFrame.BackgroundTransparency = 0

			local ConnerTitile = Instance.new("UICorner")

			ConnerTitile.CornerRadius = UDim.new(0, 4)
			ConnerTitile.Name = ""
			ConnerTitile.Parent = TitleFrame

			TitleFrame:TweenSizeAndPosition(UDim2.new(0, 400-10, 0, 70),  UDim2.new(0.5, 0, 0.5,0), "Out", "Quad", 0.3, true)

			local imagenoti = Instance.new("ImageLabel")

			imagenoti.Parent = TitleFrame
			imagenoti.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			imagenoti.BackgroundTransparency = 1.000
			imagenoti.AnchorPoint = Vector2.new(0.5, 0.5)
			imagenoti.Position = UDim2.new(0.9, 0, 0.5, 0)
			imagenoti.Size = UDim2.new(0, 50, 0, 50)
		--  imagenoti.Image = "https://www.roblox.com/asset-thumbnail/image?assetId=7578496318&width=0&height=0&format=png"

			local txdlid = Instance.new("TextLabel")

			txdlid.Parent = TitleFrame
			txdlid.Name = "TextLabel_Tap"
			txdlid.BackgroundColor3 = _G.ColorMethod
			txdlid.Size =UDim2.new(0, 160, 0,25 )
			txdlid.Font = Enum.Font.GothamBold
			txdlid.Text = titel
			txdlid.TextColor3 = _G.ColorMethod
			txdlid.TextSize = 13.000
			txdlid.AnchorPoint = Vector2.new(0.5, 0.5)
			txdlid.Position = UDim2.new(0.23, 0, 0.3, 0)
			-- txdlid.TextYAlignment = Enum.TextYAlignment.Top
			txdlid.TextXAlignment = Enum.TextXAlignment.Left
			txdlid.BackgroundTransparency = 1

			local LableFrame = Instance.new("Frame")
			LableFrame.Name = "LableFrame"
			LableFrame.Parent = TitleFrame
			LableFrame.AnchorPoint = Vector2.new(0.5, 0.5)
			LableFrame.BackgroundColor3 = _G.ColorMethod
			LableFrame.BorderSizePixel = 0
			LableFrame.Position =  UDim2.new(0.36, 0, 0.67,0)
			LableFrame.Size = UDim2.new(0, 260, 0,25 )
			LableFrame.ClipsDescendants = true
			LableFrame.BackgroundTransparency = 1

			local TextNoti = Instance.new("TextLabel")

			TextNoti.Parent = LableFrame
			TextNoti.Name = "TextLabel_Tap"
			TextNoti.BackgroundColor3 = _G.ColorMethod
			TextNoti.Size =UDim2.new(0, 260, 0,25 )
			TextNoti.Font = Enum.Font.GothamBold
			TextNoti.Text = text
			TextNoti.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextNoti.TextSize = 13.000
			TextNoti.AnchorPoint = Vector2.new(0.5, 0.5)
			TextNoti.Position = UDim2.new(0.5, 0, 0.5, 0)
			-- TextNoti.TextYAlignment = Enum.TextYAlignment.Top
			TextNoti.TextXAlignment = Enum.TextXAlignment.Left
			TextNoti.BackgroundTransparency = 1

			repeat wait() until TitleFrame.Size == UDim2.new(0, 400-10, 0, 70)

			local Time = Instance.new("Frame")
			Time.Name = "Time"
			Time.Parent = TitleFrame
	   --Time.AnchorPoint = Vector2.new(0.5, 0.5)
			Time.BackgroundColor3 =  _G.ColorMethod
			Time.BorderSizePixel = 0
			Time.Position =  UDim2.new(0, 0, 0.,0)
			Time.Size = UDim2.new(0, 0,0,0)
			Time.ClipsDescendants = false
			Time.BackgroundTransparency = 0

			local ConnerTitile_Time = Instance.new("UICorner")

			ConnerTitile_Time.CornerRadius = UDim.new(0, 4)
			ConnerTitile_Time.Name = ""
			ConnerTitile_Time.Parent = Time


			Time:TweenSizeAndPosition(UDim2.new(0, 400-10, 0, 3),  UDim2.new(0., 0, 0.,0), "Out", "Quad", 0.3, true)
			repeat wait() until Time.Size == UDim2.new(0, 400-10, 0, 3)

			TweenService:Create(
				Time,
				TweenInfo.new(tonumber(delays), Enum.EasingStyle.Linear, Enum.EasingDirection.InOut),
				{Size = UDim2.new(0, 0, 0, 3)} -- UDim2.new(0, 128, 0, 25)
			):Play()
			delay(tonumber(delays),function()
				TweenService:Create(
					TitleFrame,
					TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.InOut),
					{Size = UDim2.new(0, 0, 0, 0)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				wait(0.3)
				TitleFrame:Destroy()
			end
		)
		end


		function top:Taps(text)
			PageOrders = PageOrders + 1
			local name = tostring(text) or tostring(math.random(1,5000))

			local Frame_Tap = Instance.new("Frame")
			Frame_Tap.Parent = ScrollingFrame_Menubar
			Frame_Tap.Name = text.."Server"
			Frame_Tap.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Frame_Tap.BackgroundTransparency = 1
			Frame_Tap.Position = UDim2.new(0.0, 0, 0.0, 0)
			Frame_Tap.Size = UDim2.new(0, 100, 0, 25)
			Frame_Tap.Visible = true

			local TextLabel_Tap = Instance.new("TextLabel")

			TextLabel_Tap.Parent = Frame_Tap
			TextLabel_Tap.Name = "TextLabel_Tap"
			TextLabel_Tap.BackgroundColor3 = _G.ColorMethod
			TextLabel_Tap.Position = UDim2.new(0.5, 0, 0.8, 0)
			TextLabel_Tap.Size = UDim2.new(0, 0, 0, 0)
			TextLabel_Tap.Font = Enum.Font.SourceSans
			TextLabel_Tap.Text = " "
			TextLabel_Tap.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextLabel_Tap.TextSize = 14.000
			TextLabel_Tap.AnchorPoint = Vector2.new(0.5, 0.5)

			local TextButton_Tap = Instance.new("TextButton")

			TextButton_Tap.Parent = Frame_Tap
			TextButton_Tap.Name = "TextButton_Tap"
			TextButton_Tap.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextButton_Tap.BackgroundTransparency = 1.000
			TextButton_Tap.Position = UDim2.new(0.114491031, 0, -0.0216345787, 0)
			TextButton_Tap.Size = UDim2.new(0, 80, 0, 20)
			TextButton_Tap.Font = Enum.Font.GothamSemibold
			TextButton_Tap.TextColor3 = Color3.fromRGB(155, 155, 155)
			TextButton_Tap.TextSize = 13.000
			TextButton_Tap.Text = tostring(text)

			local MainPage = Instance.new("Frame")

			MainPage.Name = name.."_MainPage"
			MainPage.Parent = pagesFolder
			MainPage.BackgroundColor3 = Color3.fromRGB(255,255, 255)
			MainPage.BorderSizePixel = 0
			MainPage.Position = UDim2.new(0.5, 0, 0.5, 0) -- UDim2.new(0.0149812736, 0, 0.13, 0)
			MainPage.Size = UDim2.new(0, 518, 0, 375)
			MainPage.BackgroundTransparency = 1
			MainPage.ClipsDescendants = true
			MainPage.Visible = true
			MainPage.LayoutOrder = PageOrders




			TextButton_Tap.MouseButton1Click:connect(function()
				if MainPage.Name == text.."_MainPage" then
					UIPage:JumpToIndex(MainPage.LayoutOrder)

				end
				for i ,v in next , ScrollingFrame_Menubar:GetChildren() do
					if v:IsA("Frame") then
						TweenService:Create(
							v.TextButton_Tap,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(155, 155, 155)}
						):Play()
					end

					TweenService:Create(
						TextButton_Tap,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = _G.ColorMethod}
					):Play()
				end
			end)

			if fs == false then
				-- TweenService:Create(
				--     TextLabel_Tap,
				--     TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				--     {Size = UDim2.new(0, 70, 0, 2)}
				-- ):Play()
				TweenService:Create(
					TextButton_Tap,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = _G.ColorMethod}
				):Play()

				MainPage.Visible = true
				Frame_Tap.Name  = text .. "Server"
				fs  = true
			end
			local ScrollingFrame_Pagefrist = Instance.new("ScrollingFrame")

			ScrollingFrame_Pagefrist.Parent = MainPage
			ScrollingFrame_Pagefrist.Active = true
			ScrollingFrame_Pagefrist.BackgroundColor3 = Color3.fromRGB(23, 23, 23) -- 249, 53, 139
			ScrollingFrame_Pagefrist.BorderSizePixel = 0
			ScrollingFrame_Pagefrist.Size = UDim2.new(0, 518, 0, 375)
			ScrollingFrame_Pagefrist.ScrollBarThickness = 4
			ScrollingFrame_Pagefrist.ScrollBarImageColor3 = _G.ColorMethod -- 249, 53, 139

			local UIGridLayout_Pagefrist = Instance.new("UIGridLayout")
			local UIPadding_Pagefrist = Instance.new("UIPadding")

			UIGridLayout_Pagefrist.Archivable = false
			UIGridLayout_Pagefrist.Parent = ScrollingFrame_Pagefrist
			UIGridLayout_Pagefrist.SortOrder = Enum.SortOrder.LayoutOrder
			UIGridLayout_Pagefrist.CellPadding = UDim2.new(0, 13, 0, 15)
			UIGridLayout_Pagefrist.CellSize = UDim2.new(0, 240, 0, 370)

			UIPadding_Pagefrist.Parent = ScrollingFrame_Pagefrist
			UIPadding_Pagefrist.PaddingLeft = UDim.new(0, 10)
			UIPadding_Pagefrist.PaddingTop = UDim.new(0, 20)

			local page = {}

			function page:newpage()

				local Pageframe = Instance.new("Frame")


				Pageframe.Parent = ScrollingFrame_Pagefrist
				Pageframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				Pageframe.BorderSizePixel = 0
				Pageframe.Position = UDim2.new(0.028957529, 0, 0.0496277921, 0)
				Pageframe.Size = UDim2.new(0, 240, 0, 379)


				local ScrollingFrame_Pageframe = Instance.new("ScrollingFrame")


				ScrollingFrame_Pageframe.Parent = Pageframe
				ScrollingFrame_Pageframe.Active = true
				ScrollingFrame_Pageframe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				ScrollingFrame_Pageframe.BorderSizePixel = 0
				ScrollingFrame_Pageframe.Position = UDim2.new(0, 0, -0.0101253344, 0)
				ScrollingFrame_Pageframe.Size = UDim2.new(0, 240, 0, 379)
				ScrollingFrame_Pageframe.ScrollBarThickness = 4
				ScrollingFrame_Pageframe.ScrollBarImageColor3 = Color3.fromRGB(222, 222, 222)



				local UIPadding_Pageframe = Instance.new("UIPadding")
				local UIListLayout_Pageframe = Instance.new("UIListLayout")


				UIPadding_Pageframe.Parent = ScrollingFrame_Pageframe
				UIPadding_Pageframe.PaddingLeft = UDim.new(0, 15)
				UIPadding_Pageframe.PaddingTop = UDim.new(0, 10)


				UIListLayout_Pageframe.Parent = ScrollingFrame_Pageframe
				UIListLayout_Pageframe.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_Pageframe.Padding = UDim.new(0, 7)

				UIListLayout_Pageframe:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
					ScrollingFrame_Pageframe.CanvasSize = UDim2.new(0,0,0,UIListLayout_Pageframe.AbsoluteContentSize.Y + 120 )
				end)

				UIGridLayout_Pagefrist:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
					ScrollingFrame_Pagefrist.CanvasSize = UDim2.new(0,0,0,UIGridLayout_Pagefrist.AbsoluteContentSize.Y + 50 )
				end)

				game:GetService("RunService").Stepped:Connect(function ()
					pcall(function ()
						ScrollingFrame_Menubar.CanvasSize = UDim2.new(0,  UIListLayout_Menubar.AbsoluteContentSize.X, 0,0)
						ScrollingFrame_Pageframe.CanvasSize = UDim2.new(0,0,0,UIListLayout_Pageframe.AbsoluteContentSize.Y +20 )
						ScrollingFrame_Pagefrist.CanvasSize = UDim2.new(0,0,0,UIGridLayout_Pagefrist.AbsoluteContentSize.Y + 40)
					end)
				end)
			local items = {}

			function items:Toggle(text,config,callback)
				local Toggle = Instance.new("Frame")

				Toggle.Parent = ScrollingFrame_Pageframe
				Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Toggle.BorderSizePixel = 0
				Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
				Toggle.Size = UDim2.new(0, 213, 0, 35)
				Toggle.BackgroundTransparency = 1
				Toggle.AnchorPoint = Vector2.new(0.5, 0.5)

				local TextButton_Toggle = Instance.new("TextButton")

				TextButton_Toggle.Parent = Toggle
				TextButton_Toggle.BackgroundTransparency =1
				TextButton_Toggle.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
				TextButton_Toggle.BorderSizePixel = 0
				TextButton_Toggle.Size = UDim2.new(0, 213, 0, 35)
				TextButton_Toggle.AutoButtonColor = false
				TextButton_Toggle.Font = Enum.Font.SourceSans
				TextButton_Toggle.Text = " "
				TextButton_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_Toggle.TextSize = 12.000

				local TextButton_2_Toggle = Instance.new("TextButton")

				TextButton_2_Toggle.Parent = TextButton_Toggle
				TextButton_2_Toggle.BackgroundColor3 = Color3.fromRGB(155, 155, 155)
		        TextButton_2_Toggle.BorderColor3 = _G.ColorMethod
				TextButton_2_Toggle.BorderSizePixel = 0
				TextButton_2_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_2_Toggle.Position = UDim2.new(0.9, 0, 0.5, 0)
				TextButton_2_Toggle.Size = UDim2.new(0, 30, 0, 13)
				TextButton_2_Toggle.Font = Enum.Font.SourceSans
				TextButton_2_Toggle.Text = " "
				TextButton_2_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_2_Toggle.TextSize = 12.000
				TextButton_2_Toggle.AutoButtonColor = false

				local TextButton_Pageframe_Uiconner = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner.CornerRadius = UDim.new(0, 30)
				TextButton_Pageframe_Uiconner.Name = ""
				TextButton_Pageframe_Uiconner.Parent = TextButton_2_Toggle

				local TextButton_3_Toggle = Instance.new("TextButton")

				TextButton_3_Toggle.Parent = TextButton_2_Toggle
				TextButton_3_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255,255)
		        TextButton_3_Toggle.BorderColor3 = _G.ColorMethod
				TextButton_3_Toggle.BorderSizePixel = 0
				TextButton_3_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_3_Toggle.Position = UDim2.new(0.1, 0, 0.5, 0)
				TextButton_3_Toggle.Size = UDim2.new(0, 19, 0, 19)
				TextButton_3_Toggle.Font = Enum.Font.SourceSans
				TextButton_3_Toggle.Text = " "
				TextButton_3_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_3_Toggle.TextSize = 12.000
				TextButton_3_Toggle.AutoButtonColor = false

				local TextButton_Pageframe_Uiconner2 = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner2.CornerRadius = UDim.new(0, 30)
				TextButton_Pageframe_Uiconner2.Name = ""
				TextButton_Pageframe_Uiconner2.Parent = TextButton_3_Toggle

				local TextButton_4_Toggle = Instance.new("TextButton")

				TextButton_4_Toggle.Parent = TextButton_3_Toggle
				TextButton_4_Toggle.BackgroundColor3 = Color3.fromRGB(155, 155,155)
		        TextButton_3_Toggle.BorderColor3 = _G.ColorMethod
				TextButton_4_Toggle.BorderSizePixel = 0
				TextButton_4_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_4_Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextButton_4_Toggle.Size = UDim2.new(0, 27, 0, 27-2)
				TextButton_4_Toggle.Font = Enum.Font.SourceSans
				TextButton_4_Toggle.Text = " "
				TextButton_4_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_4_Toggle.TextSize = 12.000
				TextButton_4_Toggle.AutoButtonColor = false
				TextButton_4_Toggle.BackgroundTransparency = 1
				TextButton_4_Toggle.Visible = true

				local TextButton_Pageframe_Uiconner4 = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner4.CornerRadius = UDim.new(0, 30)
				TextButton_Pageframe_Uiconner4.Name = ""
				TextButton_Pageframe_Uiconner4.Parent = TextButton_4_Toggle

				local TextLabel_Toggle = Instance.new("TextLabel")

				TextLabel_Toggle.Parent = Toggle
				TextLabel_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextLabel_Toggle.BackgroundTransparency = 1
				TextLabel_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextLabel_Toggle.Position = UDim2.new(0.4, 0, 0.5, 0)
				TextLabel_Toggle.BorderSizePixel = 0
				TextLabel_Toggle.Size = UDim2.new(0, 130, 0, 25)
				TextLabel_Toggle.Font = Enum.Font.GothamSemibold
				TextLabel_Toggle.Text = text
				TextLabel_Toggle.TextColor3 = Color3.fromRGB(200, 200, 200)
				TextLabel_Toggle.TextSize = 13.000
				TextLabel_Toggle.ClipsDescendants = true
				TextLabel_Toggle.TextWrapped = true
				TextLabel_Toggle.TextXAlignment = Enum.TextXAlignment.Left

				local TextButton_Toggle2 = Instance.new("TextButton")

				TextButton_Toggle2.Parent = TextButton_Toggle
				TextButton_Toggle2.BackgroundTransparency =1
				TextButton_Toggle2.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
				TextButton_Toggle2.BorderSizePixel = 0
				TextButton_Toggle2.Size = UDim2.new(0, 213, 0, 35)
				TextButton_Toggle2.AutoButtonColor = false
				TextButton_Toggle2.Font = Enum.Font.SourceSans
				TextButton_Toggle2.Text = " "
				TextButton_Toggle2.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_Toggle2.TextSize = 12.000

				TextButton_Toggle2.MouseEnter:Connect(function()
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0.6} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextLabel_Toggle,
						TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

			TextButton_Toggle2.MouseLeave:Connect(function()
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextLabel_Toggle,
						TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 200, 200)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

			local check = {toogle = false ; loacker = true ; togfunction = {

			};
		}
		TextButton_Toggle2.MouseButton1Click:Connect(function()
				if check.toogle == false and check.loacker == true  then
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_3_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_2_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(200, 0, 0)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
				elseif  check.loacker ==  true then
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_3_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_2_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(0.1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
				end
				if  check.loacker == true  then
				check.toogle = not check.toogle
				callback(check.toogle)
				end
			end
		)

			if config == true then
				TweenService:Create(
					TextButton_4_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextButton_3_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextButton_2_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 =  Color3.fromRGB(200, 0, 0)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
				check.toogle = true
				callback(check.toogle)
			end

			local lockerframe = Instance.new("Frame")

			lockerframe.Name = "lockerframe"
			lockerframe.Parent = Toggle
			lockerframe.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			lockerframe.BackgroundTransparency = 1
			lockerframe.Size = UDim2.new(0, 320, 0, 35)
			lockerframe.Position = UDim2.new(0.5, 0, 0.5, 0)
			lockerframe.AnchorPoint = Vector2.new(0.5, 0.5)

			local LockerImageLabel = Instance.new("ImageLabel")
			LockerImageLabel.Parent = lockerframe
			LockerImageLabel.BackgroundTransparency = 1.000
			LockerImageLabel.BorderSizePixel = 0
			LockerImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
			LockerImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
			LockerImageLabel.Size = UDim2.new(0, 0, 0, 0)
			LockerImageLabel.Image = "http://www.roblox.com/asset/?id=6031082533"


			function check.togfunction:lock()
				TweenService:Create(
					lockerframe,
					TweenInfo.new(.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
					{BackgroundTransparency = 0.7}
				):Play()
				TweenService:Create(
					LockerImageLabel,
					TweenInfo.new(.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
					{Size = UDim2.new(0, 30, 0, 30)}
				):Play()

				check.loacker  = false
			--    pcall(callback,locker)
			end
			function check.togfunction:unlock()
				TweenService:Create(
					lockerframe,
					TweenInfo.new(.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
					{BackgroundTransparency = 1}
				):Play()
				TweenService:Create(
					LockerImageLabel,
					TweenInfo.new(.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
					{Size = UDim2.new(0, 0, 0, 0)}
				):Play()
				check.loacker  = true
			--   pcall(callback,locker)
			end

				return  check.togfunction
			end

			function items:Button(text,callback)

				local ButtonFrame = Instance.new("Frame")

				ButtonFrame.Name = "ButtonFrame"
				ButtonFrame.Parent = ScrollingFrame_Pageframe
				ButtonFrame.BackgroundColor3 = _G.ColorMethod
				ButtonFrame.BorderSizePixel = 0
				ButtonFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				ButtonFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ButtonFrame.Size = UDim2.new(0, 213, 0, 25) -- UDim2.new(0, 213, 0, 35)
				ButtonFrame.BackgroundTransparency  = 1
				ButtonFrame.ClipsDescendants = true



				local MheeFrameStroke = Instance.new("UIStroke")

				MheeFrameStroke.Thickness = 0
				MheeFrameStroke.Name = ""
				MheeFrameStroke.Parent = ButtonFrame
				MheeFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
				MheeFrameStroke.Color = _G.ColorMethod
				MheeFrameStroke.Transparency = 0.7

				local Button = Instance.new("TextButton")

				Button.Parent = ButtonFrame
				Button.Name = "Button"
				Button.BackgroundColor3 = _G.ColorMethod
				Button.Size = UDim2.new(0,150, 0, 25)
				Button.Font = Enum.Font.SourceSansSemibold
				Button.Text = tostring(text)
				Button.TextColor3 = Color3.fromRGB(155, 155, 155)
				Button.TextSize = 13.000
				Button.AnchorPoint = Vector2.new(0.5, 0.5)
				Button.Position = UDim2.new(0.5, 0, 0.5, 0)
				Button.TextXAlignment = Enum.TextXAlignment.Center
				Button.BackgroundTransparency = 0.6
				Button.TextWrapped = true
				Button.AutoButtonColor = false
				Button.ClipsDescendants = true

				local ConnerPageMhee = Instance.new("UICorner")

				ConnerPageMhee.CornerRadius = UDim.new(0, 4)
				ConnerPageMhee.Name = ""
				ConnerPageMhee.Parent = Button

				Button.MouseEnter:Connect(function()
					TweenService:Create(
						Button,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size =  UDim2.new(0, 213, 0, 25)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						Button,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						Button,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)
				Button.MouseLeave:Connect(function()
					TweenService:Create(
						Button,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size =  UDim2.new(0, 150, 0, 25)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						Button,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0.6} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						Button,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

			Button.MouseButton1Click:Connect(function()
			--    Ripple(Button)
				callback()
				TweenService:Create(
					Button,
					TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
					{TextSize =  16} -- UDim2.new(0, 128, 0, 25)
				):Play()
				wait(0.1)
				TweenService:Create(
					Button,
					TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
					{TextSize =  13} -- UDim2.new(0, 128, 0, 25)
				):Play()
			end
		)

			end

			function items:Slider(text,check,floor,min,max,de,lol,tog,callback)

			if check then

				local SliderFrame = Instance.new("Frame")

				SliderFrame.Name = "SliderFrame"
				SliderFrame.Parent = ScrollingFrame_Pageframe
				SliderFrame.BackgroundColor3 =  Color3.fromRGB(28, 28, 28)-- _G.ColorMethod
				SliderFrame.BorderSizePixel = 0
				SliderFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				SliderFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				SliderFrame.Size = UDim2.new(0, 213, 0, 75) -- UDim2.new(0, 213, 0, 35)
				SliderFrame.BackgroundTransparency  = 0
				SliderFrame.ClipsDescendants = true

				local SliderFrameConner = Instance.new("UICorner")

				SliderFrameConner.CornerRadius = UDim.new(0, 4)
				SliderFrameConner.Name = ""
				SliderFrameConner.Parent = SliderFrame

				local SliderFrameStroke = Instance.new("UIStroke")

				SliderFrameStroke.Thickness = 1
				SliderFrameStroke.Name = ""
				SliderFrameStroke.Parent = SliderFrame
				SliderFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
				SliderFrameStroke.Color = _G.ColorMethod
				SliderFrameStroke.Transparency = 0.7


				SliderFrame.MouseEnter:Connect(function()
					TweenService:Create(
						SliderFrameStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

				SliderFrame.MouseLeave:Connect(function()
					TweenService:Create(
						SliderFrameStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0.7} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)


				local LabelNameSliderxd = Instance.new("TextLabel")

				LabelNameSliderxd.Parent = SliderFrame
				LabelNameSliderxd.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				LabelNameSliderxd.BackgroundTransparency = 1
				LabelNameSliderxd.BorderSizePixel = 0
				LabelNameSliderxd.Position = UDim2.new(0.35, 0, 0.2, 0)
				LabelNameSliderxd.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelNameSliderxd.Size = UDim2.new(0, 120, 0, 20)
				LabelNameSliderxd.Font = Enum.Font.GothamBold
				LabelNameSliderxd.Text = tostring(text)
				LabelNameSliderxd.TextColor3 = Color3.fromRGB(255, 255, 255)
				LabelNameSliderxd.TextSize = 11.000
				LabelNameSliderxd.TextXAlignment = Enum.TextXAlignment.Left


				local ShowValueFarm = Instance.new("Frame")

				ShowValueFarm.Name = "ShowValueFarm"
				ShowValueFarm.Parent = SliderFrame
				ShowValueFarm.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				ShowValueFarm.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				ShowValueFarm.Size = UDim2.new(0, 75, 0, 15)
				ShowValueFarm.BackgroundTransparency = 0
				ShowValueFarm.BorderSizePixel = 0
				ShowValueFarm.AnchorPoint = Vector2.new(0.5, 0.5)
				ShowValueFarm.Position = UDim2.new(0.8, 0, 0.2, 0)
				ShowValueFarm.ClipsDescendants = false

				local CustomValue = Instance.new("TextBox")

				CustomValue.Parent = ShowValueFarm
				CustomValue.BackgroundColor3 = Color3.fromRGB(45,45, 45)
				CustomValue.BorderSizePixel = 0
				CustomValue.ClipsDescendants = true
				CustomValue.AnchorPoint = Vector2.new(0.5, 0.5)
				CustomValue.Position = UDim2.new(0.5, 0, 0.5, 0)
				CustomValue.Size = UDim2.new(0, 158, 0, 26)
				CustomValue.Font = Enum.Font.GothamSemibold
				CustomValue.PlaceholderColor3 = Color3.fromRGB(222, 222, 222)
				CustomValue.PlaceholderText =  ""
				if floor == true then
					CustomValue.Text =  tostring(de and string.format("%.1f",(de / max) * (max - min) + min) or 0)
				else
					CustomValue.Text =  tostring(de and math.floor( (de / max) * (max - min) + min) or 0)
				end
				CustomValue.TextColor3 = Color3.fromRGB(255, 255, 255)
				CustomValue.TextSize = 8.000
				CustomValue.BackgroundTransparency = 1

				local ValueFrame = Instance.new("Frame")

				ValueFrame.Name = "ValueFrame"
				ValueFrame.Parent = SliderFrame
				ValueFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				ValueFrame.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				ValueFrame.Size = UDim2.new(0, 140, 0, 5)
				ValueFrame.BackgroundTransparency = 0
				ValueFrame.BorderSizePixel = 0
				ValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ValueFrame.Position = UDim2.new(0.4, 0, 0.8, 0)
				ValueFrame.ClipsDescendants = false


				local PartValue = Instance.new("Frame")

				PartValue.Name = "PartValue"
				PartValue.Parent = ValueFrame
				PartValue.BackgroundColor3 = Color3.fromRGB(222, 222, 222)
				PartValue.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				PartValue.Size = UDim2.new(0, 140, 0, 5)
				PartValue.BackgroundTransparency = 1
				PartValue.BorderSizePixel = 0
				PartValue.AnchorPoint = Vector2.new(0.5, 0.5)
				PartValue.Position = UDim2.new(0.5, 0, 0.5, 0)
				PartValue.ClipsDescendants = false

				local MainValue = Instance.new("Frame")

				MainValue.Name = "MainValue"
				MainValue.Parent = PartValue
				MainValue.BackgroundColor3 = _G.ColorMethod
				MainValue.Size = UDim2.new((de or 0) / max, 0, 0, 5)
				MainValue.BackgroundTransparency = 0
				MainValue.BorderSizePixel = 0
				-- MainValue.AnchorPoint = Vector2.new(0.5, 0.5)
				MainValue.Position = UDim2.new(0., 0, 0.0, 0)
				MainValue.ClipsDescendants = false

				local Conner_S1 = Instance.new("UICorner")

				Conner_S1.CornerRadius = UDim.new(0, 8)
				Conner_S1.Name = ""
				Conner_S1.Parent = MainValue

				local Conner_S2 = Instance.new("UICorner")

				Conner_S2.CornerRadius = UDim.new(0, 8)
				Conner_S2.Name = ""
				Conner_S2.Parent = ValueFrame

				local ConneValue = Instance.new("Frame")

				ConneValue.Name = "ConneValue"
				ConneValue.Parent = PartValue
				ConneValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ConneValue.Size = UDim2.new(0, 13, 0,13)
				ConneValue.BackgroundTransparency = 0
				ConneValue.BorderSizePixel = 0
				ConneValue.AnchorPoint = Vector2.new(0.5, 0.5)
				ConneValue.Position = UDim2.new((de or 0)/max, 0.5, 0.3,0.5, 0)
				ConneValue.ClipsDescendants = false


				local Conner_Conne = Instance.new("UICorner")

				Conner_Conne.CornerRadius = UDim.new(0, 300)
				Conner_Conne.Name = ""
				Conner_Conne.Parent = ConneValue

				local Addvalue = Instance.new("ImageButton")

				Addvalue.Name = "Imatog"
				Addvalue.Parent = SliderFrame
				Addvalue.BackgroundTransparency = 1.000
				Addvalue.BorderSizePixel = 0
				Addvalue.Position = UDim2.new(0.85, 0, 0.35, 0)
				Addvalue.Size = UDim2.new(0, 15, 0, 15)
				Addvalue.Image = "http://www.roblox.com/asset/?id=6035067836"
				Addvalue.ImageColor3 =  _G.ColorMethod

				local Deletevalue = Instance.new("ImageButton")

				Deletevalue.Name = "Imatog"
				Deletevalue.Parent = SliderFrame
				Deletevalue.BackgroundTransparency = 1.000
				Deletevalue.BorderSizePixel = 0
				Deletevalue.Position = UDim2.new(0.7, 0, 0.35, 0)
				Deletevalue.Size = UDim2.new(0, 15, 0, 15)
				Deletevalue.Image = "http://www.roblox.com/asset/?id=6035047377"
				Deletevalue.ImageColor3 =  _G.ColorMethod


				local TextButton_2_Toggle = Instance.new("TextButton")

				TextButton_2_Toggle.Parent = ValueFrame
				TextButton_2_Toggle.BackgroundColor3 = Color3.fromRGB(155, 155, 155)
		--        TextButton_2_Toggle.BorderColor3 = _G.ColorMethod
				TextButton_2_Toggle.BorderSizePixel = 0
				TextButton_2_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_2_Toggle.Position = UDim2.new(1.25, 0, 0.4, 0)
				TextButton_2_Toggle.Size = UDim2.new(0, 30, 0, 13)
				TextButton_2_Toggle.Font = Enum.Font.SourceSans
				TextButton_2_Toggle.Text = " "
				TextButton_2_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_2_Toggle.TextSize = 12.000
				TextButton_2_Toggle.AutoButtonColor = false

				local TextButton_Pageframe_Uiconner = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner.CornerRadius = UDim.new(0, 30)
				TextButton_Pageframe_Uiconner.Name = ""
				TextButton_Pageframe_Uiconner.Parent = TextButton_2_Toggle

				local TextButton_3_Toggle = Instance.new("TextButton")

				TextButton_3_Toggle.Parent = TextButton_2_Toggle
				TextButton_3_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255,255)
		--        TextButton_3_Toggle.BorderColor3 = _G.ColorMethod
				TextButton_3_Toggle.BorderSizePixel = 0
				TextButton_3_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_3_Toggle.Position = UDim2.new(0.1, 0, 0.5, 0)
				TextButton_3_Toggle.Size = UDim2.new(0, 19, 0, 19)
				TextButton_3_Toggle.Font = Enum.Font.SourceSans
				TextButton_3_Toggle.Text = " "
				TextButton_3_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_3_Toggle.TextSize = 12.000
				TextButton_3_Toggle.AutoButtonColor = false

				local TextButton_Pageframe_Uiconner2 = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner2.CornerRadius = UDim.new(0, 30)
				TextButton_Pageframe_Uiconner2.Name = ""
				TextButton_Pageframe_Uiconner2.Parent = TextButton_3_Toggle

				local TextButton_4_Toggle = Instance.new("TextButton")

				TextButton_4_Toggle.Parent = TextButton_3_Toggle
				TextButton_4_Toggle.BackgroundColor3 = Color3.fromRGB(155, 155,155)
		--        TextButton_3_Toggle.BorderColor3 = _G.ColorMethod
				TextButton_4_Toggle.BorderSizePixel = 0
				TextButton_4_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_4_Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextButton_4_Toggle.Size = UDim2.new(0, 27, 0, 27-2)
				TextButton_4_Toggle.Font = Enum.Font.SourceSans
				TextButton_4_Toggle.Text = " "
				TextButton_4_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_4_Toggle.TextSize = 12.000
				TextButton_4_Toggle.AutoButtonColor = false
				TextButton_4_Toggle.BackgroundTransparency = 1
				TextButton_4_Toggle.Visible = true

				local TextButton_Pageframe_Uiconner4 = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner4.CornerRadius = UDim.new(0, 30)
				TextButton_Pageframe_Uiconner4.Name = ""
				TextButton_Pageframe_Uiconner4.Parent = TextButton_4_Toggle


				local TextButton_Toggle = Instance.new("TextButton")

				TextButton_Toggle.Parent = ValueFrame
				TextButton_Toggle.BackgroundTransparency =1
				TextButton_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextButton_Toggle.BorderSizePixel = 0
				TextButton_Toggle.Size = UDim2.new(0, 50, 0, 20)
				TextButton_Toggle.AutoButtonColor = false
				TextButton_Toggle.Font = Enum.Font.SourceSans
				TextButton_Toggle.Text = " "
				TextButton_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_Toggle.TextSize = 12.000
				TextButton_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_Toggle.Position = UDim2.new(1.25, 0, 0.4, 0)



			-- local value = de
			local check2 = {toogle2 = false;}
				local function move(input)
					local pos =
						UDim2.new(
							math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
							0,
							0.3,
							0
						)
					local pos1 =
						UDim2.new(
							math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
							0,
							0,
							5
						)

						MainValue:TweenSize(pos1, "Out", "Sine", 0.2, true)

						ConneValue:TweenPosition(pos, "Out", "Sine", 0.2, true)
						if floor == true then
							local value = string.format("%.1f",((pos.X.Scale * max) / max) * (max - min) + min)
							CustomValue.Text = tostring(value)
						--   callback[2] = value
						callback({
							["s"] = value;
							["t"] = check2.toogle2
						})
						--callback({value,check2.toogle2})
							--callback(value)
						else
							local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
							CustomValue.Text = tostring(value)
							callback({
								["s"] = value;
								["t"] = check2.toogle2
							})
					--       callback({value,check2.toogle2})

						end



					end

					local dragging = false
					ConneValue.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					ConneValue.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)
					SliderFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					SliderFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)


					ValueFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					ValueFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)

					game:GetService("UserInputService").InputChanged:Connect(
						function(input)
							if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
								move(input)
							end
						end
						)

						CustomValue.FocusLost:Connect(function()
							if CustomValue.Text == "" then
								CustomValue.Text  = de
							end
							if  tonumber(CustomValue.Text) > max then
								CustomValue.Text  = max
							end
							if  tonumber(CustomValue.Text) <= min then
								CustomValue.Text  = min
							end
							MainValue:TweenSize(UDim2.new((CustomValue.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
							ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0, 0) , "Out", "Sine", 0.2, true)
							if floor == true then
								CustomValue.Text = tostring(CustomValue.Text and string.format("%.1f",(CustomValue.Text / max) * (max - min) + min) )
							else
								CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
							end
							callback({
								["s"] =  CustomValue.Text;
								["t"] = check2.toogle2;
							})
					--       callback({ tonumber(CustomValue.Text),check2.toogle2})
					--  pcall(callback, CustomValue.Text)
						end)


						Addvalue.MouseButton1Click:Connect(function ()
							if CustomValue.Text == "" then
								CustomValue.Text  = de
							end
							pcall(function()
								CustomValue.Text  = CustomValue.Text  - tonumber(lol)
							end)
							if  tonumber(CustomValue.Text) > max then
								CustomValue.Text  = max
							end
							if  tonumber(CustomValue.Text) < min then
								CustomValue.Text  = min
							end
							MainValue:TweenSize(UDim2.new((CustomValue.Text  or 0  ) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
							ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.5, 0) , "Out", "Sine", 0.2, true)
							if floor == true then
								CustomValue.Text = tostring(CustomValue.Text and string.format("%.1f",(CustomValue.Text / max) * (max - min) + min) )
							else
								CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
							end
							callback({
								["s"] =  CustomValue.Text;
								["t"] = check2.toogle2
							})
						--   callback({ tonumber(CustomValue.Text),check2.toogle2})
						--  pcall(callback, CustomValue.Text)
						end)

						Deletevalue.MouseButton1Click:Connect(function ()
							if CustomValue.Text == "" then
								CustomValue.Text  = de
							end
							pcall(function()
								CustomValue.Text  = CustomValue.Text  + tonumber(lol)
							end)
							if  tonumber(CustomValue.Text) > max then
								CustomValue.Text  = max
							end
							if  tonumber(CustomValue.Text) < min then
								CustomValue.Text  = min
							end
							MainValue:TweenSize(UDim2.new((CustomValue.Text  or 0  ) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
							ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.5, 0) , "Out", "Sine", 0.2, true)
							if floor == true then
								CustomValue.Text = tostring(CustomValue.Text and string.format("%.1f",(CustomValue.Text / max) * (max - min) + min) )
							else
								CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
							end
							callback({
								["s"] =  CustomValue.Text;
								["t"] = check2.toogle2;
							})
				--callback({ tonumber(CustomValue.Text),check2.toogle2})
						--  pcall(callback, CustomValue.Text)
						end)




				---
						TextButton_Toggle.MouseEnter:Connect(function()
							TweenService:Create(
								TextButton_4_Toggle,
								TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundTransparency = 0.6} -- UDim2.new(0, 128, 0, 25)
							):Play()
						end
					)

					TextButton_Toggle.MouseLeave:Connect(function()
							TweenService:Create(
								TextButton_4_Toggle,
								TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{BackgroundTransparency = 1} -- UDim2.new(0, 128, 0, 25)
							):Play()
						end
					)



				TextButton_Toggle.MouseButton1Click:Connect(function()
					if check2.toogle2 == false   then
						TweenService:Create(
							TextButton_4_Toggle,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TweenService:Create(
							TextButton_3_Toggle,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TweenService:Create(
							TextButton_2_Toggle,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =  Color3.fromRGB(153, 0, 102)} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
					else
						TweenService:Create(
							TextButton_4_Toggle,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =  Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TweenService:Create(
							TextButton_3_Toggle,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =  Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TweenService:Create(
							TextButton_2_Toggle,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 =  Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(0.1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
					end
						check2.toogle2 = not check2.toogle2
						callback({
							["t"] = check2.toogle2;

						})
					--   callback({value,check2.toogle2})
						--callback(check2.toogle2)
				end
			)

				if tog == true then
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_3_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_2_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(153, 0, 102)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
					check2.toogle2 = true
					callback({
						["t"] = check2.toogle2;
					})
			--        callback({value,check2.toogle2})
				--  callback(check2.toogle2)
				end


			else
				tog = nil
				local SliderFrame = Instance.new("Frame")

				SliderFrame.Name = "SliderFrame"
				SliderFrame.Parent = ScrollingFrame_Pageframe
				SliderFrame.BackgroundColor3 =  Color3.fromRGB(28, 28, 28)-- _G.ColorMethod
				SliderFrame.BorderSizePixel = 0
				SliderFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				SliderFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				SliderFrame.Size = UDim2.new(0, 213, 0, 75) -- UDim2.new(0, 213, 0, 35)
				SliderFrame.BackgroundTransparency  = 0
				SliderFrame.ClipsDescendants = true

				local SliderFrameConner = Instance.new("UICorner")

				SliderFrameConner.CornerRadius = UDim.new(0, 4)
				SliderFrameConner.Name = ""
				SliderFrameConner.Parent = SliderFrame

				local SliderFrameStroke = Instance.new("UIStroke")

				SliderFrameStroke.Thickness = 1
				SliderFrameStroke.Name = ""
				SliderFrameStroke.Parent = SliderFrame
				SliderFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
				SliderFrameStroke.Color = _G.ColorMethod
				SliderFrameStroke.Transparency = 0.7



				SliderFrame.MouseEnter:Connect(function()
					TweenService:Create(
						SliderFrameStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

				SliderFrame.MouseLeave:Connect(function()
					TweenService:Create(
						SliderFrameStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0.7} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

				local LabelNameSliderxd = Instance.new("TextLabel")

				LabelNameSliderxd.Parent = SliderFrame
				LabelNameSliderxd.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				LabelNameSliderxd.BackgroundTransparency = 1
				LabelNameSliderxd.BorderSizePixel = 0
				LabelNameSliderxd.Position = UDim2.new(0.35, 0, 0.2, 0)
				LabelNameSliderxd.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelNameSliderxd.Size = UDim2.new(0, 120, 0, 20)
				LabelNameSliderxd.Font = Enum.Font.GothamBold
				LabelNameSliderxd.Text = tostring(text)
				LabelNameSliderxd.TextColor3 = Color3.fromRGB(255, 255, 255)
				LabelNameSliderxd.TextSize = 11.000
				LabelNameSliderxd.TextXAlignment = Enum.TextXAlignment.Left


				local ShowValueFarm = Instance.new("Frame")

				ShowValueFarm.Name = "ShowValueFarm"
				ShowValueFarm.Parent = SliderFrame
				ShowValueFarm.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				ShowValueFarm.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				ShowValueFarm.Size = UDim2.new(0, 75, 0, 15)
				ShowValueFarm.BackgroundTransparency = 0
				ShowValueFarm.BorderSizePixel = 0
				ShowValueFarm.AnchorPoint = Vector2.new(0.5, 0.5)
				ShowValueFarm.Position = UDim2.new(0.8, 0, 0.2, 0)
				ShowValueFarm.ClipsDescendants = false

				local CustomValue = Instance.new("TextBox")

				CustomValue.Parent = ShowValueFarm
				CustomValue.BackgroundColor3 = Color3.fromRGB(45,45, 45)
				CustomValue.BorderSizePixel = 0
				CustomValue.ClipsDescendants = true
				CustomValue.AnchorPoint = Vector2.new(0.5, 0.5)
				CustomValue.Position = UDim2.new(0.5, 0, 0.5, 0)
				CustomValue.Size = UDim2.new(0, 158, 0, 26)
				CustomValue.Font = Enum.Font.GothamSemibold
				CustomValue.PlaceholderColor3 = Color3.fromRGB(222, 222, 222)
				CustomValue.PlaceholderText =  ""
				if floor == true then
					CustomValue.Text =  tostring(de and string.format("%.1f",(de / max) * (max - min) + min) or 0)
				else
					CustomValue.Text =  tostring(de and math.floor( (de / max) * (max - min) + min) or 0)
				end
				CustomValue.TextColor3 = Color3.fromRGB(255, 255, 255)
				CustomValue.TextSize = 8.000
				CustomValue.BackgroundTransparency = 1

				local ValueFrame = Instance.new("Frame")

				ValueFrame.Name = "ValueFrame"
				ValueFrame.Parent = SliderFrame
				ValueFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				ValueFrame.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				ValueFrame.Size = UDim2.new(0, 190, 0, 5)
				ValueFrame.BackgroundTransparency = 0
				ValueFrame.BorderSizePixel = 0
				ValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ValueFrame.Position = UDim2.new(0.5, 0, 0.8, 0)
				ValueFrame.ClipsDescendants = false


				local PartValue = Instance.new("Frame")

				PartValue.Name = "PartValue"
				PartValue.Parent = ValueFrame
				PartValue.BackgroundColor3 = Color3.fromRGB(222, 222, 222)
				PartValue.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				PartValue.Size = UDim2.new(0, 190, 0, 5)
				PartValue.BackgroundTransparency = 1
				PartValue.BorderSizePixel = 0
				PartValue.AnchorPoint = Vector2.new(0.5, 0.5)
				PartValue.Position = UDim2.new(0.5, 0, 0.5, 0)
				PartValue.ClipsDescendants = false

				local MainValue = Instance.new("Frame")

				MainValue.Name = "MainValue"
				MainValue.Parent = PartValue
				MainValue.BackgroundColor3 = _G.ColorMethod
				MainValue.Size = UDim2.new((de or 0) / max, 0, 0, 5)
				MainValue.BackgroundTransparency = 0
				MainValue.BorderSizePixel = 0
				-- MainValue.AnchorPoint = Vector2.new(0.5, 0.5)
				MainValue.Position = UDim2.new(0., 0, 0.0, 0)
				MainValue.ClipsDescendants = false

				local Conner_S1 = Instance.new("UICorner")

				Conner_S1.CornerRadius = UDim.new(0, 8)
				Conner_S1.Name = ""
				Conner_S1.Parent = MainValue

				local Conner_S2 = Instance.new("UICorner")

				Conner_S2.CornerRadius = UDim.new(0, 8)
				Conner_S2.Name = ""
				Conner_S2.Parent = ValueFrame

				local ConneValue = Instance.new("Frame")

				ConneValue.Name = "ConneValue"
				ConneValue.Parent = PartValue
				ConneValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ConneValue.Size = UDim2.new(0, 13, 0,13)
				ConneValue.BackgroundTransparency = 0
				ConneValue.BorderSizePixel = 0
				ConneValue.AnchorPoint = Vector2.new(0.5, 0.5)
				ConneValue.Position = UDim2.new((de or 0)/max, 0.5, 0.3,0.5, 0)
				ConneValue.ClipsDescendants = false


				local Conner_Conne = Instance.new("UICorner")

				Conner_Conne.CornerRadius = UDim.new(0, 300)
				Conner_Conne.Name = ""
				Conner_Conne.Parent = ConneValue

				local Addvalue = Instance.new("ImageButton")

				Addvalue.Name = "Imatog"
				Addvalue.Parent = SliderFrame
				Addvalue.BackgroundTransparency = 1.000
				Addvalue.BorderSizePixel = 0
				Addvalue.Position = UDim2.new(0.85, 0, 0.35, 0)
				Addvalue.Size = UDim2.new(0, 15, 0, 15)
				Addvalue.Image = "http://www.roblox.com/asset/?id=6035067836"
				Addvalue.ImageColor3 =  _G.ColorMethod

				local Deletevalue = Instance.new("ImageButton")

				Deletevalue.Name = "Imatog"
				Deletevalue.Parent = SliderFrame
				Deletevalue.BackgroundTransparency = 1.000
				Deletevalue.BorderSizePixel = 0
				Deletevalue.Position = UDim2.new(0.7, 0, 0.35, 0)
				Deletevalue.Size = UDim2.new(0, 15, 0, 15)
				Deletevalue.Image = "http://www.roblox.com/asset/?id=6035047377"
				Deletevalue.ImageColor3 =  _G.ColorMethod

				local function move(input)
					local pos =
						UDim2.new(
							math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
							0,
							0.3,
							0
						)
					local pos1 =
						UDim2.new(
							math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
							0,
							0,
							5
						)

						MainValue:TweenSize(pos1, "Out", "Sine", 0.2, true)

						ConneValue:TweenPosition(pos, "Out", "Sine", 0.2, true)
						if floor == true then
							local value = string.format("%.1f",((pos.X.Scale * max) / max) * (max - min) + min)
							CustomValue.Text = tostring(value)
							callback(value)
						else
							local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
							CustomValue.Text = tostring(value)
							callback(value)
						end



					end

					local dragging = false
					ConneValue.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					ConneValue.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)
					SliderFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					SliderFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)


					ValueFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					ValueFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)

					game:GetService("UserInputService").InputChanged:Connect(
						function(input)
							if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
								move(input)
							end
						end
						)

						CustomValue.FocusLost:Connect(function()
							if CustomValue.Text == "" then
								CustomValue.Text  = de
							end
							if  tonumber(CustomValue.Text) > max then
								CustomValue.Text  = max
							end
							MainValue:TweenSize(UDim2.new((CustomValue.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
							ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0, 0) , "Out", "Sine", 0.2, true)
							if floor == true then
								CustomValue.Text = tostring(CustomValue.Text and string.format("%.1f",(CustomValue.Text / max) * (max - min) + min) )
							else
								CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
							end
							pcall(callback, CustomValue.Text)
						end)


				Addvalue.MouseButton1Click:Connect(function ()
					if CustomValue.Text == "" then
						CustomValue.Text  = de
					end
					CustomValue.Text  = CustomValue.Text  - tonumber(lol)
					if  tonumber(CustomValue.Text) > max then
						CustomValue.Text  = max
					end
					if  tonumber(CustomValue.Text) < min then
						CustomValue.Text  = min
					end
					MainValue:TweenSize(UDim2.new((CustomValue.Text  or 0  ) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
					ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.5, 0) , "Out", "Sine", 0.2, true)
					if floor == true then
						CustomValue.Text = tostring(CustomValue.Text and string.format("%.1f",(CustomValue.Text / max) * (max - min) + min) )
					else
						CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
					end
					pcall(callback, CustomValue.Text)
				end)

				Deletevalue.MouseButton1Click:Connect(function ()
					if CustomValue.Text == "" then
						CustomValue.Text  = de
					end
					CustomValue.Text  = CustomValue.Text  + tonumber(lol)
					if  tonumber(CustomValue.Text) > max then
						CustomValue.Text  = max
					end
					if  tonumber(CustomValue.Text) < min then
						CustomValue.Text  = min
					end
					MainValue:TweenSize(UDim2.new((CustomValue.Text  or 0  ) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
					ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.5, 0) , "Out", "Sine", 0.2, true)
					if floor == true then
						CustomValue.Text = tostring(CustomValue.Text and string.format("%.1f",(CustomValue.Text / max) * (max - min) + min) )
					else
						CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
					end
					pcall(callback, CustomValue.Text)
				end)

			end

			end

			function items:Drop(text,use,option,callback)

			if use == false then
				local DropFrame = Instance.new("Frame")

				DropFrame.Name = "DropFrame"
				DropFrame.Parent = ScrollingFrame_Pageframe
				DropFrame.BackgroundColor3 =  Color3.fromRGB(23, 23, 23)-- _G.ColorMethod
				DropFrame.BorderSizePixel = 0
				DropFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				DropFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				DropFrame.Size = UDim2.new(0, 213, 0, 30) -- UDim2.new(0, 213, 0, 35)
				DropFrame.BackgroundTransparency  = 0
				DropFrame.ClipsDescendants = true

				local ConnerDropFrame = Instance.new("UICorner")

				ConnerDropFrame.CornerRadius = UDim.new(0, 4)
				ConnerDropFrame.Name = ""
				ConnerDropFrame.Parent = DropFrame

				local DropFrameStroke = Instance.new("UIStroke")

				DropFrameStroke.Thickness = 1
				DropFrameStroke.Name = ""
				DropFrameStroke.Parent = DropFrame
				DropFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
				DropFrameStroke.Color = _G.ColorMethod
				DropFrameStroke.Transparency = 0.7





				local LabelFrameDrop = Instance.new("TextLabel")

				LabelFrameDrop.Parent = DropFrame
				LabelFrameDrop.Name = "LabelFrameDrop"
				LabelFrameDrop.BackgroundColor3 = _G.ColorMethod
				LabelFrameDrop.Position = UDim2.new(0., 0, 0., 0)
				LabelFrameDrop.Size =    UDim2.new(0, 213, 0, 30)
				LabelFrameDrop.Font = Enum.Font.SourceSansSemibold
				LabelFrameDrop.Text = ""
				LabelFrameDrop.TextColor3 = Color3.fromRGB(155, 155, 155)
				LabelFrameDrop.TextSize = 14.000
			--   LabelFrameDrop.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelFrameDrop.BackgroundTransparency = 1
				LabelFrameDrop.TextXAlignment = Enum.TextXAlignment.Left


				local TextLabel_TapDrop = Instance.new("TextLabel")

				TextLabel_TapDrop.Parent = LabelFrameDrop
				TextLabel_TapDrop.Name = "TextLabel_TapDrop"
				TextLabel_TapDrop.BackgroundColor3 = _G.ColorMethod
				TextLabel_TapDrop.Position = UDim2.new(0.04, 0, 0.14, 0)
				TextLabel_TapDrop.Size =    UDim2.new(0, 140, 0, 20)
				TextLabel_TapDrop.Font = Enum.Font.SourceSansSemibold
				TextLabel_TapDrop.Text = tostring(text).." :"
				TextLabel_TapDrop.TextColor3 = Color3.fromRGB(155, 155, 155)
				TextLabel_TapDrop.TextSize = 14.000
		--     TextLabel_TapDrop.AnchorPoint = Vector2.new(0.5, 0.5)
				TextLabel_TapDrop.BackgroundTransparency = 1
				TextLabel_TapDrop.TextXAlignment = Enum.TextXAlignment.Left


				local DropArbt_listimage = Instance.new("ImageButton")

				DropArbt_listimage.Parent = LabelFrameDrop
				DropArbt_listimage.BackgroundTransparency = 1.000
				DropArbt_listimage.AnchorPoint = Vector2.new(0.5, 0.5)
				DropArbt_listimage.Position = UDim2.new(0.9, 0, 0.5, 0)
				DropArbt_listimage.BorderSizePixel = 0
				DropArbt_listimage.Size = UDim2.new(0, 25, 0, 25)
				DropArbt_listimage.Image = "http://www.roblox.com/asset/?id=6031091004"
				DropArbt_listimage.ImageColor3 = Color3.fromRGB(155, 155, 155)

				local ScolDown = Instance.new("ScrollingFrame")

				ScolDown.Name = "ScolDown"
				ScolDown.Position = UDim2.new(0.02, 0, 1., 0)
				ScolDown.Parent = LabelFrameDrop
				ScolDown.Active = true
				ScolDown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ScolDown.BorderSizePixel = 0
				ScolDown.Size = UDim2.new(0, 205, 0, 115)
				ScolDown.ScrollBarThickness = 3
				ScolDown.ClipsDescendants = true
				ScolDown.BackgroundTransparency = 1
				ScolDown.CanvasSize = UDim2.new(0, 0, 0, 2)

				local UIListLayoutlist = Instance.new("UIListLayout")
				local UIPaddinglist = Instance.new("UIPadding")

				UIListLayoutlist.Name = "UIListLayoutlist"
				UIListLayoutlist.Parent = ScolDown
				UIListLayoutlist.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayoutlist.Padding = UDim.new(0, 5)

				UIPaddinglist.Name = "UIPaddinglist"
				UIPaddinglist.Parent = ScolDown
				UIPaddinglist.PaddingTop = UDim.new(0, 5)
				UIPaddinglist.PaddingLeft = UDim.new(0, 12)

				local ButtonDrop = Instance.new("TextButton")

				ButtonDrop.Parent = DropFrame
				ButtonDrop.Name = "ButtonDrop"
				ButtonDrop.BackgroundColor3 = _G.ColorMethod
				ButtonDrop.Size = UDim2.new(0, 213, 0, 30)
				ButtonDrop.Font = Enum.Font.SourceSansSemibold
				ButtonDrop.Text = ""
				ButtonDrop.TextColor3 = Color3.fromRGB(155, 155, 155)
				ButtonDrop.TextSize = 13.000
			--   ButtonDrop.AnchorPoint = Vector2.new(0.5, 0.5)
				ButtonDrop.Position = UDim2.new(0., 0, 0., 0)
				ButtonDrop.TextXAlignment = Enum.TextXAlignment.Center
				ButtonDrop.BackgroundTransparency = 1
				ButtonDrop.TextWrapped = true
				ButtonDrop.AutoButtonColor = false
				ButtonDrop.ClipsDescendants = true

				local dog = false

				local FrameSize = 75
				local cout = 0
				for i , v in pairs(option) do
					cout =cout + 1
					if cout == 1 then
						FrameSize = 75
					elseif cout == 2 then
						FrameSize = 110
					elseif cout >= 3 then
						FrameSize = 150
					end

					local ListFrame = Instance.new("Frame")

					ListFrame.Name = "ListFrame"
					ListFrame.Parent = ScolDown
					ListFrame.BackgroundColor3 =  Color3.fromRGB(22553, 23, 23)-- _G.ColorMethod
					ListFrame.BorderSizePixel = 0
					ListFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
					ListFrame.AnchorPoint = Vector2.new(0.5, 0.5)
					ListFrame.Size = UDim2.new(0, 180, 0, 30) -- UDim2.new(0, 213, 0, 35)
					ListFrame.BackgroundTransparency  = 1
					ListFrame.ClipsDescendants = true

					local TextLabel_TapDro2p = Instance.new("TextLabel")

					TextLabel_TapDro2p.Parent = ListFrame
					TextLabel_TapDro2p.Name =  tostring(v).."Dropdown"
					TextLabel_TapDro2p.BackgroundColor3 = _G.ColorMethod
					TextLabel_TapDro2p.Position = UDim2.new(0.5, 0, 0.5, 0)
					TextLabel_TapDro2p.Size =  UDim2.new(0, 180, 0, 30)
					TextLabel_TapDro2p.Font = Enum.Font.SourceSansSemibold
					TextLabel_TapDro2p.Text = tostring(v)
					TextLabel_TapDro2p.TextColor3 = Color3.fromRGB(155, 155, 155)
					TextLabel_TapDro2p.TextSize = 14.000
					TextLabel_TapDro2p.AnchorPoint = Vector2.new(0.5, 0.5)
					TextLabel_TapDro2p.BackgroundTransparency = 1
					TextLabel_TapDro2p.TextXAlignment = Enum.TextXAlignment.Center

					local ButtonDrop2 = Instance.new("TextButton")

					ButtonDrop2.Parent = ListFrame
					ButtonDrop2.Name = "ButtonDrop2"
					ButtonDrop2.BackgroundColor3 = _G.ColorMethod
					ButtonDrop2.Size = UDim2.new(0, 213, 0, 30)
					ButtonDrop2.Font = Enum.Font.SourceSansSemibold
					ButtonDrop2.Text = ""
					ButtonDrop2.TextColor3 = Color3.fromRGB(155, 155, 155)
					ButtonDrop2.TextSize = 13.000
				--   ButtonDrop2.AnchorPoint = Vector2.new(0.5, 0.5)
					ButtonDrop2.Position = UDim2.new(0., 0, 0., 0)
					ButtonDrop2.TextXAlignment = Enum.TextXAlignment.Center
					ButtonDrop2.BackgroundTransparency = 1
					ButtonDrop2.TextWrapped = true
					ButtonDrop2.AutoButtonColor = false
					ButtonDrop2.ClipsDescendants = true

					ButtonDrop2.MouseEnter:Connect(function ()
						TweenService:Create(
							TextLabel_TapDro2p,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
						):Play()
					end)

					ButtonDrop2.MouseLeave:Connect(function ()
						TweenService:Create(
							TextLabel_TapDro2p,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
						):Play()
					end)

					ButtonDrop2.MouseButton1Click:Connect(function()
						TweenService:Create(
							DropFrame,
							TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 213, 0, 30)} -- UDim2.new(0, 128, 0, 25)
						):Play()
						TweenService:Create(
							DropArbt_listimage,
							TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
							{Rotation = 0}
						):Play()
						TextLabel_TapDrop.Text =  text.." : "..tostring(v)
						callback(v)
						dog = not dog
					end
				)


					ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
				end


				DropFrame.MouseEnter:Connect(function()
					TweenService:Create(
						DropFrameStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextLabel_TapDrop,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						DropArbt_listimage,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

			DropFrame.MouseLeave:Connect(function()
					TweenService:Create(
						DropFrameStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0.7} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextLabel_TapDrop,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						DropArbt_listimage,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)


			ButtonDrop.MouseButton1Click:Connect(function()
				if dog == false then
					TweenService:Create(
						DropFrame,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = UDim2.new(0, 213, 0, FrameSize)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						DropArbt_listimage,
						TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
						{Rotation = -180}
					):Play()
					ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
				else
					TweenService:Create(
						DropFrame,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = UDim2.new(0, 213, 0, 30)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						DropArbt_listimage,
						TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
				end
				dog = not dog
			end
		)
		ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )

			local dropfunc = {}

			function dropfunc:Clear()
				TextLabel_TapDrop.Text = tostring(text).." :"
				for i, v in next, ScolDown:GetChildren() do
					if v:IsA("Frame") then
						v:Destroy()
					end
				end
				ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
			end

			function dropfunc:Add(t)
				local ListFrame = Instance.new("Frame")

				ListFrame.Name = "ListFrame"
				ListFrame.Parent = ScolDown
				ListFrame.BackgroundColor3 =  Color3.fromRGB(22553, 23, 23)-- _G.ColorMethod
				ListFrame.BorderSizePixel = 0
				ListFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				ListFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ListFrame.Size = UDim2.new(0, 180, 0, 30) -- UDim2.new(0, 213, 0, 35)
				ListFrame.BackgroundTransparency  = 1
				ListFrame.ClipsDescendants = true

				local TextLabel_TapDro2p = Instance.new("TextLabel")

				TextLabel_TapDro2p.Parent = ListFrame
				TextLabel_TapDro2p.Name =  tostring(t).."Dropdown"
				TextLabel_TapDro2p.BackgroundColor3 = _G.ColorMethod
				TextLabel_TapDro2p.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextLabel_TapDro2p.Size =  UDim2.new(0, 180, 0, 30)
				TextLabel_TapDro2p.Font = Enum.Font.SourceSansSemibold
				TextLabel_TapDro2p.Text = tostring(t)
				TextLabel_TapDro2p.TextColor3 = Color3.fromRGB(155, 155, 155)
				TextLabel_TapDro2p.TextSize = 14.000
				TextLabel_TapDro2p.AnchorPoint = Vector2.new(0.5, 0.5)
				TextLabel_TapDro2p.BackgroundTransparency = 1
				TextLabel_TapDro2p.TextXAlignment = Enum.TextXAlignment.Center

				local ButtonDrop2 = Instance.new("TextButton")

				ButtonDrop2.Parent = ListFrame
				ButtonDrop2.Name = "ButtonDrop2"
				ButtonDrop2.BackgroundColor3 = _G.ColorMethod
				ButtonDrop2.Size = UDim2.new(0, 213, 0, 30)
				ButtonDrop2.Font = Enum.Font.SourceSansSemibold
				ButtonDrop2.Text = ""
				ButtonDrop2.TextColor3 = Color3.fromRGB(155, 155, 155)
				ButtonDrop2.TextSize = 13.000
			--   ButtonDrop2.AnchorPoint = Vector2.new(0.5, 0.5)
				ButtonDrop2.Position = UDim2.new(0., 0, 0., 0)
				ButtonDrop2.TextXAlignment = Enum.TextXAlignment.Center
				ButtonDrop2.BackgroundTransparency = 1
				ButtonDrop2.TextWrapped = true
				ButtonDrop2.AutoButtonColor = false
				ButtonDrop2.ClipsDescendants = true

				ButtonDrop2.MouseEnter:Connect(function ()
					TweenService:Create(
						TextLabel_TapDro2p,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end)

				ButtonDrop2.MouseLeave:Connect(function ()
					TweenService:Create(
						TextLabel_TapDro2p,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end)

				ButtonDrop2.MouseButton1Click:Connect(function()
					TweenService:Create(
						DropFrame,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = UDim2.new(0, 213, 0, 30)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						DropArbt_listimage,
						TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
						{Rotation = 0}
					):Play()
					TextLabel_TapDrop.Text =  text.." : "..tostring(t)
					callback(t)
					dog = not dog
				end
			)

				ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
			end
			return dropfunc

		else

			local location = option.location or self.flags
			local flag = not use and option.flag or ""
			local callback = callback or function() end
			local list = option.list or {}
			local default = list.default or list[1].Name

			if not use then
				location[flag] = default
			end


			local DropFrame = Instance.new("Frame")

			DropFrame.Name = "DropFrame"
			DropFrame.Parent = ScrollingFrame_Pageframe
			DropFrame.BackgroundColor3 =  Color3.fromRGB(23, 23, 23)-- _G.ColorMethod
			DropFrame.BorderSizePixel = 0
			DropFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
			DropFrame.AnchorPoint = Vector2.new(0.5, 0.5)
			DropFrame.Size = UDim2.new(0, 213, 0, 30) -- UDim2.new(0, 213, 0, 35)
			DropFrame.BackgroundTransparency  = 0
			DropFrame.ClipsDescendants = true

			local ConnerDropFrame = Instance.new("UICorner")

			ConnerDropFrame.CornerRadius = UDim.new(0, 4)
			ConnerDropFrame.Name = ""
			ConnerDropFrame.Parent = DropFrame

			local DropFrameStroke = Instance.new("UIStroke")

			DropFrameStroke.Thickness = 1
			DropFrameStroke.Name = ""
			DropFrameStroke.Parent = DropFrame
			DropFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
			DropFrameStroke.Color = _G.ColorMethod
			DropFrameStroke.Transparency = 0.7





			local LabelFrameDrop = Instance.new("TextLabel")

			LabelFrameDrop.Parent = DropFrame
			LabelFrameDrop.Name = "LabelFrameDrop"
			LabelFrameDrop.BackgroundColor3 = _G.ColorMethod
			LabelFrameDrop.Position = UDim2.new(0., 0, 0., 0)
			LabelFrameDrop.Size =    UDim2.new(0, 213, 0, 30)
			LabelFrameDrop.Font = Enum.Font.SourceSansSemibold
			LabelFrameDrop.Text = ""
			LabelFrameDrop.TextColor3 = Color3.fromRGB(155, 155, 155)
			LabelFrameDrop.TextSize = 14.000
		--   LabelFrameDrop.AnchorPoint = Vector2.new(0.5, 0.5)
			LabelFrameDrop.BackgroundTransparency = 1
			LabelFrameDrop.TextXAlignment = Enum.TextXAlignment.Left


			local TextLabel_TapDrop = Instance.new("TextLabel")

			TextLabel_TapDrop.Parent = LabelFrameDrop
			TextLabel_TapDrop.Name = "TextLabel_TapDrop"
			TextLabel_TapDrop.BackgroundColor3 = _G.ColorMethod
			TextLabel_TapDrop.Position = UDim2.new(0.04, 0, 0.14, 0)
			TextLabel_TapDrop.Size =    UDim2.new(0, 140, 0, 20)
			TextLabel_TapDrop.Font = Enum.Font.SourceSansSemibold
			TextLabel_TapDrop.Text = tostring(text).." :"
			TextLabel_TapDrop.TextColor3 = Color3.fromRGB(155, 155, 155)
			TextLabel_TapDrop.TextSize = 14.000
	--     TextLabel_TapDrop.AnchorPoint = Vector2.new(0.5, 0.5)
			TextLabel_TapDrop.BackgroundTransparency = 1
			TextLabel_TapDrop.TextXAlignment = Enum.TextXAlignment.Left


			local DropArbt_listimage = Instance.new("ImageButton")

			DropArbt_listimage.Parent = LabelFrameDrop
			DropArbt_listimage.BackgroundTransparency = 1.000
			DropArbt_listimage.AnchorPoint = Vector2.new(0.5, 0.5)
			DropArbt_listimage.Position = UDim2.new(0.9, 0, 0.5, 0)
			DropArbt_listimage.BorderSizePixel = 0
			DropArbt_listimage.Size = UDim2.new(0, 25, 0, 25)
			DropArbt_listimage.Image = "http://www.roblox.com/asset/?id=6031091004"
			DropArbt_listimage.ImageColor3 = Color3.fromRGB(155, 155, 155)

			local ScolDown = Instance.new("ScrollingFrame")

			ScolDown.Name = "ScolDown"
			ScolDown.Position = UDim2.new(0.02, 0, 1., 0)
			ScolDown.Parent = LabelFrameDrop
			ScolDown.Active = true
			ScolDown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ScolDown.BorderSizePixel = 0
			ScolDown.Size = UDim2.new(0, 205, 0, 115)
			ScolDown.ScrollBarThickness = 3
			ScolDown.ClipsDescendants = true
			ScolDown.BackgroundTransparency = 1
			ScolDown.CanvasSize = UDim2.new(0, 0, 0, 2)

			local UIListLayoutlist = Instance.new("UIListLayout")
			local UIPaddinglist = Instance.new("UIPadding")

			UIListLayoutlist.Name = "UIListLayoutlist"
			UIListLayoutlist.Parent = ScolDown
			UIListLayoutlist.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayoutlist.Padding = UDim.new(0, 5)

			UIPaddinglist.Name = "UIPaddinglist"
			UIPaddinglist.Parent = ScolDown
			UIPaddinglist.PaddingTop = UDim.new(0, 5)
			UIPaddinglist.PaddingLeft = UDim.new(0, 12)

			local ButtonDrop = Instance.new("TextButton")

			ButtonDrop.Parent = DropFrame
			ButtonDrop.Name = "ButtonDrop"
			ButtonDrop.BackgroundColor3 = _G.ColorMethod
			ButtonDrop.Size = UDim2.new(0, 213, 0, 30)
			ButtonDrop.Font = Enum.Font.SourceSansSemibold
			ButtonDrop.Text = ""
			ButtonDrop.TextColor3 = Color3.fromRGB(155, 155, 155)
			ButtonDrop.TextSize = 13.000
		--   ButtonDrop.AnchorPoint = Vector2.new(0.5, 0.5)
			ButtonDrop.Position = UDim2.new(0., 0, 0., 0)
			ButtonDrop.TextXAlignment = Enum.TextXAlignment.Center
			ButtonDrop.BackgroundTransparency = 1
			ButtonDrop.TextWrapped = true
			ButtonDrop.AutoButtonColor = false
			ButtonDrop.ClipsDescendants = true

			local dog = false

			local FrameSize = 75
			local cout = 0
			for i , v in pairs(list) do
				cout =cout + 1
				if cout == 1 then
					FrameSize = 75
				elseif cout == 2 then
					FrameSize = 110
				elseif cout >= 3 then
					FrameSize = 150
				end

				local listtog = Instance.new("Frame")

				listtog.Name = "listtog"
				listtog.Parent = ScolDown
				listtog.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
				listtog.BackgroundTransparency =1
				listtog.BorderSizePixel = 0
				listtog.ClipsDescendants = true
				listtog.AnchorPoint = Vector2.new(0.5, 0.5)
				listtog.Position = UDim2.new(0.5, 0, 0.5, 0)
				listtog.Size = UDim2.new(0, 210, 0, 33)


				local listtextbutton = Instance.new("TextButton")

				listtextbutton.Parent = listtog
				listtextbutton.BackgroundTransparency =1
				listtextbutton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
				listtextbutton.BorderSizePixel = 0
				listtextbutton.Size =  UDim2.new(0, 210, 0, 33)
				listtextbutton.AutoButtonColor = false
				listtextbutton.Font = Enum.Font.SourceSans
				listtextbutton.Text = " "
				listtextbutton.TextColor3 = Color3.fromRGB(0, 0, 0)
				listtextbutton.TextSize = 14.000

				local farmtoglist = Instance.new("TextButton")

				farmtoglist.Parent = listtextbutton
				farmtoglist.BackgroundColor3 = _G.ColorMethod
				farmtoglist.BorderColor3 = _G.ColorMethod
				farmtoglist.BorderSizePixel = 0
				farmtoglist.AnchorPoint = Vector2.new(0.5, 0.5)
				farmtoglist.Position = UDim2.new(0.1, 0, 0.5, 0)
				farmtoglist.Size = UDim2.new(0, 23, 0, 23)
				farmtoglist.Font = Enum.Font.SourceSans
				farmtoglist.Text = " "
				farmtoglist.TextColor3 = Color3.fromRGB(0, 0, 0)
				farmtoglist.TextSize = 14.000
				farmtoglist.AutoButtonColor = false


				local farmtoglist2 = Instance.new("TextButton")

				farmtoglist2.Parent = farmtoglist
				farmtoglist2.BackgroundColor3 = Color3.fromRGB(32, 32,32)
				farmtoglist2.BorderColor3 = _G.ColorMethod
				farmtoglist2.BorderSizePixel = 0
				farmtoglist2.AnchorPoint = Vector2.new(0.5, 0.5)
				farmtoglist2.Position = UDim2.new(0.5, 0, 0.5, 0)
				farmtoglist2.Size = UDim2.new(0, 21, 0, 21)
				farmtoglist2.Font = Enum.Font.SourceSans
				farmtoglist2.Text = " "
				farmtoglist2.TextColor3 = Color3.fromRGB(0, 0, 0)
				farmtoglist2.TextSize = 14.000
				farmtoglist2.AutoButtonColor = false


				local listimage = Instance.new("ImageButton")

				listimage.Parent = farmtoglist2
				listimage.BackgroundTransparency = 1.000
				listimage.AnchorPoint = Vector2.new(0.5, 0.5)
				listimage.Position = UDim2.new(0.5, 0, 0.5, 0)
				listimage.BorderSizePixel = 0
				listimage.Size = UDim2.new(0, 0, 0, 0)
				listimage.Image = "http://www.roblox.com/asset/?id=5880482965"


				local textlist = Instance.new("TextLabel")


				textlist.Parent = listtextbutton
				textlist.Name = "textlist"
				textlist.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				textlist.BackgroundTransparency = 1.000
				textlist.AnchorPoint = Vector2.new(0.5, 0.5)
				textlist.Position = UDim2.new(0.5, 0, 0.5, 0)
				textlist.BorderSizePixel = 0
				textlist.Size = UDim2.new(0, 91, 0, 25)
				textlist.Font = Enum.Font.GothamSemibold
				textlist.Text = tostring(v.Name)
				textlist.TextColor3 = Color3.fromRGB(255, 255, 255)
				textlist.TextSize = 13.000



				local TextButton_Pageframe_Uiconner2 = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner2.CornerRadius = UDim.new(0, 5)
				TextButton_Pageframe_Uiconner2.Name = ""
				TextButton_Pageframe_Uiconner2.Parent = farmtoglist

				local TextButton_Pageframe_Uiconner22 = Instance.new("UICorner")

				TextButton_Pageframe_Uiconner22.CornerRadius = UDim.new(0, 5)
				TextButton_Pageframe_Uiconner22.Name = ""
				TextButton_Pageframe_Uiconner22.Parent = farmtoglist2



				listtextbutton.MouseButton1Click:Connect(function()
					if not  location[v.flag] then
						listimage:TweenSizeAndPosition(UDim2.new(0, 30, 0, 30), UDim2.new(0.5, 0, 0.5, 0), "In", "Bounce", 0.1, true)
						wait(0.1)
						listimage:TweenSizeAndPosition(UDim2.new(0, 23, 0, 23), UDim2.new(0.5, 0, 0.5, 0), "In", "Bounce", 0.1, true)
					else
						listimage:TweenSizeAndPosition(UDim2.new(0, 30, 0, 30), UDim2.new(0.5, 0, 0.5, 0), "In", "Bounce", 0.1, true)
						wait(0.1)
						listimage:TweenSizeAndPosition(UDim2.new(0, 0, 0, 0), UDim2.new(0.5, 0, 0.5, 0), "In", "Bounce", 0.1, true)
					end
					location[v.flag] = not location[v.flag]
					callback(location[v.flag])
				end
			)

			if  location[v.flag] then
				listimage:TweenSizeAndPosition(UDim2.new(0, 30, 0, 30), UDim2.new(0.5, 0, 0.5, 0), "In", "Bounce", 0.1, true)
				wait(0.1)
				listimage:TweenSizeAndPosition(UDim2.new(0, 23, 0, 23), UDim2.new(0.5, 0, 0.5, 0), "In", "Bounce", 0.1, true)

				callback(location[v.flag])
			end

				ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
			end


			DropFrame.MouseEnter:Connect(function()
				TweenService:Create(
					DropFrameStroke,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Transparency = 0} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextLabel_TapDrop,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					DropArbt_listimage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
				):Play()
			end
		)

		DropFrame.MouseLeave:Connect(function()
				TweenService:Create(
					DropFrameStroke,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Transparency = 0.7} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextLabel_TapDrop,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					DropArbt_listimage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
				):Play()
			end
		)


		ButtonDrop.MouseButton1Click:Connect(function()
			if dog == false then
				TweenService:Create(
					DropFrame,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 213, 0, FrameSize)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					DropArbt_listimage,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = -180}
				):Play()
				ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
			else
				TweenService:Create(
					DropFrame,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 213, 0, 30)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					DropArbt_listimage,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
				ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )
			end
			dog = not dog
		end
	)
	ScolDown.CanvasSize = UDim2.new(0,0,0,UIListLayoutlist.AbsoluteContentSize.Y + 10  )



			end



			end

			function items:TextBox(text,text2,callback)
				local TextFrame = Instance.new("Frame")

				TextFrame.Name = "TextFrame"
				TextFrame.Parent = ScrollingFrame_Pageframe
				TextFrame.BackgroundColor3 =  Color3.fromRGB(23, 23, 23)
				TextFrame.BorderSizePixel = 0
				TextFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				TextFrame.Size = UDim2.new(0, 213, 0, 70)
				TextFrame.BackgroundTransparency  = 1
				TextFrame.ClipsDescendants = true

				local LabelNameSliderxd = Instance.new("TextLabel")

				LabelNameSliderxd.Parent = TextFrame
				LabelNameSliderxd.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				LabelNameSliderxd.BackgroundTransparency = 1
				LabelNameSliderxd.BorderSizePixel = 0
				LabelNameSliderxd.Position = UDim2.new(0.5, 0, 0.2, 0)
				LabelNameSliderxd.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelNameSliderxd.Size = UDim2.new(0, 160, 0, 20)
				LabelNameSliderxd.Font = Enum.Font.GothamBold
				LabelNameSliderxd.Text = tostring(text)
				LabelNameSliderxd.TextColor3 = Color3.fromRGB(155, 155, 155)
				LabelNameSliderxd.TextSize = 11.000
				LabelNameSliderxd.TextXAlignment = Enum.TextXAlignment.Center

				local ConerTextBox = Instance.new("UICorner")

				ConerTextBox.CornerRadius = UDim.new(0, 4)
				ConerTextBox.Name = ""
				ConerTextBox.Parent = TextFrame

				local FrameBox = Instance.new("Frame")

				FrameBox.Name = "TextFrame"
				FrameBox.Parent = TextFrame
				FrameBox.BackgroundColor3 =  Color3.fromRGB(23, 23, 23)
				FrameBox.BorderSizePixel = 0
				FrameBox.Position = UDim2.new(0.5, 0, 0.65, 0)
				FrameBox.AnchorPoint = Vector2.new(0.5, 0.5)
				FrameBox.Size = UDim2.new(0, 158, 0, 30)
				FrameBox.BackgroundTransparency  = 0.2
				FrameBox.ClipsDescendants = true
				FrameBox.AnchorPoint = Vector2.new(0.5, 0.5)

				local TextFrame2 = Instance.new("TextBox")

				TextFrame2.Parent = FrameBox
				TextFrame2.BackgroundColor3 = _G.ColorMethod
				TextFrame2.BorderSizePixel = 0
				TextFrame2.ClipsDescendants = true
				TextFrame2.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextFrame2.AnchorPoint = Vector2.new(0.5, 0.5)
				TextFrame2.Size = UDim2.new(0, 158, 0, 35)
				TextFrame2.Font = Enum.Font.GothamSemibold
				TextFrame2.PlaceholderColor3 = Color3.fromRGB(155, 155, 155)
				TextFrame2.PlaceholderText = text2
				TextFrame2.Text = ""
				TextFrame2.TextColor3 = Color3.fromRGB(155, 155, 155)
				TextFrame2.TextSize = 12.000
				TextFrame2.BackgroundTransparency = 1

				local ConerTextBox2 = Instance.new("UICorner")

				ConerTextBox2.CornerRadius = UDim.new(0, 4)
				ConerTextBox2.Name = ""
				ConerTextBox2.Parent = FrameBox

				local TextBoxStroke = Instance.new("UIStroke")

				TextBoxStroke.Thickness = 1
				TextBoxStroke.Name = ""
				TextBoxStroke.Parent = FrameBox
				TextBoxStroke.LineJoinMode = Enum.LineJoinMode.Round
				TextBoxStroke.Color = _G.ColorMethod
				TextBoxStroke.Transparency = 0.7


				TextFrame.MouseEnter:Connect(function()
					TweenService:Create(
						FrameBox,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = UDim2.new(0, 213, 0, 30)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						FrameBox,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextFrame2,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{PlaceholderColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextFrame2,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelNameSliderxd,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextBoxStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Thickness = 0} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

			TextFrame.MouseLeave:Connect(function()
				TweenService:Create(
					FrameBox,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 158, 0, 30)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					FrameBox,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(23, 23, 23)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextFrame2,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{PlaceholderColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextBoxStroke,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Thickness = 1} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					LabelNameSliderxd,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					TextFrame2,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
				):Play()
			end
			)
				TextFrame2.FocusLost:Connect(function ()
					if #TextFrame2.Text > 0 then
						pcall(callback,TextFrame2.Text)
					end
				end)
			end

			function items:Bind(text,bi,callback)
				local BindFrame = Instance.new("Frame")

				BindFrame.Name = "BindFrame"
				BindFrame.Parent = ScrollingFrame_Pageframe
				BindFrame.BackgroundColor3 =  Color3.fromRGB(23, 23, 23)
				BindFrame.BorderSizePixel = 0
				BindFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				BindFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				BindFrame.Size = UDim2.new(0, 213, 0, 35)
				BindFrame.BackgroundTransparency  = 0
				BindFrame.ClipsDescendants = true

				local BindConner = Instance.new("UICorner")

				BindConner.CornerRadius = UDim.new(0, 4)
				BindConner.Name = ""
				BindConner.Parent = BindFrame

				local BindStroke = Instance.new("UIStroke")

				BindStroke.Thickness = 1
				BindStroke.Name = ""
				BindStroke.Parent = BindFrame
				BindStroke.LineJoinMode = Enum.LineJoinMode.Round
				BindStroke.Color = _G.ColorMethod
				BindStroke.Transparency = 0.7

				local LabelBind = Instance.new("TextLabel")

				LabelBind.Parent = BindFrame
				LabelBind.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				LabelBind.BackgroundTransparency = 1
				LabelBind.BorderSizePixel = 0
				LabelBind.Position = UDim2.new(0.4, 0, 0.5, 0)
				LabelBind.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelBind.Size = UDim2.new(0, 140, 0, 35)
				LabelBind.Font = Enum.Font.GothamBold
				LabelBind.Text = tostring(text)
				LabelBind.TextColor3 = Color3.fromRGB(155, 155, 155)
				LabelBind.TextSize = 11.000
				LabelBind.TextXAlignment = Enum.TextXAlignment.Left

				local key = bi.Name
				local LabelBind2 = Instance.new("TextButton")

				LabelBind2.Parent = BindFrame
				LabelBind2.Name = "LabelBind2"
				LabelBind2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				LabelBind2.Size = UDim2.new(0, 100, 0, 19)
				LabelBind2.Font = Enum.Font.GothamBold
				LabelBind2.Text =  "KEY : "..key
				LabelBind2.TextColor3 = Color3.fromRGB(155, 155, 155)
				LabelBind2.TextSize = 11.000
				LabelBind2.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelBind2.Position = UDim2.new(0.75, 0, 0.5, 0)
				LabelBind2.TextXAlignment = Enum.TextXAlignment.Center
				LabelBind2.BackgroundTransparency = 1
				LabelBind2.TextWrapped = true

				local LabelBind22 = Instance.new("TextButton")

				LabelBind22.Parent = BindFrame
				LabelBind22.Name = "LabelBind22"
				LabelBind22.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				LabelBind22.Size = UDim2.new(0, 213, 0, 35)
				LabelBind22.Font = Enum.Font.GothamBold
				LabelBind22.Text =  ""
				LabelBind22.TextColor3 = Color3.fromRGB(155, 155, 155)
				LabelBind22.TextSize = 11.000
				LabelBind22.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelBind22.Position = UDim2.new(0.5, 0, 0.5, 0)
				LabelBind22.TextXAlignment = Enum.TextXAlignment.Center
				LabelBind22.BackgroundTransparency = 1
				LabelBind22.TextWrapped = true

				BindFrame.MouseEnter:Connect(function()
					TweenService:Create(
						BindStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelBind22,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelBind2,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelBind,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)
				BindFrame.MouseLeave:Connect(function()
					TweenService:Create(
						BindStroke,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0.7} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelBind22,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelBind2,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						LabelBind,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
				end
			)

				LabelBind22.MouseButton1Click:Connect(function ()


					LabelBind2.Text = "KEY : ".."..."
					local inputwait = game:GetService("UserInputService").InputBegan:wait()
					local fuckulop = inputwait.KeyCode == Enum.KeyCode.Unknown and inputwait.UserInputType or inputwait.KeyCode

					if
					fuckulop.Name ~= "Focus" and fuckulop.Name ~= "MouseMovement" and fuckulop.Name ~= "Focus"
					then
						LabelBind2.Text =  "KEY : "..fuckulop.Name
						key = fuckulop.Name
					end
					-- if fuckulop.Name ~= "Unknown" then
					--     LabelBind2.Text = fuckulop.Name
					--     key = fuckulop.Name
					-- end

				end)


				game:GetService("UserInputService").InputBegan:connect(
					function(current)
						local fuckulop2 = current.KeyCode == Enum.KeyCode.Unknown and current.UserInputType or current.KeyCode

							if fuckulop2.Name ==  key then
								pcall(callback)

						end
					end
					)

			end

			function items:Line()
				local LineFrame = Instance.new("Frame")

				LineFrame.Name = "LineFrame"
				LineFrame.Parent = ScrollingFrame_Pageframe
				LineFrame.BackgroundColor3 =  _G.ColorMethod
				LineFrame.BorderSizePixel = 0
				LineFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
				LineFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				LineFrame.Size = UDim2.new(0, 213, 0, 1)
				LineFrame.BackgroundTransparency  = 0
				LineFrame.ClipsDescendants = true

				local LineFrame_BindConner = Instance.new("UICorner")

				LineFrame_BindConner.CornerRadius = UDim.new(0, 30)
				LineFrame_BindConner.Name = ""
				LineFrame_BindConner.Parent = LineFrame

			end

			function items:Color(text,preset,callback)
				local Pixker = Instance.new("Frame")

				Pixker.Name = "Pixker"
				Pixker.Parent = ScrollingFrame_Pageframe
				Pixker.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
				Pixker.Position = UDim2.new(0.0833333358, 0, 0.235135213, 0)
				Pixker.Size = UDim2.new(0, 213, 0, 33)
				Pixker.BackgroundTransparency = 0
				Pixker.BorderSizePixel = 0
				Pixker.AnchorPoint = Vector2.new(0.5, 0.5)
				Pixker.Position = UDim2.new(0.5, 0, 0.5, 0)
				Pixker.ClipsDescendants = true


				local BoxColorCorner2 = Instance.new("UICorner")

				BoxColorCorner2.CornerRadius = UDim.new(0, 4)
				BoxColorCorner2.Name = "BoxColorCorner"
				BoxColorCorner2.Parent = Pixker

				local MheeFrameStroke = Instance.new("UIStroke")

				MheeFrameStroke.Thickness = 1
				MheeFrameStroke.Name = ""
				MheeFrameStroke.Parent = Pixker
				MheeFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
				MheeFrameStroke.Color = _G.ColorMethod
				MheeFrameStroke.Transparency = 0.7


				local TextFrameColor = Instance.new("TextLabel")

				TextFrameColor.Parent = Pixker
				TextFrameColor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextFrameColor.BorderSizePixel = 0
				TextFrameColor.Size = UDim2.new(0, 200, 0, 34)
				TextFrameColor.Font = Enum.Font.SourceSans
				TextFrameColor.Text = "  "
				TextFrameColor.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextFrameColor.TextSize = 14.000
				TextFrameColor.BackgroundTransparency = 1
				TextFrameColor.Position = UDim2.new(0., 0, 0., 0)

				local TextReal = Instance.new("TextLabel")

				TextReal.Parent = TextFrameColor
				TextReal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextReal.BorderSizePixel = 0
				TextReal.Size = UDim2.new(0, 140, 0, 34)
				TextReal.Font = Enum.Font.GothamSemibold
				TextReal.Text = text
				TextReal.TextColor3 = Color3.fromRGB(155,155, 155)
				TextReal.TextSize = 12.000
				TextReal.BackgroundTransparency = 1
				TextReal.Position = UDim2.new(0.05, 0, 0., 0)
				TextReal.TextXAlignment = Enum.TextXAlignment.Left

				local BoxColor = Instance.new("Frame")

				BoxColor.Name = "BoxColor"
				BoxColor.Parent = TextFrameColor
				BoxColor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				BoxColor.Position = UDim2.new(0.85, 0, 0.5, 0)
				BoxColor.Size = UDim2.new(0, 35, 0, 19)
				BoxColor.AnchorPoint = Vector2.new(0.5, 0.5)

				local BoxColorCorner = Instance.new("UICorner")

				BoxColorCorner.CornerRadius = UDim.new(0, 4)
				BoxColorCorner.Name = "BoxColorCorner"
				BoxColorCorner.Parent = BoxColor

				local TextButton_Dropdown = Instance.new("TextButton")


				TextButton_Dropdown.Parent = TextFrameColor
				TextButton_Dropdown.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				TextButton_Dropdown.BorderSizePixel = 0
				TextButton_Dropdown.Position = UDim2.new(0., 0, 0.14705883, 0)
				TextButton_Dropdown.Size = UDim2.new(0, 200, 0, 33)
				TextButton_Dropdown.Font = Enum.Font.SourceSans
				TextButton_Dropdown.Text = "  "
				TextButton_Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
				TextButton_Dropdown.TextSize = 14.000
				TextButton_Dropdown.AutoButtonColor = false
				--TextButton_Dropdown.AnchorPoint = Vector2.new(0.5, 0.5)
				TextButton_Dropdown.Position = UDim2.new(0, 0, 0, 0)
				TextButton_Dropdown.BackgroundTransparency = 1



				Pixker.MouseEnter:Connect(function()
					TweenService:Create(
						MheeFrameStroke,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0.}
					):Play()
					TweenService:Create(
						TextReal,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255, 255)}
					):Play()

				end)
				Pixker.MouseLeave:Connect(function()
					TweenService:Create(
						MheeFrameStroke,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency = 0.7}
					):Play()
					TweenService:Create(
						TextReal,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(155,155, 155)}
					):Play()
				end)
			-- Rainbow Toggle


			local TextButton_2_Toggle = Instance.new("TextButton")

			TextButton_2_Toggle.Parent = TextFrameColor
			TextButton_2_Toggle.BackgroundColor3 = Color3.fromRGB(155, 155, 155)
	--        TextButton_2_Toggle.BorderColor3 = _G.ColorMethod
			TextButton_2_Toggle.BorderSizePixel = 0
			TextButton_2_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
			TextButton_2_Toggle.Position = UDim2.new(0.2, 0, 1.87, 0)
			TextButton_2_Toggle.Size = UDim2.new(0, 30, 0, 13)
			TextButton_2_Toggle.Font = Enum.Font.SourceSans
			TextButton_2_Toggle.Text = " "
			TextButton_2_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextButton_2_Toggle.TextSize = 12.000
			TextButton_2_Toggle.AutoButtonColor = false

			local TextButton_Pageframe_Uiconner = Instance.new("UICorner")

			TextButton_Pageframe_Uiconner.CornerRadius = UDim.new(0, 30)
			TextButton_Pageframe_Uiconner.Name = ""
			TextButton_Pageframe_Uiconner.Parent = TextButton_2_Toggle

			local TextButton_3_Toggle = Instance.new("TextButton")

			TextButton_3_Toggle.Parent = TextButton_2_Toggle
			TextButton_3_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255,255)
	--        TextButton_3_Toggle.BorderColor3 = _G.ColorMethod
			TextButton_3_Toggle.BorderSizePixel = 0
			TextButton_3_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
			TextButton_3_Toggle.Position = UDim2.new(0.1, 0, 0.5, 0)
			TextButton_3_Toggle.Size = UDim2.new(0, 19, 0, 19)
			TextButton_3_Toggle.Font = Enum.Font.SourceSans
			TextButton_3_Toggle.Text = " "
			TextButton_3_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextButton_3_Toggle.TextSize = 12.000
			TextButton_3_Toggle.AutoButtonColor = false

			local TextButton_Pageframe_Uiconner2 = Instance.new("UICorner")

			TextButton_Pageframe_Uiconner2.CornerRadius = UDim.new(0, 30)
			TextButton_Pageframe_Uiconner2.Name = ""
			TextButton_Pageframe_Uiconner2.Parent = TextButton_3_Toggle

			local TextButton_4_Toggle = Instance.new("TextButton")

			TextButton_4_Toggle.Parent = TextButton_3_Toggle
			TextButton_4_Toggle.BackgroundColor3 = Color3.fromRGB(155, 155,155)
	--        TextButton_3_Toggle.BorderColor3 = _G.ColorMethod
			TextButton_4_Toggle.BorderSizePixel = 0
			TextButton_4_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
			TextButton_4_Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
			TextButton_4_Toggle.Size = UDim2.new(0, 27, 0, 27-2)
			TextButton_4_Toggle.Font = Enum.Font.SourceSans
			TextButton_4_Toggle.Text = " "
			TextButton_4_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextButton_4_Toggle.TextSize = 12.000
			TextButton_4_Toggle.AutoButtonColor = false
			TextButton_4_Toggle.BackgroundTransparency = 1
			TextButton_4_Toggle.Visible = true

			local TextButton_Pageframe_Uiconner4 = Instance.new("UICorner")

			TextButton_Pageframe_Uiconner4.CornerRadius = UDim.new(0, 30)
			TextButton_Pageframe_Uiconner4.Name = ""
			TextButton_Pageframe_Uiconner4.Parent = TextButton_4_Toggle


			local TextButton_Toggle = Instance.new("TextButton")

			TextButton_Toggle.Parent = ValueFrame
			TextButton_Toggle.BackgroundTransparency =1
			TextButton_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextButton_Toggle.BorderSizePixel = 0
			TextButton_Toggle.Size = UDim2.new(0, 50, 0, 20)
			TextButton_Toggle.AutoButtonColor = false
			TextButton_Toggle.Font = Enum.Font.SourceSans
			TextButton_Toggle.Text = " "
			TextButton_Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextButton_Toggle.TextSize = 12.000
			TextButton_Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
			TextButton_Toggle.Position = UDim2.new(1.25, 0, 0.4, 0)

			local TextButton_3_Toggle2 = Instance.new("TextLabel")

			TextButton_3_Toggle2.Parent = TextButton_2_Toggle
			TextButton_3_Toggle2.BackgroundColor3 = Color3.fromRGB(32, 32,32)
			TextButton_3_Toggle2.BorderColor3 = _G.ColorMethod
			TextButton_3_Toggle2.BorderSizePixel = 0
			TextButton_3_Toggle2.AnchorPoint = Vector2.new(0.5, 0.5)
			TextButton_3_Toggle2.Position = UDim2.new(1.9, 0, 0.5, 0)
			TextButton_3_Toggle2.Size = UDim2.new(0, 500, 0, 21)
			TextButton_3_Toggle2.Font = Enum.Font.SourceSansBold
			TextButton_3_Toggle2.Text = "Rainbow"
			TextButton_3_Toggle2.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextButton_3_Toggle2.TextSize = 13.000
			TextButton_3_Toggle2.BackgroundTransparency = 1

			local OMF = Instance.new("TextButton")

			OMF.Parent = TextButton_2_Toggle
			OMF.BackgroundTransparency =1
			OMF.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			OMF.BorderSizePixel = 0
			OMF.Size = UDim2.new(0, 100, 0, 20)
			OMF.AutoButtonColor = false
			OMF.Font = Enum.Font.SourceSans
			OMF.Text = " "
			OMF.TextColor3 = Color3.fromRGB(0, 0, 0)
			OMF.TextSize = 12.000
			OMF.AnchorPoint = Vector2.new(0.5, 0.5)
			OMF.Position = UDim2.new(1.3, 0, 0.5, 0)

			local Color =  Instance.new("ImageLabel")

			Color.Name = "Color"
			Color.Parent = TextFrameColor
			Color.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
			Color.Position = UDim2.new(0.05,0,4,0)
			Color.Size = UDim2.new(0, 195, 0, 40)
			Color.ZIndex = 0
			Color.BorderSizePixel = 0
			Color.Image = "rbxassetid://4155801252"

			local ColorFucj = Instance.new("UICorner")

			ColorFucj.CornerRadius = UDim.new(0, 4)
			ColorFucj.Name = ""
			ColorFucj.Parent = Color

			local ColorSelection =  Instance.new("ImageLabel")

			ColorSelection.Name = "ColorSelection"
			ColorSelection.Parent = Color
			ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
			ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ColorSelection.BackgroundTransparency = 1.000
			ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
			ColorSelection.Size = UDim2.new(0, 18, 0, 18)
			ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
			ColorSelection.ScaleType = Enum.ScaleType.Fit
			ColorSelection.Visible = true

			local Hue =  Instance.new("ImageLabel")

			Hue.Name = "Hue2"
			Hue.Parent = TextFrameColor
			Hue.Position = UDim2.new(0.14,0,3,0)
			Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Hue.Size = UDim2.new(0, 160, 0, 25)
			Hue.ZIndex = 0
			Hue.BorderSizePixel = 0

			local ColorFucj2 = Instance.new("UICorner")

			ColorFucj2.CornerRadius = UDim.new(0, 4)
			ColorFucj2.Name = ""
			ColorFucj2.Parent = Hue

			local HueGradient = Instance.new("UIGradient")

			HueGradient.Color = ColorSequence.new {
				ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
				ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
				ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
				ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
				ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
				ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
				ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
			}
			HueGradient.Rotation = 0
			HueGradient.Name = "HueGradient"
			HueGradient.Parent = Hue

			local HueSelection =  Instance.new("ImageLabel")

			HueSelection.Name = "HueSelection"
			HueSelection.Parent = Hue
			HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
			HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			HueSelection.BackgroundTransparency = 1.000
			HueSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
			HueSelection.Size = UDim2.new(0, 18, 0, 18)
			HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
			HueSelection.ScaleType = Enum.ScaleType.Fit
			HueSelection.Visible = true


			local BTN_XD = Instance.new("TextButton")

			BTN_XD.Parent = TextFrameColor
			BTN_XD.BackgroundColor3 = _G.ColorMethod
			BTN_XD.BorderColor3 = _G.ColorMethod
			BTN_XD.BorderSizePixel = 0
			BTN_XD.AnchorPoint = Vector2.new(0.5, 0.5)
			BTN_XD.Position = UDim2.new(0.8, 0, 1.9, 0)
			BTN_XD.Size = UDim2.new(0, 50, 0, 25)
			BTN_XD.Font = Enum.Font.GothamSemibold
			BTN_XD.Text = "Confirm"
			BTN_XD.TextColor3 = Color3.fromRGB(255, 255, 255)
			BTN_XD.TextSize = 11.000
			BTN_XD.AutoButtonColor = false

			local BTN_XD_COnner = Instance.new("UICorner")

			BTN_XD_COnner.CornerRadius = UDim.new(0, 4)
			BTN_XD_COnner.Name = ""
			BTN_XD_COnner.Parent = BTN_XD



			local MheeFrameStroke = Instance.new("UIStroke")

			MheeFrameStroke.Thickness = 1
			MheeFrameStroke.Name = ""
			MheeFrameStroke.Parent = BTN_XD
			MheeFrameStroke.LineJoinMode = Enum.LineJoinMode.Round
			MheeFrameStroke.Color = _G.ColorMethod
			MheeFrameStroke.Transparency = 0.7


			local UwU = false


			OMF.MouseButton1Click:Connect(function()
				if       UwU == false  then
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_3_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  _G.ColorMethod} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_2_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(153, 0, 102)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
				else
					TweenService:Create(
						TextButton_4_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_3_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(255, 255, 255)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TweenService:Create(
						TextButton_2_Toggle,
						TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 =  Color3.fromRGB(155, 155, 155)} -- UDim2.new(0, 128, 0, 25)
					):Play()
					TextButton_3_Toggle:TweenSizeAndPosition(UDim2.new(0, 19, 0, 19), UDim2.new(0.1, 0, 0.5, 0), "Out", "Quad", 0.3, true)
				end
				UwU = not UwU
			end
		)


		OMF.MouseEnter:Connect(function()
				TweenService:Create(
					TextButton_4_Toggle,
					TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 0.6} -- UDim2.new(0, 128, 0, 25)
				):Play()
			end
		)

		OMF.MouseLeave:Connect(function()
				TweenService:Create(
					TextButton_4_Toggle,
					TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1} -- UDim2.new(0, 128, 0, 25)
				):Play()
			end
		)

		OMF.MouseButton1Down:Connect(
				function()
					RainbowColorPicker = not RainbowColorPicker

					if ColorInput then
						ColorInput:Disconnect()
					end

					if HueInput then
						HueInput:Disconnect()
					end

					if RainbowColorPicker then


						OldToggleColor = BoxColor.BackgroundColor3
						OldColor = Color.BackgroundColor3
						OldColorSelectionPosition = ColorSelection.Position
						OldHueSelectionPosition = HueSelection.Position

						while RainbowColorPicker do
							BoxColor.BackgroundColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)
							Color.BackgroundColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)

							ColorSelection.Position = UDim2.new(1, 0, 0, 0)
							HueSelection.Position = UDim2.new(0,  Red.HueSelectionPosition, 0.5,0)

							pcall(callback, BoxColor.BackgroundColor3)
							wait()
						end
					elseif not RainbowColorPicker then

						BoxColor.BackgroundColor3 = OldToggleColor
						Color.BackgroundColor3 = OldColor

						ColorSelection.Position = OldColorSelectionPosition
						HueSelection.Position = OldHueSelectionPosition

						pcall(callback, BoxColor.BackgroundColor3)
					end
				end
			)
			TextButton_3_Toggle.MouseButton1Down:Connect(
				function()
					RainbowColorPicker = not RainbowColorPicker

					if ColorInput then
						ColorInput:Disconnect()
					end

					if HueInput then
						HueInput:Disconnect()
					end

					if RainbowColorPicker then


						OldToggleColor = BoxColor.BackgroundColor3
						OldColor = Color.BackgroundColor3
						OldColorSelectionPosition = ColorSelection.Position
						OldHueSelectionPosition = HueSelection.Position

						while RainbowColorPicker do
							BoxColor.BackgroundColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)
							Color.BackgroundColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)

							ColorSelection.Position = UDim2.new(1, 0, 0, 0)
							HueSelection.Position = UDim2.new(0,  Red.HueSelectionPosition, 0.5,0)

							pcall(callback, BoxColor.BackgroundColor3)
							wait()
						end
					elseif not RainbowColorPicker then

						BoxColor.BackgroundColor3 = OldToggleColor
						Color.BackgroundColor3 = OldColor

						ColorSelection.Position = OldColorSelectionPosition
						HueSelection.Position = OldHueSelectionPosition

						pcall(callback, BoxColor.BackgroundColor3)
					end
				end
			)


			local function UpdateColorPicker(nope)
				BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
				Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)

				pcall(callback, BoxColor.BackgroundColor3)
			end
			ColorH =
			1 -
			(math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
				Hue.AbsoluteSize.Y)
			ColorS =
				(math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
					Color.AbsoluteSize.X)
			ColorV =
				1 -
				(math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
					Color.AbsoluteSize.Y)

			BoxColor.BackgroundColor3 = preset
			Color.BackgroundColor3 = preset
			pcall(callback, BoxColor.BackgroundColor3)

			local RainbowColorPicker = false

			Color.InputBegan:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if RainbowColorPicker then
							return
						end

						if ColorInput then
							ColorInput:Disconnect()
						end

						ColorInput =
							RunService.RenderStepped:Connect(
								function()
								local ColorX =
									(math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
										Color.AbsoluteSize.X)
								local ColorY =
									(math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
										Color.AbsoluteSize.Y)

								ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
								ColorS = ColorX
								ColorV = 1 - ColorY

								UpdateColorPicker(true)
							end
							)
					end
				end
			)


				Color.InputEnded:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if ColorInput then
								ColorInput:Disconnect()
							end
						end
					end
				)

				Hue.InputBegan:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if RainbowColorPicker then
								return
							end

							if HueInput then
								HueInput:Disconnect()
							end

							HueInput =
								RunService.RenderStepped:Connect(
									function()
									local HueY =
										(math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
											Hue.AbsoluteSize.Y)
									local HueX =
										(math.clamp(Mouse.X- Hue.AbsolutePosition.X, 0, Hue.AbsoluteSize.X) /
											Hue.AbsoluteSize.X)

									HueSelection.Position = UDim2.new(HueX, 0, HueY, 0)
									ColorH = 1 - HueY

									UpdateColorPicker(true)
								end
								)
						end
					end
				)

				Hue.InputEnded:Connect(
					function(input)
						if input.UserInputType == Enum.UserInputType.MouseButton1 then
							if HueInput then
								HueInput:Disconnect()
							end
						end
					end
				)
				local sk = false
				TextButton_Dropdown.MouseButton1Click:Connect(function()
					if sk == false then
					TweenService:Create(
						Pixker,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = UDim2.new(0, 213, 0, 180)}
					):Play()
				else
					TweenService:Create(
						Pixker,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = UDim2.new(0, 213, 0, 33)}
					):Play()
				end
				sk = not sk
				end
			)
				BTN_XD.MouseButton1Click:Connect(
					function()
						TweenService:Create(
							Pixker,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 213, 0, 33)}
						):Play()
						sk = not sk
					end
				)


			end
			function items:Label(text,image)
				if image == nil then
					image = "6022668898"
				end
				local labaelchange = {}
				local LabelFrame = Instance.new("Frame")


				LabelFrame.Name = "Mainframenoti"
				LabelFrame.Parent = ScrollingFrame_Pageframe
				LabelFrame.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
				LabelFrame.BackgroundTransparency = 0
				LabelFrame.BorderSizePixel = 0
				LabelFrame.ClipsDescendants = false
				LabelFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelFrame.Position = UDim2.new(0.498, 0, 0.5, 0)
				LabelFrame.Size = UDim2.new(0, 213, 0, 28)

				local LabelFarm2 = Instance.new("TextLabel")

				LabelFarm2.Parent = LabelFrame
				LabelFarm2.Name = "TextLabel_Tap"
				LabelFarm2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
				LabelFarm2.Size =UDim2.new(0, 130, 0,24 )
				LabelFarm2.Font = Enum.Font.SourceSansSemibold
				LabelFarm2.Text = text
				LabelFarm2.TextColor3 = Color3.fromRGB(255, 255, 255)
				LabelFarm2.TextSize = 12.000
				LabelFarm2.AnchorPoint = Vector2.new(0.5, 0.5)
				LabelFarm2.Position = UDim2.new(0.5, 0, 0.5, 0)
				LabelFarm2.TextXAlignment = Enum.TextXAlignment.Center
				LabelFarm2.BackgroundTransparency = 1
				LabelFarm2.TextWrapped = true

				local ImageLabel_gx = Instance.new("ImageLabel")

				ImageLabel_gx.Parent = LabelFrame
				ImageLabel_gx.BackgroundTransparency = 1.000
				ImageLabel_gx.BorderSizePixel = 0
				ImageLabel_gx.Size = UDim2.new(0, 20, 0, 20)
				ImageLabel_gx.AnchorPoint = Vector2.new(0.5, 0.5)
				ImageLabel_gx.Position = UDim2.new(0.1, 0, 0.50, 0)
				ImageLabel_gx.Image = "http://www.roblox.com/asset/?id="..tostring(image)
				ImageLabel_gx.BackgroundTransparency = 1

				local noticore55 = Instance.new("UICorner")

				noticore55.CornerRadius = UDim.new(0, 4)
				noticore55.Name = ""
				noticore55.Parent = LabelFarm2

				local noticore2777 = Instance.new("UICorner")

				noticore2777.CornerRadius = UDim.new(0, 4)
				noticore2777.Name = ""
				noticore2777.Parent = LabelFrame

				local LabelStroke = Instance.new("UIStroke")

				LabelStroke.Thickness = 1
				LabelStroke.Name = ""
				LabelStroke.Parent = LabelFrame
				LabelStroke.LineJoinMode = Enum.LineJoinMode.Round
				LabelStroke.Color = _G.ColorMethod
				LabelStroke.Transparency = 0.7

				LabelFrame.MouseEnter:Connect(function()
					TweenService:Create(
						LabelStroke,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency =0}
					):Play()
				end
			)
				LabelFrame.MouseLeave:Connect(function()
					TweenService:Create(
						LabelStroke,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Transparency =0.7}
					):Play()
				end
			)
				function labaelchange:Change(text2)
					LabelFarm2.Text = text2
				end
				return  labaelchange
			end
			return  items
			end
		return  page
		end
	return top
	end

local Window = create:win("Test")
local Tap = Window:Taps("test")
 local Main = Tap:newpage()
    Main:Toggle("Toggle",false,function(value)
        print("Abc")
    end)
    Main:Button("Button",function()
        print("Cba")
    end)
    Main:Drop("Dropdown",false,{"Test 1 ","test2","Test 3"},function(value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value 
    end)
    local Persen = 8
    Main:Slider("Slider",false,false,0,100,Persen,1,false,Persen,function(v)
        Persen = v
    end)
    Main:TextBox("Textbox","Text Here",function(value)
        print("Abc")
    end)
return  create
    --
    return var
end

local title_string = "Azure | User Status : "..CheckStatus(game.Players.LocalPlayer.Name).." | %A, %B"
local day = os.date(" %d", os.time())
local second_string = ", %Y."
title_string = os.date(title_string, os.time())..day..GetSubPrefix(day)..os.date(second_string, os.time())

local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local CurrentCamera = workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint
local mouse = game.Players.LocalPlayer:GetMouse()
local UserInput = game:GetService("UserInputService")



_G.FakeAnim1 = game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId
_G.FakeAnim2 = game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId
_G.FakeAnim3 = game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId


getgenv().taffy_esp = {
    box = {
        enabled1 = true,
        enabled = false,
        outline = false,
        healthbar = false,
        color1 = Color3.fromRGB(255, 255, 255),
        color2 = Color3.fromRGB(0, 0, 0),
        healthbarcolor = Color3.fromRGB(4, 0, 255)
    },
    tracer = {
        enabled = false,
        unlocktracers = false,
        color = Color3.fromRGB(255, 255, 255)
    },
    name = {
        enabled = false,
        outline = false,
        size = 13,
        font = 2,
        color = Color3.fromRGB(255, 255, 255)
    },
    misc = {
        teamcheck = false,
        useteamcolors = false,
        visibleonly = true
    },
    Toolsshow = {
        enable = false,
        outline = false,
        size = 8,
        font = 3,
        color = Color3.fromRGB(147, 39, 161)
    }
}

function esp(v)
    -- box --
    local BLOCKOUTLINE = Drawing.new("Square")
    BLOCKOUTLINE.Visible = false
    BLOCKOUTLINE.Color = Color3.new(0,0,0)
    BLOCKOUTLINE.Thickness = 3
    BLOCKOUTLINE.Transparency = 1
    BLOCKOUTLINE.Filled = false

    local BOXPLAYER = Drawing.new("Square")
    BOXPLAYER.Visible = false
    BOXPLAYER.Color = taffy_esp.box.color1
    BOXPLAYER.Thickness = 1
    BOXPLAYER.Transparency = 1
    BOXPLAYER.Filled = false

    local HealthBarOUTLINE = Drawing.new("Square")
    HealthBarOUTLINE.Thickness = 3
    HealthBarOUTLINE.Filled = false
    HealthBarOUTLINE.Color = Color3.new(0,0,0)
    HealthBarOUTLINE.Transparency = 1
    HealthBarOUTLINE.Visible = false

    local HealthBarITSELF = Drawing.new("Square")
    HealthBarITSELF.Thickness = 1
    HealthBarITSELF.Filled = false
    HealthBarITSELF.Transparency = 1
    HealthBarITSELF.Visible = false
    
    local Tracer = Drawing.new("Line")
    Tracer.Visible = false
    Tracer.Color = Color3.new(1,1,1)
    Tracer.Thickness = 1
    Tracer.Transparency = 1

    local Name = Drawing.new("Text")
    Name.Transparency = 1
    Name.Visible = false
    Name.Color = taffy_esp.name.color
    Name.Size = 16
    Name.Center = true
    Name.Outline = false
    Name.Font = 2
    Name.Text = "name [100/100]"

    local toolshow = Drawing.new("Text")
    toolshow.Transparency = 1
    toolshow.Visible = false
    toolshow.Color = getgenv().taffy_esp.Toolsshow.color
    toolshow.Size = 16
    toolshow.Center = true
    toolshow.Outline = false
    toolshow.Font = 2
    toolshow.Text = ""
game:GetService("RunService").RenderStepped:Connect(function()
        if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health  > 0 and (not taffy_esp.misc.teamcheck or v.TeamColor == lplr.TeamColor) then
            local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
            local Distance = (CurrentCamera.CFrame.p - v.Character.HumanoidRootPart.Position).Magnitude
            local RootPart = v.Character.HumanoidRootPart
            local Head = v.Character.Head
            local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
            local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + Vector3.new(0,0.5,0))
            local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - Vector3.new(0,3,0))
            if (not taffy_esp.misc.visibleonly or onScreen) then
                if taffy_esp.box.enabled1 then
                    BLOCKOUTLINE.Size = Vector2.new(2500 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                    BLOCKOUTLINE.Position = Vector2.new(RootPosition.X - BLOCKOUTLINE.Size.X / 2, RootPosition.Y - BLOCKOUTLINE.Size.Y / 2)
                    BLOCKOUTLINE.Visible = taffy_esp.box.outline
                    BLOCKOUTLINE.Color = taffy_esp.box.color2
    
                    BOXPLAYER.Size = Vector2.new(2500 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                    BOXPLAYER.Position = Vector2.new(RootPosition.X - BOXPLAYER.Size.X / 2, RootPosition.Y - BOXPLAYER.Size.Y / 2)
                    BOXPLAYER.Visible = taffy_esp.box.enabled
                    if not taffy_esp.misc.useteamcolors then
                        local color = v.TeamColor
                        BOXPLAYER.Color = taffy_esp.box.color1
                    else
                        BOXPLAYER.Color = taffy_esp.box.color1
                    end
                        
                    HealthBarOUTLINE.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                    HealthBarOUTLINE.Position = HealthBarOUTLINE.Position - Vector2.new(6,0)
                    HealthBarOUTLINE.Visible = taffy_esp.box.outline
    
                    HealthBarITSELF.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (v.Character.Humanoid.MaxHealth / math.clamp(v.Character.Humanoid.Health, 0,v.Character.Humanoid.MaxHealth)))
                    HealthBarITSELF.Position = Vector2.new(BOXPLAYER.Position.X - 5, BOXPLAYER.Position.Y + (1 / HealthBarITSELF.Size.Y))
                    HealthBarITSELF.Color = taffy_esp.box.healthbarcolor
                    HealthBarITSELF.Visible = taffy_esp.box.healthbar
                    
                    
                    
                    
                else
                    BLOCKOUTLINE.Visible = false
                    BOXPLAYER.Visible = false
                    HealthBarOUTLINE.Visible = false
                    HealthBarITSELF.Visible = false
                end
                if taffy_esp.tracer.enabled then
                    if taffy_esp.tracer.unlocktracers then
                        Tracer.From = Vector2.new(mouse.X, mouse.Y + 36)
                    else
                        Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    end
                    Tracer.To = Vector2.new(Vector.X, Vector.Y)
                    Tracer.Visible = taffy_esp.tracer.enabled
                    if not taffy_esp.misc.useteamcolors then
                        local color = v.TeamColor
                        Tracer.Color = taffy_esp.tracer.color
                    else
                        Tracer.Color = taffy_esp.tracer.color
                    end
                else
                    Tracer.Visible = false
                end

                if taffy_esp.Toolsshow.enable then
                        local Equipped = v.Character:FindFirstChildOfClass("Tool") and v.Character:FindFirstChildOfClass("Tool").Name or "None"
                    toolshow.Text = Equipped
                    toolshow.Position = Vector2.new(workspace.Camera:WorldToViewportPoint(v.Character.Head.Position).X, workspace.Camera:WorldToViewportPoint(v.Character.Head.Position).Y + 30)
                    toolshow.Color = getgenv().taffy_esp.Toolsshow.color
                    toolshow.Font = 3
                    Name.Size = taffy_esp.Toolsshow.size
                    toolshow.Visible = true
                    else
                        toolshow.Visible = false
                end


                if taffy_esp.name.enabled then
                    Name.Text = tostring(v.Character.Humanoid.DisplayName).. " [" .. tostring(math.floor(v.Character.Humanoid.Health + 0.5)) .. "/" .. tostring(v.Character.Humanoid.MaxHealth) .. "]"
                    Name.Position = Vector2.new(workspace.Camera:WorldToViewportPoint(v.Character.Head.Position).X, workspace.Camera:WorldToViewportPoint(v.Character.Head.Position).Y - 30)
                    Name.Visible = true
                    Name.Size = taffy_esp.name.size
                    if not taffy_esp.misc.useteamcolors then
                        local color = v.TeamColor
                        Name.Color = taffy_esp.name.color
                    else
                        Name.Color = taffy_esp.name.color
                    end
                    Name.Outline = taffy_esp.name.outline
                else
                    Name.Visible = false
                end
            else
                BLOCKOUTLINE.Visible = false
                BOXPLAYER.Visible = false
                toolshow.Visible=false
                HealthBarOUTLINE.Visible = false
                HealthBarITSELF.Visible = false
                Tracer.Visible = false
                Name.Visible = false
            end
        else
            toolshow.Visible=false
            BLOCKOUTLINE.Visible = false
            BOXPLAYER.Visible = false
            HealthBarOUTLINE.Visible = false
            HealthBarITSELF.Visible = false
            Tracer.Visible = false
            Name.Visible = false
        end
    end)
end

for i,v in pairs(game.Players:GetChildren()) do
    esp(v)
end

game.Players.PlayerAdded:Connect(function(v)
    esp(v)
end)

local azure = {
    UISettings = {
        Rainbow = nil
    },
    Aiming = {
        Aimbot = {
            Enabled = nil,
            Prediction = nil,
            Hitbox = nil,
            Smoothing = {
                Enabled = nil,
                Value = nil
            },
            VelocityResolver = nil,
            ReverseResolver = nil,
            Alerts = nil
        },
        Target = {
            Enabled = nil,
            Prediction = nil,
            Hitbox = nil,
            Alerts = nil,
            Tracer = {
                Enabled = nil,
                Color = nil,
                From = nil,
            },
            PingBased = nil,
            Highlight = {
                Enabled = nil,
                FillColor = nil,
                OutlineColor = nil
            },
            LookAt = nil,
            ViewAt = nil,
            FakeHitbox = {
                Enabled = nil,
                Color = nil,
                Size = nil,
                Material = nil
            },
            Offset = {
                Y = nil
            },
            Dot = {
                Enabled = nil,Color = nil
            }
        },
        WristPos = {
            Enabled = nil,
            Distance = nil
        },
        TargetStrafe = {
            Enabled = nil,
            Speed = nil,
            Distance = nil,
            Height = nil,
            Visualize = {
                Enabled = nil,
                Color = nil
            }
        }
    },
    Blatant = {
        CFrame = {
            Enabled = nil,
            Value = nil
        },
        Exploits = {
            AutoStomp = nil,
            AntiBag = nil,
            NoSlow = nil,
            JumpCooldown = nil
        },
        AntiStomp = {
            Enabled = nil,
            Type = nil
        },
        FakeLag = {
            Enabled = nil,
            Duration = nil
        },
        AntiAim = {
            SemiLegit = nil,
            VelocityUnderGround = nil,
            VelocityUnderGroundAmount = nil,
            RotVelocity = {
                Enabled = nil,Value = nil
            }
        },
        GunMod = {
            AutoReload = nil
        },
        ToolReach = nil
    },
    Visuals = {
        Local = {
            Chams = nil,
            Highlight = {
                Enabled = nil,
                FillColor = nil,
                OutlineColor = nil,
            },
            CloneChams = {
                Enabled = nil,
                Duration = nil,
                Color = nil,
                Material = nil
            }
        },
    }
}
    

local LocalPlayer = game.Players.LocalPlayer

local LocalPlayerObjs = {
    Mouse = LocalPlayer:GetMouse()
}

local RunService = game:GetService("RunService")

local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Azure | Beta',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Aiming = Window:AddTab('Aiming'), 
    Blatant = Window:AddTab('Blatant'),
    Visuals = Window:AddTab('Visuals'),
    Misc = Window:AddTab('Misc'),
    ['UI Settings'] = Window:AddTab('Settings'),
}


local AimbotTab = Tabs.Aiming:AddLeftGroupbox('Aimbot')
local TargetTab = Tabs.Aiming:AddRightGroupbox('Target Aim')
local WristPosXOther = Tabs.Aiming:AddLeftTabbox()
local WristPositionTab = WristPosXOther:AddTab('Wrist Position')
local StrafeTab = WristPosXOther:AddTab('Strafe')

local ExploitsTab = Tabs.Blatant:AddLeftGroupbox('Exploits')
local FlyTab = Tabs.Blatant:AddRightGroupbox('Fly')
local CFrameTab = Tabs.Blatant:AddRightGroupbox('CFrame')
local AntiStompTab = Tabs.Blatant:AddLeftGroupbox('Anti-Stomp')
local GunModTab = Tabs.Blatant:AddLeftGroupbox('Gun Modification')
local FakeLagTab = Tabs.Blatant:AddRightGroupbox('Fake Lag')
local AntiAimTab = Tabs.Blatant:AddRightGroupbox('Anti Aim')
local SpinbotTab = Tabs.Blatant:AddLeftGroupbox('Spinbot')
local fakeanimTab = Tabs.Blatant:AddLeftGroupbox('FakeAnimations (AA)')
local removehitboxTab = Tabs.Blatant:AddRightGroupbox('Remove Hitbox')


local LocalTab = Tabs.Visuals:AddRightGroupbox('Character')
local FOVTag = Tabs.Visuals:AddRightGroupbox('FOV')
local CrosshairTab = Tabs.Visuals:AddRightGroupbox('Crosshair')
local ESPTab = Tabs.Visuals:AddLeftGroupbox('ESP')
local WorldTab = Tabs.Visuals:AddLeftGroupbox('World')
local SkyboxTab = Tabs.Visuals:AddRightGroupbox('Sky box')

local AnimationsTab = Tabs.Misc:AddLeftGroupbox('Animations')

AnimationsTab:AddLabel("Don't change animations while moving")
local TeleportTab = Tabs.Misc:AddRightGroupbox('Teleports')

local OtherGroupbox = Tabs["UI Settings"]:AddRightGroupbox('Other')

AimbotTab:AddToggle('AimbotEnabledTggle', {
    Text = 'Enable',
    Default = false,
    Tooltip = 'Enable Aimbot',
})

Toggles.AimbotEnabledTggle:OnChanged(function()
    azure.Aiming.Aimbot.Enabled = Toggles.AimbotEnabledTggle.Value
end)

Toggles.AimbotEnabledTggle:AddKeyPicker('AimbotKeyPickerXD', {
    Default = 'None', 
    SyncToggleState = false, 

    Mode = 'Toggle',

    Text = 'Aimbot', 
    NoUI = false,
})

Options.AimbotKeyPickerXD:OnClick(function()
    if azure.Aiming.Aimbot.Enabled then
        AimbotBindEnabled = not AimbotBindEnabled
        if AimbotBindEnabled then
            AimbotTarget = AimbotGetTarget()
            if azure.Aiming.Aimbot.Alerts then
                Library:Notify("Aiming : "..tostring(AimbotTarget.Character.Humanoid.DisplayName))
            end
        elseif not AimbotBindEnabled then
            if azure.Aiming.Aimbot.Alerts then
                Library:Notify("Unaiming : "..tostring(AimbotTarget.Character.Humanoid.DisplayName))
            end
        end
    end
end)

AimbotTab:AddInput('AimbotPredictionTextbox', {
    Default = '',
    Numeric = false,
    Finished = false,

    Text = 'Prediction',
    Tooltip = 'Aimbot Prediction',

    Placeholder = 'Example = 7', 
})

Options.AimbotPredictionTextbox:OnChanged(function()
    azure.Aiming.Aimbot.Prediction = Options.AimbotPredictionTextbox.Value
end)

AimbotTab:AddToggle('AimbotDrawFOVTggle', {
    Text = 'Draw FOV',
    Default = false, 
    Tooltip = 'Enable Aimbot FOV', 
})

Toggles.AimbotDrawFOVTggle:OnChanged(function()
    AimbotDrawFOV = Toggles.AimbotDrawFOVTggle.Value
end)

Toggles.AimbotDrawFOVTggle:AddColorPicker('LocalHighlxxxxxxxxxxightFillColorColorPicker', {
    Default = Color3.fromRGB(255,0,0),
    Title = 'Aimbot FOV Color'
})

Options.LocalHighlxxxxxxxxxxightFillColorColorPicker:OnChanged(function()
    AimbotFOVClr = Options.LocalHighlxxxxxxxxxxightFillColorColorPicker.Value
end)

AimbotTab:AddSlider('AimbotFOVSizex', {
    Text = 'Aimbot FOV',

    Default = 5,
    Min = 1,
    Max = 5,
    Rounding = 2,

    Compact = false,
})

Options.AimbotFOVSizex:OnChanged(function()
    AimbotFOVSize = Options.AimbotFOVSizex.Value*100
end)

AimbotTab:AddDropdown('AimbotHitboxDropdownn', {
    Values = { 'Head', 'HumanoidRootPart', 'UpperTorso', 'LowerTorso' },
    Default = 2,
    Multi = false,

    Text = 'Hitbox',
    Tooltip = 'Aimbot Hitbox',
})

Options.AimbotHitboxDropdownn:OnChanged(function()
    azure.Aiming.Aimbot.Hitbox = Options.AimbotHitboxDropdownn.Value
end)

AimbotTab:AddToggle('AimbotAlertsTggl', {
    Text = 'Alerts',
    Default = false,
    Tooltip = 'Enable Aimbot Alerts',
})

Toggles.AimbotAlertsTggl:OnChanged(function()
    azure.Aiming.Aimbot.Alerts = Toggles.AimbotAlertsTggl.Value
end)

AimbotTab:AddToggle('AimbotVelocityResolverToggle', {
    Text = 'Velocity Resolver',
    Default = false,
    Tooltip = 'Enable Aimbot Velocity Resolver',
})

Toggles.AimbotVelocityResolverToggle:OnChanged(function()
    azure.Aiming.Aimbot.VelocityResolver = Toggles.AimbotVelocityResolverToggle.Value
end)

AimbotTab:AddToggle('ReverseResolverAimbotTggle', {
    Text = 'Reverse Resolver',
    Default = false,
    Tooltip = 'Enable Aimbot Reverse Resolver',
})

Toggles.ReverseResolverAimbotTggle:OnChanged(function()
    azure.Aiming.Aimbot.ReverseResolver = Toggles.ReverseResolverAimbotTggle.Value
end)

AimbotTab:AddToggle('AimbotSmoothingTggle', {
    Text = 'Enable Smoothing',
    Default = false,
    Tooltip = 'Enable Aimbot Smoothing',
})

Toggles.AimbotSmoothingTggle:OnChanged(function()
    azure.Aiming.Aimbot.Smoothing.Enabled = Toggles.AimbotSmoothingTggle.Value
end)

AimbotTab:AddInput('AimbotSmoothingTextBox', {
    Default = '',
    Numeric = false,
    Finished = false,

    Text = 'Smoothing Value',
    Tooltip = 'Smoothing Value',

    Placeholder = 'Example = 0.01', 
})

Options.AimbotSmoothingTextBox:OnChanged(function()
    azure.Aiming.Aimbot.Smoothing.Value = Options.AimbotSmoothingTextBox.Value
end)

--// target
TargetTab:AddToggle('TargetEnabledToggle', {
    Text = 'Enable',
    Default = false,
    Tooltip = 'Enable Target',
})

Toggles.TargetEnabledToggle:OnChanged(function()
    azure.Aiming.Target.Enabled = Toggles.TargetEnabledToggle.Value
end)

Toggles.TargetEnabledToggle:AddKeyPicker('TargetKeyPickerXD', {
    Default = 'None', 
    SyncToggleState = false, 

    Mode = 'Toggle',

    Text = 'Target Aim', 
    NoUI = false,
})

Options.TargetKeyPickerXD:OnClick(function()
    if azure.Aiming.Target.Enabled then
        TargetBindEnabled = not TargetBindEnabled
        if TargetBindEnabled then
            TargetTarget = TargetGetTarget()
            if azure.Aiming.Target.Alerts then
                Library:Notify("Targeting : "..tostring(TargetTarget.Character.Humanoid.DisplayName))
            end
        elseif not TargetBindEnabled then
            if azure.Aiming.Target.Alerts then
                Library:Notify("Untargeting : "..tostring(TargetTarget.Character.Humanoid.DisplayName))
            end
        end
    end
end)

TargetTab:AddInput('TargetPredictionTextbox', {
    Default = '',
    Numeric = false,
    Finished = false,

    Text = 'Prediction',
    Tooltip = 'Target Prediction',

    Placeholder = 'Example = 0.165', 
})

Options.TargetPredictionTextbox:OnChanged(function()
    azure.Aiming.Target.Prediction = Options.TargetPredictionTextbox.Value
end)

TargetTab:AddToggle('TargetTabFovTggle', {
    Text = 'Draw FOV',
    Default = false, 
    Tooltip = 'Enable Target FOV', 
})

Toggles.TargetTabFovTggle:OnChanged(function()
    TargetFOvEnabled = Toggles.TargetTabFovTggle.Value
end)

Toggles.TargetTabFovTggle:AddColorPicker('LocalHighxlxxxxxxxxxxightFillColorColorPicker', {
    Default = Color3.fromRGB(255,0,0),
    Title = 'Target FOV Color'
})

Options.LocalHighxlxxxxxxxxxxightFillColorColorPicker:OnChanged(function()
    TargetFovClr = Options.LocalHighxlxxxxxxxxxxightFillColorColorPicker.Value
end)

TargetTab:AddSlider('AimbotFOVSxizex', {
    Text = 'Target FOV',

    Default = 5,
    Min = 1,
    Max = 5,
    Rounding = 2,

    Compact = false,
})

Options.AimbotFOVSxizex:OnChanged(function()
    TargetFOVSize = Options.AimbotFOVSxizex.Value*100
end)

TargetTab:AddDropdown('TargetHitboxDropdown', {
    Values = { 'Head', 'HumanoidRootPart', 'UpperTorso', 'LowerTorso' },
    Default = 2,
    Multi = false,

    Text = 'Hitbox',
    Tooltip = 'Target Hitbox',
})

Options.TargetHitboxDropdown:OnChanged(function()
    azure.Aiming.Target.Hitbox = Options.TargetHitboxDropdown.Value
end)

TargetTab:AddToggle('TargetAlertsTggl', {
    Text = 'Alerts',
    Default = false,
    Tooltip = 'Enable Target Alerts',
})

Toggles.TargetAlertsTggl:OnChanged(function()
    azure.Aiming.Target.Alerts = Toggles.TargetAlertsTggl.Value
end)

TargetTab:AddToggle('TargetLookAtTggle', {
    Text = 'Look At',
    Default = false,
    Tooltip = 'Enable Look At',
})

Toggles.TargetLookAtTggle:OnChanged(function()
    azure.Aiming.Target.LookAt = Toggles.TargetLookAtTggle.Value
end)

TargetTab:AddToggle('TargetViewAtTggle', {
    Text = 'View At',
    Default = false,
    Tooltip = 'Enable View At',
})

Toggles.TargetViewAtTggle:OnChanged(function()
    azure.Aiming.Target.ViewAt = Toggles.TargetViewAtTggle.Value
end)

TargetTab:AddToggle('PingbasedTggle', {
    Text = 'Ping Based',
    Default = false, 
    Tooltip = 'recommended on 100 ping', 
})

Toggles.PingbasedTggle:OnChanged(function()
    azure.Aiming.Target.PingBased = Toggles.PingbasedTggle.Value
end)

TargetTab:AddToggle('TracerEnabledTracerTarget', {
    Text = 'Tracers',
    Default = false, 
    Tooltip = 'Tracers Enabled', 
})

Toggles.TracerEnabledTracerTarget:OnChanged(function()
    azure.Aiming.Target.Tracer.Enabled = Toggles.TracerEnabledTracerTarget.Value
end)

Toggles.TracerEnabledTracerTarget:AddColorPicker('AddColorPickerForTracerTargetThingy', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Target Tracer Color'
})

Options.AddColorPickerForTracerTargetThingy:OnChanged(function()
    azure.Aiming.Target.Tracer.Color = Options.AddColorPickerForTracerTargetThingy.Value
end)

TargetTab:AddDropdown('TargetTracerFrom', {
    Values = { 'Mouse', 'Head', 'UpperTorso', 'LowerTorso','Gun' },
    Default = 5,
    Multi = false, 

    Text = 'Tracer From:',
    Tooltip = 'Tracer From',
})

Options.TargetTracerFrom:OnChanged(function()
    azure.Aiming.Target.Tracer.From = Options.TargetTracerFrom.Value
end)

TargetTab:AddToggle('HighlightEnabledTggle', {
    Text = 'Highlight',
    Default = false, 
    Tooltip = 'Highlight Enabled', 
})

Toggles.HighlightEnabledTggle:OnChanged(function()
    azure.Aiming.Target.Highlight.Enabled = Toggles.HighlightEnabledTggle.Value
end)

Toggles.HighlightEnabledTggle:AddColorPicker('HighlightFillColorColorPicker', {
    Default = Color3.fromRGB(255,0,0),
    Title = 'Highlight Fill Color'
})

Options.HighlightFillColorColorPicker:OnChanged(function()
    azure.Aiming.Target.Highlight.FillColor = Options.HighlightFillColorColorPicker.Value
end)

Toggles.HighlightEnabledTggle:AddColorPicker('HighlightOutLineColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Highlight Outline Color'
})

Options.HighlightOutLineColor:OnChanged(function()
    azure.Aiming.Target.Highlight.OutlineColor = Options.HighlightOutLineColor.Value
end)

TargetTab:AddToggle('FakeHitboxTggle', {
    Text = 'Fake Hitbox',
    Default = false, 
    Tooltip = 'Fake Hitbox Enabled', 
})

Toggles.FakeHitboxTggle:OnChanged(function()
    azure.Aiming.Target.FakeHitbox.Enabled = Toggles.FakeHitboxTggle.Value
end)

Toggles.FakeHitboxTggle:AddColorPicker('FakeHitboxColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Fake Hitbox Color'
})

Options.FakeHitboxColor:OnChanged(function()
    azure.Aiming.Target.FakeHitbox.Color = Options.FakeHitboxColor.Value
end)

TargetTab:AddDropdown('TargetFakeHitboxMaterial', {
    Values = { 'Neon', 'ForceField', 'Plastic' },
    Default = 1,
    Multi = false, 

    Text = 'Fake Hitbox Material',
    Tooltip = 'Fake Hitbox Material',
})

Options.TargetFakeHitboxMaterial:OnChanged(function()
    azure.Aiming.Target.FakeHitbox.Material = Options.TargetFakeHitboxMaterial.Value
end)

TargetTab:AddSlider('TarggeetFakeHitboxSize', {
    Text = 'Fake Hitbox Size',

    Default = 5,
    Min = 1,
    Max = 20,
    Rounding = 2,

    Compact = false,
})

Options.TarggeetFakeHitboxSize:OnChanged(function()
    azure.Aiming.Target.FakeHitbox.Size = Options.TarggeetFakeHitboxSize.Value
end)

TargetTab:AddToggle('DotPARENTEnabedx', {
    Text = 'Dot',
    Default = false, 
    Tooltip = 'Dot Enabled', 
})

Toggles.DotPARENTEnabedx:OnChanged(function()
    azure.Aiming.Target.Dot.Enabled = Toggles.DotPARENTEnabedx.Value
end)

Toggles.DotPARENTEnabedx:AddColorPicker('DotParentForColorxXD', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Dot Color'
})

Options.DotParentForColorxXD:OnChanged(function()
    azure.Aiming.Target.Dot.Color = Options.DotParentForColorxXD.Value
end)

TargetTab:AddSlider('TargetOffsetYSlider', {
    Text = 'Target Offset (Y)',

    Default = 0,
    Min = -0.5,
    Max = 0.5,
    Rounding = 2,

    Compact = false,
})

Options.TargetOffsetYSlider:OnChanged(function()
    azure.Aiming.Target.Offset.Y = Options.TargetOffsetYSlider.Value
end)

WristPositionTab:AddToggle('WristPosEnabledTggle', {
    Text = 'Enable',
    Default = false,
    Tooltip = 'Enable Wrist Position',
})

Toggles.WristPosEnabledTggle:OnChanged(function()
    azure.Aiming.WristPos.Enabled = Toggles.WristPosEnabledTggle.Value
end)

Toggles.WristPosEnabledTggle:AddKeyPicker('WristPosBindEnabled', {
    Default = 'None', 
    SyncToggleState = false, 

    Mode = 'Toggle',

    Text = 'Wrist Position', 
    NoUI = false,
})

Options.WristPosBindEnabled:OnClick(function()
    if azure.Aiming.WristPos.Enabled then
        WristPosBind = not WristPosBind
        WristPosTarget = GetTarget()
    end
end)

WristPositionTab:AddSlider('WristPosOffsetSlider', {
    Text = 'Offset (Y)',

    Default = 1,
    Min = 1,
    Max = 25,
    Rounding = 2,

    Compact = false,
})

Options.WristPosOffsetSlider:OnChanged(function()
    azure.Aiming.WristPos.Distance = Options.WristPosOffsetSlider.Value
end)

WristPositionTab:AddLabel("Drops FPS (could be buggy)")

StrafeTab:AddToggle('TargetStrafeEnabled', {
    Text = 'Enable',
    Default = false,
    Tooltip = 'Enable Target Strafe Enabled',
})

Toggles.TargetStrafeEnabled:OnChanged(function()
    azure.Aiming.TargetStrafe.Enabled = Toggles.TargetStrafeEnabled.Value
end)

Toggles.TargetStrafeEnabled:AddKeyPicker('StrafeKeyPickerXD', {
    Default = 'None', 
    SyncToggleState = true, 

    Mode = 'Toggle',

    Text = 'Strafe (Target)', 
    NoUI = false,
})

StrafeTab:AddToggle('TargetStrafeVisualizatiONcOLR', {
    Text = 'Visualize Rotation',
    Default = false, 
    Tooltip = 'Visualize Rotation Enabled', 
})

Toggles.TargetStrafeVisualizatiONcOLR:OnChanged(function()
    azure.Aiming.TargetStrafe.Visualize.Enabled = Toggles.TargetStrafeVisualizatiONcOLR.Value
end)

Toggles.TargetStrafeVisualizatiONcOLR:AddColorPicker('TargetStrafeVisualizatiONcOLRXX', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Visualize Rotation Color'
})

Options.TargetStrafeVisualizatiONcOLRXX:OnChanged(function()
    azure.Aiming.TargetStrafe.Visualize.Color = Options.TargetStrafeVisualizatiONcOLRXX.Value
end)

StrafeTab:AddSlider('TargetStrafeSpeedLSid', {
    Text = 'Speed',

    Default = 5,
    Min = 1,
    Max = 5,
    Rounding = 0,

    Compact = false,
})

Options.TargetStrafeSpeedLSid:OnChanged(function()
    if Options.TargetStrafeSpeedLSid.Value == 5 then
        azure.Aiming.TargetStrafe.Speed = 0.5
    elseif Options.TargetStrafeSpeedLSid.Value == 4 then
        azure.Aiming.TargetStrafe.Speed = 0.6
    elseif Options.TargetStrafeSpeedLSid.Value == 3 then
        azure.Aiming.TargetStrafe.Speed = 0.7
    elseif Options.TargetStrafeSpeedLSid.Value == 2 then
        azure.Aiming.TargetStrafe.Speed = 0.8
    elseif Options.TargetStrafeSpeedLSid.Value == 1 then
        azure.Aiming.TargetStrafe.Speed = 0.9
    end
end)

StrafeTab:AddSlider('TargetStrafeDistanceSlid', {
    Text = 'Distance',

    Default = 0,
    Min = 0,
    Max = 20,
    Rounding = 2,

    Compact = false,
})

Options.TargetStrafeDistanceSlid:OnChanged(function()
    azure.Aiming.TargetStrafe.Distance = Options.TargetStrafeDistanceSlid.Value
end)

StrafeTab:AddSlider('TargetStrafeHeightSlid', {
    Text = 'Height',

    Default = 0,
    Min = 0,
    Max = 20,
    Rounding = 2,

    Compact = false,
})

Options.TargetStrafeHeightSlid:OnChanged(function()
    azure.Aiming.TargetStrafe.Height = Options.TargetStrafeHeightSlid.Value
end)

StrafeTab:AddLabel("FPS Based")

ExploitsTab:AddToggle('JumpCooldownTggle', {
    Text = 'No Jump Cooldown',
    Default = false, 
    Tooltip = 'Removes Jump Cooldown', 
})

Toggles.JumpCooldownTggle:OnChanged(function()
    azure.Blatant.Exploits.JumpCooldown = Toggles.JumpCooldownTggle.Value
end)

ExploitsTab:AddToggle('NoSlowdownTgle', {
    Text = 'No Slowdown',
    Default = false, 
    Tooltip = 'Enable No Slowdown', 
})

Toggles.NoSlowdownTgle:OnChanged(function()
    azure.Blatant.Exploits.NoSlow = Toggles.NoSlowdownTgle.Value
end)

ExploitsTab:AddToggle('AutoStompTggle', {
    Text = 'Auto Stomp',
    Default = false, 
    Tooltip = 'Enable Auto Stomp', 
})

Toggles.AutoStompTggle:OnChanged(function()
    azure.Blatant.Exploits.AutoStomp = Toggles.AutoStompTggle.Value
end)

ExploitsTab:AddToggle('AntiFlingEnabled', {
    Text = 'Anti-Fling',
    Default = false, 
    Tooltip = 'Enable Anti-Fling', 
})

Toggles.AntiFlingEnabled:OnChanged(function()
    LocalPlayer.Character.HumanoidRootPart.Anchored = Toggles.AntiFlingEnabled.Value
end)

ExploitsTab:AddToggle('AntiBagEnabledx', {
    Text = 'Anti-Bag',
    Default = false, 
    Tooltip = 'Enable Anti-Bag ( do not use when antilocking )', 
})

Toggles.AntiBagEnabledx:OnChanged(function()
    azure.Blatant.Exploits.AntiBag = Toggles.AntiBagEnabledx.Value
end)

ExploitsTab:AddToggle('NoclipEnabled', {
    Text = 'Noclip',
    Default = false, 
    Tooltip = 'Enable Noclip', 
})

Toggles.NoclipEnabled:OnChanged(function()
    if Toggles.NoclipEnabled.Value then
        NoclipLoop = game:GetService("RunService").Stepped:Connect(function()
            for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") and v.CanCollide == true then
                    v.CanCollide = false
                end
            end
        end)
    elseif Toggles.NoclipEnabled.Value == false and NoclipLoop then
        NoclipLoop:Disconnect()
    end
end)

Toggles.NoclipEnabled:AddKeyPicker('NoclipBind', {
    Default = 'None', 
    SyncToggleState = true, 

    Mode = 'Toggle',

    Text = 'Noclip', 
    NoUI = false,
})


AntiStompTab:AddToggle('aNTIStompTggle', {
    Text = 'Enable',
    Default = false, 
    Tooltip = 'Enable AntiStomp', 
})

Toggles.aNTIStompTggle:OnChanged(function()
    azure.Blatant.AntiStomp.Enabled = Toggles.aNTIStompTggle.Value
end)

AntiStompTab:AddDropdown('AntiStompDropdown', {
    Values = { 'Remove Character', 'Remove Humanoid' },
    Default = 1,
    Multi = false, 

    Text = 'Anti Stomp Type',
    Tooltip = 'Anti Stomp Type',
})

Options.AntiStompDropdown:OnChanged(function()
    azure.Blatant.AntiStomp.Type = Options.AntiStompDropdown.Value
end)

CFrameTab:AddToggle('CFrameSpeedTggle', {
    Text = 'Enable',
    Default = false,
    Tooltip = 'Enable CFrame',
})

Toggles.CFrameSpeedTggle:OnChanged(function()
    azure.Blatant.CFrame.Enabled = Toggles.CFrameSpeedTggle.Value
end)

Toggles.CFrameSpeedTggle:AddKeyPicker('CFrameSpeedBind', {
    Default = 'None', 
    SyncToggleState = true, 

    Mode = 'Toggle',

    Text = 'CFrame', 
    NoUI = false,
})

CFrameTab:AddSlider('CFrameSpeedAmountXD', {
    Text = 'CFrame Speed Amount',

    Default = 1,
    Min = 1,
    Max = 5,
    Rounding = 2,

    Compact = false,
})

Options.CFrameSpeedAmountXD:OnChanged(function()
    azure.Blatant.CFrame.Value = Options.CFrameSpeedAmountXD.Value
end)

FakeLagTab:AddToggle('FakeLagEnabledTggle', {
    Text = 'Enable',
    Default = false, 
    Tooltip = 'Enable Fake Lag', 
})

Toggles.FakeLagEnabledTggle:OnChanged(function()
    azure.Blatant.FakeLag.Enabled = Toggles.FakeLagEnabledTggle.Value
end)

FakeLagTab:AddSlider('FakeLagEnabledSlider', {
    Text = 'Duration',

    Default = 1,
    Min = 1,
    Max = 10,
    Rounding = 2,

    Compact = false,
})

Options.FakeLagEnabledSlider:OnChanged(function()
    azure.Blatant.FakeLag.Duration = Options.FakeLagEnabledSlider.Value
end)

local PredictorPart = Instance.new("Part",game.Workspace)

local newBillboardx = Instance.new("BillboardGui", PredictorPart)

local newFramex = Instance.new("Frame", newBillboardx)
local newUiCornorx = Instance.new("UICorner", newFramex)

task.spawn(function ()
    PredictorPart.Anchored = true
    PredictorPart.CanCollide = false
    PredictorPart.CFrame = CFrame.new(0,9999,0)
    PredictorPart.Transparency = 1
    newBillboardx.Name = "azure_billboardpredictor"
    newBillboardx.Adornee = PredictorPart
    newBillboardx.Size = UDim2.new(1, 0, 1, 0)
    newBillboardx.AlwaysOnTop = true
    newFramex.Size = UDim2.new(1, 0, 1, 0)
    newFramex.BackgroundTransparency = 0
    newUiCornorx.CornerRadius = UDim.new(50, 50)
end)

AntiAimTab:AddToggle('PredictiorRoblox', {
    Text = 'Predictor',
    Default = false, 
    Tooltip = 'Predictor Enabled', 
})

Toggles.PredictiorRoblox:OnChanged(function()
    if Toggles.PredictiorRoblox.Value then
        PredictorHook = game:GetService("RunService").Stepped:Connect(function ()
            PredictorPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position+(LocalPlayer.Character.HumanoidRootPart.Velocity*0.11))
            spawn(function ()
                newFramex.BackgroundColor3 = PredictorColoxr
            end)
        end)
    elseif Toggles.PredictiorRoblox.Value == false and PredictorHook then
        PredictorHook:Disconnect()
        PredictorPart.CFrame = CFrame.new(0,5000,0)
    end
end)

Toggles.PredictiorRoblox:AddColorPicker('AddColorPickerForTxxxxxxxxxxracerTargetThingy', {
    Default = Color3.fromRGB(255,255,255),
})

Options.AddColorPickerForTxxxxxxxxxxracerTargetThingy:OnChanged(function()
    PredictorColoxr = Options.AddColorPickerForTxxxxxxxxxxracerTargetThingy.Value
end)

AntiAimTab:AddToggle('VelUnderGroundToggle', {
    Text = 'Velocity Underground',
    Default = false, 
    Tooltip = 'Velocity Underground Enabled', 
})

Toggles.VelUnderGroundToggle:OnChanged(function()
    azure.Blatant.AntiAim.VelocityUnderGround = Toggles.VelUnderGroundToggle.Value
end)

Toggles.VelUnderGroundToggle:AddKeyPicker('NoclipBind', {
    Default = 'None', 
    SyncToggleState = true, 

    Mode = 'Toggle',

    Text = 'V-Underground', 
    NoUI = false,
})

AntiAimTab:AddSlider('VelocityUndergroundSLider', {
    Text = 'V-Underground Velocity',

    Default = 1,
    Min = 1,
    Max = 500,
    Rounding = 2,

    Compact = false,
})

Options.VelocityUndergroundSLider:OnChanged(function()
    azure.Blatant.AntiAim.VelocityUnderGroundAmount = Options.VelocityUndergroundSLider.Value
end)

AntiAimTab:AddSlider('VelocityHipheightUnderground', {
    Text = 'HipHeight',

    Default = 2,
    Min = 2,
    Max = 11,
    Rounding = 2,

    Compact = false,
})

Options.VelocityHipheightUnderground:OnChanged(function()
    VelocityUndergroundHipheight = Options.VelocityHipheightUnderground.Value
end)


AntiAimTab:AddToggle('VFallTggle', {
    Text = 'Velocity Fall',
    Default = false, 
    Tooltip = 'Velocity Fall Enabled', 
})

Toggles.VFallTggle:OnChanged(function()
    if Toggles.VFallTggle.Value then
        VFallHook = RunService.Stepped:Connect(function ()
            LocalPlayer.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
                if new == Enum.HumanoidStateType.Freefall == true and Toggles.VFallTggle.Value == true then
                    wait(0.28)
                    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, -V_FallVelocity, 0)
                end
            end)
        end)
    elseif Toggles.VFallTggle.Value == false and VFallHook then
        VFallHook:Disconnect()
    end
end)

AntiAimTab:AddSlider('VFallVel', {
    Text = 'V-Fall Velocity',

    Default = 1,
    Min = 1,
    Max = 50,
    Rounding = 2,

    Compact = false,
})

Options.VFallVel:OnChanged(function()
    V_FallVelocity = Options.VFallVel.Value
end)

GunModTab:AddToggle('AutoReloadTggle', {
    Text = 'Auto Reload',
    Default = false, 
    Tooltip = 'Enable Auto Reload', 
})

Toggles.AutoReloadTggle:OnChanged(function()
    azure.Blatant.GunMod.AutoReload = Toggles.AutoReloadTggle.Value
end)

SpinbotTab:AddToggle('RotVelocitySpinbot', {
    Text = 'Enable',
    Default = false, 
    Tooltip = 'Spinbot Enabled', 
})

Toggles.RotVelocitySpinbot:OnChanged(function()
    if Toggles.RotVelocitySpinbot.Value then
        RotVelHook = RunService.Stepped:Connect(function ()
            LocalPlayer.Character.HumanoidRootPart.RotVelocity = Vector3.new(Spinbot_X,Spinbot_Y,Spinbot_Z)
        end)
    elseif Toggles.RotVelocitySpinbot.Value == false and RotVelHook then
        RotVelHook:Disconnect()
    end
end)

SpinbotTab:AddSlider('SpinbotY', {
    Text = 'Speed',

    Default = 1,
    Min = 1,
    Max = 100,
    Rounding = 2,

    Compact = false,
})

Options.SpinbotY:OnChanged(function()
    Spinbot_Y = Options.SpinbotY.Value
end)



fakeanimTab:AddToggle('MoonWalk', {
    Text = 'MoonWalk ( 1 )',
    Default = false, 
    Tooltip = 'Prediction can be weird', 
})

Toggles.MoonWalk:OnChanged(function()
        if Toggles.MoonWalk.Value then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId =
                "rbxassetid://696096087"
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId =
                "rbxassetid://696096087"
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId =
                "rbxassetid://696096087"
        elseif Toggles.MoonWalk.Value == false then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId = _G.FakeAnim1
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = _G.FakeAnim2
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = _G.FakeAnim3
        end
end)

fakeanimTab:AddToggle('MoonWalk1', {
    Text = 'MoonWalk ( 2 )',
    Default = false, 
    Tooltip = 'Prediction can be weird', 
})

Toggles.MoonWalk1:OnChanged(function()
        if Toggles.MoonWalk1.Value then
    game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId =
                ""
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId =
                ""
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId =
                ""
        elseif Toggles.MoonWalk1.Value == false then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId = _G.FakeAnim1
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = _G.FakeAnim2
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = _G.FakeAnim3
        end
end)

            
fakeanimTab:AddToggle('NonHeadshotWalk', {
    Text = 'HeadshotWalk',
    Default = false, 
    Tooltip = 'Enemie cant 2 tap', 
})

Toggles.NonHeadshotWalk:OnChanged(function()
        if Toggles.NonHeadshotWalk.Value then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId =
                "http://www.roblox.com/asset/?id=1083222527"
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId =
                "http://www.roblox.com/asset/?id=1083222527"
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId =
                "http://www.roblox.com/asset/?id=1083222527"
        elseif Toggles.NonHeadshotWalk.Value == false then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId = _G.FakeAnim1
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = _G.FakeAnim2
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = _G.FakeAnim3
        end
end)

fakeanimTab:AddToggle('ArmSwingWalk', {
    Text = 'Arm Spread',
    Default = false, 
    Tooltip = 'Prediction can be weird', 
})

Toggles.ArmSwingWalk:OnChanged(function()
        if Toggles.ArmSwingWalk.Value then
                game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId =
                "rbxassetid://754656200"
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId =
                "rbxassetid://754656200"
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId =
                "rbxassetid://754656200"
        elseif Toggles.ArmSwingWalk.Value == false then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId = _G.FakeAnim1
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = _G.FakeAnim2
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = _G.FakeAnim3
        end
end)

fakeanimTab:AddToggle('FlossWalk', {
    Text = 'FlossWalk',
    Default = false, 
    Tooltip = 'Prediction can be weird', 
})

Toggles.FlossWalk:OnChanged(function()
        if Toggles.FlossWalk.Value then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId =
                "http://www.roblox.com/asset/?id=5917459365"
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId =
                "http://www.roblox.com/asset/?id=5917459365"
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId =
                "http://www.roblox.com/asset/?id=5917459365"
        elseif Toggles.FlossWalk.Value == false then
            game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId = _G.FakeAnim1
            game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId = _G.FakeAnim2
            game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId = _G.FakeAnim3
        end
end)


removehitboxTab:AddDropdown('RemovalDropdown', {
    Values = { 'None','RightLeg', 'LeftLeg',"LeftArm" },
    Default = 1,
    Multi = false, 

    Text = 'RemovalDropdown',
    Tooltip = 'RemoveHitboxes',
})

Options.RemovalDropdown:OnChanged(function()
    if Options.RemovalDropdown.Value == "None" then
    elseif Options.RemovalDropdown.Value == "RightLeg" then
        game.Players.LocalPlayer.Character.RightUpperLeg:Destroy()
    elseif Options.RemovalDropdown.Value == "LeftLeg" then
        game.Players.LocalPlayer.Character.LeftUpperLeg:Destroy()
        elseif Options.RemovalDropdown.Value == "LeftArm" then
        game.Players.LocalPlayer.Character.LeftUpperArm:Destroy()
end
end)

LocalTab:AddToggle('ChamsEnabledTggle', {
    Text = 'Enable Chams',
    Default = false,
    Tooltip = 'Enable Chams',
})

Toggles.ChamsEnabledTggle:OnChanged(function()
    azure.Visuals.Local.Chams = Toggles.ChamsEnabledTggle.Value
end)

task.spawn(function ()
    while true do
        wait()
        if azure.Visuals.Local.Chams then
            for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.Material = "ForceField"
                end
            end
        else
            for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.Material = "Plastic"
                end
            end
        end
    end
end)
--[[
LocalTab:AddToggle('GunChamsTggle', {
    Text = 'Enable Gun Chams',
    Default = false, 
    Tooltip = 'Gun Chams Enabled', 
})

Toggles.GunChamsTggle:OnChanged(function()
    azure.Visuals.Local.GunChams.Enabled = Toggles.GunChamsTggle.Value
end)

Toggles.GunChamsTggle:AddColorPicker('GunChamsColr', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Gun Chams Color'
})

Options.GunChamsColr:OnChanged(function()
    azure.Visuals.Local.GunChams.Color = Options.GunChamsColr.Value
end)

task.spawn(function ()
    while true do
        wait()
        if azure.Visuals.Local.GunChams.Enabled then
            if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
                game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Default.Material = "ForceField"
                game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Default.Color = azure.Visuals.Local.GunChams.Color
            end
        else
            if game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
                game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Default.Material = "Plastic"
            end
        end
    end
end)
]]

local LocalHL = Instance.new("Highlight")

LocalTab:AddToggle('LocalHighlight', {
    Text = 'Highlight',
    Default = false, 
    Tooltip = 'Highlight Enabled', 
})

Toggles.LocalHighlight:OnChanged(function()
    azure.Visuals.Local.Highlight.Enabled = Toggles.LocalHighlight.Value
end)

task.spawn(function ()
    while true do
        wait()
        if azure.Visuals.Local.Highlight.Enabled then
            LocalHL.Parent = LocalPlayer.Character
            LocalHL.FillColor = azure.Visuals.Local.Highlight.FillColor
            LocalHL.OutlineColor = azure.Visuals.Local.Highlight.OutlineColor
        else
            LocalHL.Parent = game.CoreGui
        end
    end
end)

Toggles.LocalHighlight:AddColorPicker('LocalHighlightFillColorColorPicker', {
    Default = Color3.fromRGB(255,0,0),
    Title = 'Highlight Fill Color'
})

Options.LocalHighlightFillColorColorPicker:OnChanged(function()
    azure.Visuals.Local.Highlight.FillColor = Options.LocalHighlightFillColorColorPicker.Value
end)

Toggles.LocalHighlight:AddColorPicker('LocalHighlightOutLineColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Highlight Outline Color'
})

Options.LocalHighlightOutLineColor:OnChanged(function()
    azure.Visuals.Local.Highlight.OutlineColor = Options.LocalHighlightOutLineColor.Value
end)

LocalTab:AddToggle('CloneChamsEnabled', {
    Text = 'Clone Chams',
    Default = false, 
    Tooltip = 'Clone Chams Enabled', 
})

Toggles.CloneChamsEnabled:OnChanged(function()
    azure.Visuals.Local.CloneChams.Enabled = Toggles.CloneChamsEnabled.Value
end)

Toggles.CloneChamsEnabled:AddColorPicker('CloneChamsColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Clone Chams Color'
})

Options.CloneChamsColor:OnChanged(function()
    azure.Visuals.Local.CloneChams.Color = Options.CloneChamsColor.Value
end)

task.spawn(function ()
    while true do
        wait()
        if azure.Visuals.Local.CloneChams.Enabled then
            repeat
                game.Players.LocalPlayer.Character.Archivable = true
                local Clone = game.Players.LocalPlayer.Character:Clone()
                for _,Obj in next, Clone:GetDescendants() do
                if Obj.Name == "HumanoidRootPart" or Obj:IsA("Humanoid") or Obj:IsA("LocalScript") or Obj:IsA("Script") or Obj:IsA("Decal") then
                    Obj:Destroy()
                elseif Obj:IsA("BasePart") or Obj:IsA("Meshpart") or Obj:IsA("Part") then
                    if Obj.Transparency == 1 then
                    Obj:Destroy()
                    else
                    Obj.CanCollide = false
                    Obj.Anchored = true
                    Obj.Material = azure.Visuals.Local.CloneChams.Material
                    Obj.Color = azure.Visuals.Local.CloneChams.Color
                    Obj.Transparency = 0
                    Obj.Size = Obj.Size + Vector3.new(0.03, 0.03, 0.03)   
                end
            end
                pcall(function()
                    Obj.CanCollide = false
                end)
            end
            Clone.Parent = game.Workspace
            wait(azure.Visuals.Local.CloneChams.Duration)
            Clone:Destroy()  
            until azure.Visuals.Local.CloneChams.Enabled == false
        end
    end
end)

LocalTab:AddSlider('DurationSliderWHAT', {
    Text = 'Duration',

    Default = 0.1,
    Min = 0.1,
    Max = 3,
    Rounding = 2,

    Compact = false,
})

Options.DurationSliderWHAT:OnChanged(function()
    azure.Visuals.Local.CloneChams.Duration = Options.DurationSliderWHAT.Value
end)

LocalTab:AddDropdown('CloneChamsMaterial', {
    Values = { 'Neon', 'ForceField', 'Plastic' },
    Default = 2,
    Multi = false, 

    Text = 'Clone Chams Material',
    Tooltip = 'Clone Chams Material',
})

Options.CloneChamsMaterial:OnChanged(function()
    azure.Visuals.Local.CloneChams.Material = Options.CloneChamsMaterial.Value
end)

FOVTag:AddSlider('FOVSLlider', {
    Text = 'Amount',

    Default = 70,
    Min = 70,
    Max = 120,
    Rounding = 2,

    Compact = false,
})

Options.FOVSLlider:OnChanged(function()
    workspace.CurrentCamera.FieldOfView = Options.FOVSLlider.Value
end)

ESPTab:AddToggle('BoxESPEnabled', {
    Text = 'Box',
    Default = false, 
    Tooltip = 'Box ESP Enabled', 
})

Toggles.BoxESPEnabled:OnChanged(function()
    getgenv().taffy_esp.box.enabled = Toggles.BoxESPEnabled.Value
end)

Toggles.BoxESPEnabled:AddColorPicker('BoxESPColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Box ESP Color'
})

Options.BoxESPColor:OnChanged(function()
    getgenv().taffy_esp.box.color1 = Options.BoxESPColor.Value
end)

ESPTab:AddToggle('HealthESPEnabled', {
    Text = 'Health',
    Default = false, 
    Tooltip = 'Health ESP Enabled', 
})

Toggles.HealthESPEnabled:OnChanged(function()
    getgenv().taffy_esp.box.healthbar = Toggles.HealthESPEnabled.Value
end)

Toggles.HealthESPEnabled:AddColorPicker('HealthESPColor', {
    Default = Color3.fromRGB(0,255,0),
    Title = 'Health ESP Color'
})

Options.HealthESPColor:OnChanged(function()
    getgenv().taffy_esp.box.healthbarcolor = Options.HealthESPColor.Value
end)
task.spawn(function ()
    while true do
        wait()
        if getgenv().taffy_esp.box.healthbar or getgenv().taffy_esp.box.enabled then
            getgenv().taffy_esp.box.outline = true
        elseif getgenv().taffy_esp.box.healthbar == false or getgenv().taffy_esp.box.enabled == false then
            getgenv().taffy_esp.box.outline = false
        end
        if getgenv().taffy_esp.box.healthbar == true and getgenv().taffy_esp.box.enabled == false then
            getgenv().taffy_esp.box.outline = false
        end
    end
end)

ESPTab:AddToggle('TracerESPEnabled', {
    Text = 'Tracer',
    Default = false, 
    Tooltip = 'Tracer ESP Enabled', 
})

Toggles.TracerESPEnabled:OnChanged(function()
    getgenv().taffy_esp.tracer.enabled = Toggles.TracerESPEnabled.Value
end)

Toggles.TracerESPEnabled:AddColorPicker('TracerESPColor', {
    Default = Color3.fromRGB(0,255,0),
    Title = 'Tracer ESP Color'
})

Options.TracerESPColor:OnChanged(function()
    getgenv().taffy_esp.tracer.color = Options.TracerESPColor.Value
end)

ESPTab:AddToggle('UnlockedTracerEnabled', {
    Text = 'Unlock Tracer',
    Default = false, 
    Tooltip = 'Unlock Tracer Enabled', 
})

Toggles.UnlockedTracerEnabled:OnChanged(function()
    getgenv().taffy_esp.tracer.unlocktracers = Toggles.UnlockedTracerEnabled.Value
end)

ESPTab:AddToggle('NameESPEnabled', {
    Text = 'Name',
    Default = false, 
    Tooltip = 'Name ESP Enabled', 
})

Toggles.NameESPEnabled:OnChanged(function()
    getgenv().taffy_esp.name.enabled = Toggles.NameESPEnabled.Value
end)

Toggles.NameESPEnabled:AddColorPicker('NameESPColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Name ESP Color'
})

Options.NameESPColor:OnChanged(function()
    getgenv().taffy_esp.name.color = Options.NameESPColor.Value
end)

ESPTab:AddToggle('ToolESPEnabled', {
    Text = 'Held Tool',
    Default = false, 
    Tooltip = 'Held Tool ESP Enabled', 
})

Toggles.ToolESPEnabled:OnChanged(function()
    getgenv().taffy_esp.Toolsshow.enable = Toggles.ToolESPEnabled.Value
end)

Toggles.ToolESPEnabled:AddColorPicker('ToolESPColor', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Held Tool ESP Color'
})

Options.ToolESPColor:OnChanged(function()
    getgenv().taffy_esp.Toolsshow.color = Options.ToolESPColor.Value
end)

WorldTab:AddLabel('Ambient'):AddColorPicker('AmbientColorPicker', {
    Default = Color3.fromRGB(0,0,0),
    Title = 'Ambient', 
})

Options.AmbientColorPicker:OnChanged(function()
    
    if AmbientRainbowMode == true then

    else
        game.Lighting.Ambient = Options.AmbientColorPicker.Value
    end
end)

WorldTab:AddToggle('RainbowAmbient', {
    Text = 'Rainbow Ambient',
    Default = false, 
    Tooltip = 'Rainbow Ambient Enabled', 
})

Toggles.RainbowAmbient:OnChanged(function()
    AmbientRainbowMode = Toggles.RainbowAmbient.Value
    if Toggles.RainbowAmbient.Value then
        while Toggles.RainbowAmbient.Value do
            wait()
            game:GetService("Lighting").Ambient  = Color3.new(255/255,0/255,0/255)
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").Ambient = Color3.new(255/255,i/255,0/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").Ambient = Color3.new(i/255,255/255,0/255)
            end
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").Ambient = Color3.new(0/255,255/255,i/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").Ambient = Color3.new(0/255,i/255,255/255)
            end
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").Ambient = Color3.new(i/255,0/255,255/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").Ambient = Color3.new(255/255,0/255,i/255)
            end
            if Toggles.RainbowAmbient.Value == false then break end
        end
    end
end)

local AmbientReset = WorldTab:AddButton('Reset to Default', function()
    Options.AmbientColorPicker:SetValueRGB(Color3.fromRGB(0,0,0))
end)

WorldTab:AddLabel('Outdoor Ambient'):AddColorPicker('OutdoorAmbientColor', {
    Default = Color3.fromRGB(152, 152, 146),
    Title = 'Outdoor Ambient', 
})

Options.OutdoorAmbientColor:OnChanged(function()
    if OutdoorAmbientRainbowMode then
    else
        game.Lighting.OutdoorAmbient = Options.OutdoorAmbientColor.Value
    end
end)

WorldTab:AddToggle('RainbowOutdoorAmbient', {
    Text = 'Rainbow Outdoor',
    Default = false, 
    Tooltip = 'Rainbow Outdoor Ambient Enabled', 
})

Toggles.RainbowOutdoorAmbient:OnChanged(function()
    OutdoorAmbientRainbowMode = Toggles.RainbowOutdoorAmbient.Value
    if Toggles.RainbowOutdoorAmbient.Value then
        while Toggles.RainbowOutdoorAmbient.Value do
            wait()
            game:GetService("Lighting").OutdoorAmbient  = Color3.new(255/255,0/255,0/255)
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").OutdoorAmbient = Color3.new(255/255,i/255,0/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").OutdoorAmbient = Color3.new(i/255,255/255,0/255)
            end
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").OutdoorAmbient = Color3.new(0/255,255/255,i/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").OutdoorAmbient = Color3.new(0/255,i/255,255/255)
            end
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").OutdoorAmbient = Color3.new(i/255,0/255,255/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").OutdoorAmbient = Color3.new(255/255,0/255,i/255)
            end
            if Toggles.RainbowOutdoorAmbient.Value == false then break end
        end
    end
end)

local OutdoorAmbientReset = WorldTab:AddButton('Reset to Default', function()
    Options.OutdoorAmbientColor:SetValueRGB(Color3.fromRGB(152, 152, 146))
end)

WorldTab:AddSlider('FogEndSlider', {
    Text = 'Fog End',

    Default = 500,
    Min = 1,
    Max = 500,
    Rounding = 1,

    Compact = false,
})

Options.FogEndSlider:OnChanged(function()
    game.Lighting.FogEnd = Options.FogEndSlider.Value
end)

WorldTab:AddLabel('Fog Color'):AddColorPicker('FogColorColorPicker', {
    Default = Color3.fromRGB(100, 87, 72),
    Title = 'Fog Color', 
})

Options.FogColorColorPicker:OnChanged(function()
    if FogRainbowMode then
    else
        game.Lighting.FogColor = Options.FogColorColorPicker.Value
    end
end)

WorldTab:AddToggle('RainbowFogColor', {
    Text = 'Rainbow Outdoor',
    Default = false, 
    Tooltip = 'Rainbow Outdoor Ambient Enabled', 
})

Toggles.RainbowFogColor:OnChanged(function()
    FogRainbowMode = Toggles.RainbowFogColor.Value
    if Toggles.RainbowFogColor.Value then
        while Toggles.RainbowFogColor.Value do
            wait()
            game:GetService("Lighting").FogColor  = Color3.new(255/255,0/255,0/255)
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").FogColor = Color3.new(255/255,i/255,0/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").FogColor = Color3.new(i/255,255/255,0/255)
            end
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").FogColor = Color3.new(0/255,255/255,i/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").FogColor = Color3.new(0/255,i/255,255/255)
            end
            for i = 0,255,10 do
                wait()
                game:GetService("Lighting").FogColor = Color3.new(i/255,0/255,255/255)
            end
            for i = 255,0,-10 do
                wait()
                game:GetService("Lighting").FogColor = Color3.new(255/255,0/255,i/255)
            end
            if Toggles.RainbowFogColor.Value == false then break end
        end
    end
end)

local ResetFogEnd = WorldTab:AddButton('Reset to Default', function()
    Options.FogEndSlider:SetValue(500)
    Options.FogColorColorPicker:SetValueRGB(Color3.fromRGB(100, 87, 72))
end)

WorldTab:AddToggle('GlobalShadowsEnabled', {
    Text = 'Global Shadows',
    Default = true, 
    Tooltip = 'Global Shadows Enabled', 
})

Toggles.GlobalShadowsEnabled:OnChanged(function()
    game.Lighting.GlobalShadows = Toggles.GlobalShadowsEnabled.Value
end)
WorldTab:AddSlider('Saturation', {
    Text = 'Saturation',

    Default = 0,
    Min = 0,
    Max = 10,
    Rounding = 1,

    Compact = false,
})

Options.Saturation:OnChanged(function()
                        local ColorCorrection = game.Lighting:FindFirstChildOfClass("ColorCorrectionEffect") or Instance.new("ColorCorrectionEffect")
ColorCorrection.Saturation = Options.Saturation.Value
end)
WorldTab:AddSlider('Contrast', {
    Text = 'Contrast',

    Default = 0.1,
    Min = 0,
    Max = 10,
    Rounding = 1,

    Compact = false,
})

Options.Contrast:OnChanged(function()
    local ColorCorrection = game.Lighting:FindFirstChildOfClass("ColorCorrectionEffect") or Instance.new("ColorCorrectionEffect")
ColorCorrection.Contrast = Options.Contrast.Value
end)




CrosshairTab:AddToggle('CrosshairEnabledTop', {
    Text = 'Top',
    Default = true, 
    Tooltip = 'Top Enabled', 
})

Toggles.CrosshairEnabledTop:OnChanged(function()
    LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.Visible = Toggles.CrosshairEnabledTop.Value
end)

Toggles.CrosshairEnabledTop:AddColorPicker('CrosshairTopColor', {
    Default = Color3.fromRGB(255,255,255),
})

Options.CrosshairTopColor:OnChanged(function()
    
    if RainbowCrossHairMode then
    else
        LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Options.CrosshairTopColor.Value
    end
end)

CrosshairTab:AddToggle('CrosshairEnabledDown', {
    Text = 'Bottom',
    Default = true, 
    Tooltip = 'Bottom Enabled', 
})

Toggles.CrosshairEnabledDown:OnChanged(function()
    LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.Visible = Toggles.CrosshairEnabledDown.Value
end)

Toggles.CrosshairEnabledDown:AddColorPicker('CrosshairBottomXd', {
    Default = Color3.fromRGB(255,255,255),
})

Options.CrosshairBottomXd:OnChanged(function()
    
    if RainbowCrossHairMode then
    else
        LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Options.CrosshairBottomXd.Value
    end
end)

CrosshairTab:AddToggle('CrosshairEnabledLeft', {
    Text = 'Left',
    Default = true, 
    Tooltip = 'Left Enabled', 
})

Toggles.CrosshairEnabledLeft:OnChanged(function()
    LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.Visible = Toggles.CrosshairEnabledLeft.Value
end)

Toggles.CrosshairEnabledLeft:AddColorPicker('CrosshairLeftColor', {
    Default = Color3.fromRGB(255,255,255),
})

Options.CrosshairLeftColor:OnChanged(function()
    if RainbowCrossHairMode then
    else
        LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = Options.CrosshairLeftColor.Value
    end
end)

CrosshairTab:AddToggle('CrosshairEnabledRight', {
    Text = 'Right',
    Default = true, 
    Tooltip = 'Right Enabled', 
})

Toggles.CrosshairEnabledRight:OnChanged(function()
    LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.Visible = Toggles.CrosshairEnabledRight.Value
end)

Toggles.CrosshairEnabledRight:AddColorPicker('CrosshairRightColor', {
    Default = Color3.fromRGB(255,255,255),
})

Options.CrosshairRightColor:OnChanged(function()
    if RainbowCrossHairMode then
    else
        LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Options.CrosshairRightColor.Value
    end
end)

CrosshairTab:AddLabel('Middle'):AddColorPicker('CrosshairMiddle', {
    Default = Color3.fromRGB(255,255,255),
    Title = 'Middle', 
})

Options.CrosshairMiddle:OnChanged(function()
    
    if RainbowCrossHairMode then
    else
        LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Options.CrosshairMiddle.Value
    end
end)

CrosshairTab:AddToggle('RainbowCrosshair', {
    Text = 'Rainbow Crosshair',
    Default = false, 
    Tooltip = 'Rainbow Crosshair Enabled', 
})

Toggles.RainbowCrosshair:OnChanged(function()
    RainbowCrossHairMode = Toggles.RainbowCrosshair.Value
    if Toggles.RainbowCrosshair.Value then
        while Toggles.RainbowCrosshair.Value do
            wait()
            for i = 0,255,10 do
                wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.new(255/255,i/255,0/255)
                game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.new(255/255,i/255,0/255)
                game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.new(255/255,i/255,0/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.new(255/255,i/255,0/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = Color3.new(255/255,i/255,0/255)
            end
            for i = 255,0,-10 do
                wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.new(i/255,255/255,0/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.new(i/255,255/255,0/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.new(i/255,255/255,0/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 =  Color3.new(i/255,255/255,0/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 = Color3.new(i/255,255/255,0/255)
            end
            for i = 0,255,10 do
                wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.new(0/255,255/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.new(0/255,255/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.new(0/255,255/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.new(0/255,255/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 =  Color3.new(0/255,255/255,i/255)
            end
            for i = 255,0,-10 do
                wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.new(0/255,i/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.new(0/255,i/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.new(0/255,i/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.new(0/255,i/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 =  Color3.new(0/255,i/255,255/255)
            end
            for i = 0,255,10 do
                wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.new(i/255,0/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.new(i/255,0/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.new(i/255,0/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.new(i/255,0/255,255/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 =  Color3.new(i/255,0/255,255/255)
            end
            for i = 255,0,-10 do
                wait()
                    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.BackgroundColor3 = Color3.new(255/255,0/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Top.BackgroundColor3 = Color3.new(255/255,0/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Bottom.BackgroundColor3 = Color3.new(255/255,0/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Right.BackgroundColor3 = Color3.new(255/255,0/255,i/255)
    game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Aim.Left.BackgroundColor3 =  Color3.new(255/255,0/255,i/255)
            end
            if Toggles.RainbowCrosshair.Value == false then break end
        end
    end
end)

TeleportTab:AddDropdown('SchoolDropdown', {
    Values = { 'None','Food', 'Roof', 'Secret Room' },
    Default = 1,
    Multi = false, 

    Text = 'School',
    Tooltip = 'School Tps',
})

Options.SchoolDropdown:OnChanged(function()
    if Options.SchoolDropdown.Value == "None" then
    elseif Options.SchoolDropdown.Value == "Food" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-613.674194, 21.8749924, 289.857483, 0.00497477828, 2.20831442e-08, -0.999987602, -3.01110035e-08, 1, 2.19336211e-08, 0.999987602, 3.00015159e-08, 0.00497477828)
    elseif Options.SchoolDropdown.Value == "Secret Room" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-503.606995, 21.8749924, 361.749969, 0.999836385, -4.32269722e-08, -0.0180903766, 4.39084253e-08, 1, 3.72720521e-08, 0.0180903766, -3.80602749e-08, 0.999836385)
    elseif Options.SchoolDropdown.Value == "Roof" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-606.53656, 68.6249771, 325.997162, 0.99997282, 3.51442764e-10, 0.00737056695, -3.13645859e-10, 1, -5.12924192e-09, -0.00737056695, 5.12679055e-09, 0.99997282)
    end
end)

TeleportTab:AddDropdown('BankDropdown', {
    Values = { 'None','Food', 'Roof', 'Vault' },
    Default = 1,
    Multi = false, 

    Text = 'Bank',
    Tooltip = 'Bank Tps',
})

Options.BankDropdown:OnChanged(function()
    if Options.BankDropdown.Value == "None" then
    elseif Options.BankDropdown.Value == "Food" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-334.105621, 23.6826458, -297.371765, 0.0062069688, 8.89299017e-08, -0.999980748, 1.73607013e-08, 1, 8.9039375e-08, 0.999980748, -1.79130311e-08, 0.0062069688)
    elseif Options.BankDropdown.Value == "Vault" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-508.115051, 23.169693, -284.901337, -0.0288586095, -4.23028865e-08, -0.999583483, -4.83239475e-08, 1, -4.0925368e-08, 0.999583483, 4.71227715e-08, -0.0288586095)
    elseif Options.BankDropdown.Value == "Roof" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-459.32785, 39.0389023, -285.086548, 0.0124173071, 5.90856395e-08, -0.999922931, 3.85150489e-09, 1, 5.91380243e-08, 0.999922931, -4.58554306e-09, 0.0124173071)
    end
end)

TeleportTab:AddDropdown('UphillTps', {
    Values = { 'None','Food', 'Guns', 'Uphill Building 1','Uphill Building 2','Armor' },
    Default = 1,
    Multi = false, 

    Text = 'Uphill',
    Tooltip = 'Uphill Tps',
})

Options.UphillTps:OnChanged(function()
    if Options.UphillTps.Value == "None" then
    elseif Options.UphillTps.Value == "Food" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(299.117859, 49.2826538, -613.93158, 0.999884248, -2.11976445e-08, -0.015215965, 2.13970885e-08, 1, 1.29448381e-08, 0.015215965, -1.32689166e-08, 0.999884248)
    elseif Options.UphillTps.Value == "Guns" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(481.662781, 48.0704918, -622.017944, -0.999999166, 8.56621298e-08, 0.00129488122, 8.56506901e-08, 1, -8.88794016e-09, -0.00129488122, -8.77702444e-09, -0.999999166)
    elseif Options.UphillTps.Value == "Uphill Building 1" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(435.492004, 106.683769, -627.779114, -0.999886215, 4.09484855e-08, -0.0150852418, 4.09440126e-08, 1, 6.05427153e-10, 0.0150852418, -1.22920268e-11, -0.999886215)
    elseif Options.UphillTps.Value == "Uphill Building 2" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(300.213928, 106.03389, -620.259521, -0.999988019, 1.25798518e-08, -0.00488910545, 1.23825759e-08, 1, 4.03804208e-08, 0.00488910545, 4.03193994e-08, -0.999988019)
    elseif Options.UphillTps.Value == "Armor" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(533.781738, 50.3253212, -637.361084, 0.0147596924, -1.06152655e-07, 0.999891043, -2.64739004e-08, 1, 1.06555007e-07, -0.999891043, -2.80437362e-08, 0.0147596924)
    end
end)

TeleportTab:AddDropdown('DownhillTps', {
    Values = { 'None','Guns','Armor','Admin Base' },
    Default = 1,
    Multi = false, 

    Text = 'Downhill',
    Tooltip = 'Downhill Tps',
})

Options.DownhillTps:OnChanged(function()
    if Options.DownhillTps.Value == "None" then
    elseif Options.DownhillTps.Value == "Guns" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-581.334473, 8.31477833, -736.237427, -0.00332057965, -4.02167544e-08, -0.999994516, -5.74397596e-08, 1, -4.00262437e-08, 0.999994516, 5.73065329e-08, -0.00332057965)
    elseif Options.DownhillTps.Value == "Armor" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-604.672913, 10.3496885, -788.588745, -0.0184768867, -9.57051682e-09, 0.999829292, -3.11832942e-08, 1, 8.99588226e-09, -0.999829292, -3.10117549e-08, -0.0184768867)
    elseif Options.DownhillTps.Value == "Admin Base" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-797.611328, -39.6492157, -886.291382, 0.0349296406, -6.03186034e-09, 0.999389768, -1.15090231e-08, 1, 6.43779474e-09, -0.999389768, -1.17268701e-08, 0.0349296406)
    end
end)

TeleportTab:AddDropdown('CasinoTps', {
    Values = { 'None','Popcorn','DB','Casino' },
    Default = 1,
    Multi = false, 

    Text = 'Casino',
    Tooltip = 'Casino Tps',
})

Options.CasinoTps:OnChanged(function()
    if Options.CasinoTps.Value == "None" then
    elseif Options.CasinoTps.Value == "Popcorn" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-989.919678, 24.600008, -152.482224, 0.99982506, 1.5004666e-08, 0.0187029168, -1.51050052e-08, 1, 5.22361621e-09, -0.0187029168, -5.50521007e-09, 0.99982506)
    elseif Options.CasinoTps.Value == "DB" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1039.74451, 21.7499943, -260.811493, -0.999998271, 3.43565993e-08, 0.0018673077, 3.42738211e-08, 1, -4.4362519e-08, -0.0018673077, -4.42984422e-08, -0.999998271)
    elseif Options.CasinoTps.Value == "Casino" then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-866.869263, 21.7499943, -116.072456, -0.99939853, -1.97582839e-09, 0.0346787088, 1.85263072e-09, 1, 1.10365839e-07, -0.0346787088, 1.103637e-07, -0.99939853)
    end
end)

FlyTab:AddToggle('FlyTggle', {
    Text = 'Enable',
    Default = false,
    Tooltip = 'Enable Fly',
})

Toggles.FlyTggle:OnChanged(function()
    if Toggles.FlyTggle.Value == true then
        FlyLoop = game:GetService("RunService").Stepped:Connect(function()
            spawn(function()
                pcall(function()
                    local speed = FlySpeed
                    local velocity = Vector3.new(0, 1, 0)
                    local UserInputService = game:GetService("UserInputService")

                    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                        velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.lookVector * speed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                        velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.rightVector * -speed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                        velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.lookVector * -speed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                        velocity = velocity + (workspace.CurrentCamera.CoordinateFrame.rightVector * speed)
                    end
                    
                    LocalPlayer.Character.HumanoidRootPart.Velocity = velocity
                    LocalPlayer.Character.Humanoid:ChangeState("Freefall")
                end)
            end)
        end)
    elseif Toggles.FlyTggle.Value == false and FlyLoop then
        FlyLoop:Disconnect()
        LocalPlayer.Character.Humanoid:ChangeState("Landing")
    end
end)

Toggles.FlyTggle:AddKeyPicker('FlyBind', {
    Default = 'None', 
    SyncToggleState = true, 

    Mode = 'Toggle',

    Text = 'Fly', 
    NoUI = false,
})

FlyTab:AddSlider('FlySepedSlider', {
    Text = 'Speed',

    Default = 1,
    Min = 1,
    Max = 5,
    Rounding = 2,

    Compact = false,
})

Options.FlySepedSlider:OnChanged(function()
    FlySpeed = Options.FlySepedSlider.Value*50
end)

AnimationsTab:AddDropdown('RunAnimations', {
    Values = { 'None','Rthro','Werewolf','Zombie','Ninja','Toy','Superhero','OldSchool','Cartoony','Stylish','Vampire' },
    Default = 1,
    Multi = false, 

    Text = 'Run',
})

Options.RunAnimations:OnChanged(function()
    ChangeAnimHook = game:GetService("RunService").Stepped:Connect(function ()
        if Options.RunAnimations.Value == "None" then
        elseif Options.RunAnimations.Value == "Rthro" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=2510198475"
        elseif Options.RunAnimations.Value == "Werewolf" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083216690"
        elseif Options.RunAnimations.Value == "Zombie" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
        elseif Options.RunAnimations.Value == "Ninja" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=656118852"
        elseif Options.RunAnimations.Value == "Toy" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
        elseif Options.RunAnimations.Value == "Superhero" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616117076"
        elseif Options.RunAnimations.Value == "OldSchool" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=5319844329"
        elseif Options.RunAnimations.Value == "Cartoony" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=742638842"
        elseif Options.RunAnimations.Value == "Stylish" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616140816"
        elseif Options.RunAnimations.Value == "Vampire" then
            LocalPlayer.Character.Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083462077"
        end
    end)
end)

AnimationsTab:AddDropdown('JumpAnimations', {
    Values = { 'None','Rthro','Werewolf','Zombie','Ninja','Toy','Superhero','OldSchool','Cartoony','Stylish','Vampire' },
    Default = 1,
    Multi = false, 

    Text = 'Jump',
})

Options.JumpAnimations:OnChanged(function()
    ChangeJumpAnimHook = game:GetService("RunService").Stepped:Connect(function ()
        if Options.JumpAnimations.Value == "None" then
        elseif Options.JumpAnimations.Value == "Rthro" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=2510197830"
        elseif Options.JumpAnimations.Value == "Werewolf" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
        elseif Options.JumpAnimations.Value == "Zombie" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
        elseif Options.JumpAnimations.Value == "Ninja" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=656117878"
        elseif Options.JumpAnimations.Value == "Toy" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
        elseif Options.JumpAnimations.Value == "Superhero" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
        elseif Options.JumpAnimations.Value == "OldSchool" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=5319841935"
        elseif Options.JumpAnimations.Value == "Cartoony" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=742637942"
        elseif Options.JumpAnimations.Value == "Stylish" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616139451"
        elseif Options.JumpAnimations.Value == "Vampire" then
            LocalPlayer.Character.Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083455352"
        end
    end)
end)

AnimationsTab:AddDropdown('FallAnimations', {
    Values = { 'None','Rthro','Werewolf','Zombie','Ninja','Toy','Superhero','OldSchool','Cartoony','Stylish','Vampire' },
    Default = 1,
    Multi = false, 

    Text = 'Fall',
})

Options.FallAnimations:OnChanged(function()
    ChangeFallAnimHook = game:GetService("RunService").Stepped:Connect(function ()
        if Options.FallAnimations.Value == "None" then
        elseif Options.FallAnimations.Value == "Rthro" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=2510195892"
        elseif Options.FallAnimations.Value == "Werewolf" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083189019"
        elseif Options.FallAnimations.Value == "Zombie" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"
        elseif Options.FallAnimations.Value == "Ninja" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=656115606"
        elseif Options.FallAnimations.Value == "Toy" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"
        elseif Options.FallAnimations.Value == "Superhero" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
        elseif Options.FallAnimations.Value == "OldSchool" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=5319839762"
        elseif Options.FallAnimations.Value == "Cartoony" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=742640026"
        elseif Options.FallAnimations.Value == "Stylish" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616134815"
        elseif Options.FallAnimations.Value == "Vampire" then
            LocalPlayer.Character.Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083443587"
        end
    end)
end)

targetstraferangepart = Instance.new("MeshPart")

local TracerLine = Drawing.new("Line")
local HLTarget = Instance.new("Highlight")
local FakeHitboxPart = Instance.new("Part",game.Workspace)
local DotParent = Instance.new("Part",game.Workspace)

local newBillboard = Instance.new("BillboardGui", DotParent)

local newFrame = Instance.new("Frame", newBillboard)
local newUiCornor = Instance.new("UICorner", newFrame)


task.spawn(function ()
    newBillboard.Name = "azure_billboarddot"
    newBillboard.Adornee = DotParent
    newBillboard.Size = UDim2.new(1, 0, 1, 0)
    newBillboard.AlwaysOnTop = true
    newFrame.Size = UDim2.new(1, 0, 1, 0)
    newFrame.BackgroundTransparency = 0
    newUiCornor.CornerRadius = UDim.new(50, 50)
    DotParent.CanCollide = false
    DotParent.Anchored = true
    DotParent.CFrame = CFrame.new(0,2000,0)
    DotParent.Transparency = 1
    targetstraferangepart.MeshId = "rbxassetid://3726303797"
    targetstraferangepart.CanCollide = false
    targetstraferangepart.Anchored = true
    targetstraferangepart.Material = Enum.Material.Neon
    targetstraferangepart.Parent = game.Workspace
end)


RunService.Stepped:Connect(function ()
    if azure.Aiming.Target.Enabled and TargetBindEnabled and TargetTarget.Character then
        if azure.Aiming.Target.Dot.Enabled then
            DotParent.CFrame = CFrame.new(TargetTarget.Character[azure.Aiming.Target.Hitbox].Position+Vector3.new(0,azure.Aiming.Target.Offset.Y,0)+(TargetTarget.Character[azure.Aiming.Target.Hitbox].Velocity*azure.Aiming.Target.Prediction))
            task.spawn(function ()
                newFrame.BackgroundColor3 = azure.Aiming.Target.Dot.Color
            end)
            spawn(function ()
                if azure.Aiming.Target.Dot.Enabled == false then
                    DotParent.CFrame = CFrame.new(0,2000,0)
                end
            end)
        end
        if azure.Aiming.Target.FakeHitbox.Enabled then
            FakeHitboxPart.CFrame = CFrame.new(TargetTarget.Character.HumanoidRootPart.Position+Vector3.new(0,azure.Aiming.Target.Offset.Y,0)+(TargetTarget.Character.HumanoidRootPart.Velocity*azure.Aiming.Target.Prediction))
            spawn(function ()
                if azure.Aiming.Target.FakeHitbox.Enabled == false then
                    FakeHitboxPart.CFrame = CFrame.new(0,9999,0)
                end
            end)
            task.spawn(function ()
                FakeHitboxPart.CanCollide = false
                FakeHitboxPart.Anchored = true
                FakeHitboxPart.Color = azure.Aiming.Target.FakeHitbox.Color
                FakeHitboxPart.Size = Vector3.new(1*azure.Aiming.Target.FakeHitbox.Size,1*azure.Aiming.Target.FakeHitbox.Size,1*azure.Aiming.Target.FakeHitbox.Size)
                if azure.Aiming.Target.FakeHitbox.Material == "Neon" then
                    FakeHitboxPart.Transparency = 0
                    FakeHitboxPart.Material = "Neon"
                end
                if azure.Aiming.Target.FakeHitbox.Material == "ForceField" then
                    FakeHitboxPart.Transparency = 0
                    FakeHitboxPart.Material = "ForceField"
                end
                if azure.Aiming.Target.FakeHitbox.Material == "Plastic" then
                    FakeHitboxPart.Transparency = 0.75
                    FakeHitboxPart.Material = "Plastic"
                end
            end)
        end
        if azure.Aiming.Target.ViewAt then
            workspace.CurrentCamera.CameraSubject = TargetTarget.Character.Humanoid
            spawn(function ()
                if azure.Aiming.Target.ViewAt == false then
                    workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
                end
            end)
        end
        if azure.Aiming.Target.Tracer.Enabled then
            local LineVec = workspace.CurrentCamera:WorldToViewportPoint(TargetTarget.Character[azure.Aiming.Target.Hitbox].Position+Vector3.new(0,azure.Aiming.Target.Offset.Y,0)+(TargetTarget.Character[azure.Aiming.Target.Hitbox].Velocity*azure.Aiming.Target.Prediction))
            local humanoidt = workspace.CurrentCamera:WorldToViewportPoint(game.Players.LocalPlayer.Character.UpperTorso.Position)
            local headt = workspace.CurrentCamera:WorldToViewportPoint(game.Players.LocalPlayer.Character.Head.Position)
            local lowert = workspace.CurrentCamera:WorldToViewportPoint(game.Players.LocalPlayer.Character.LowerTorso.Position)
            local gunt = workspace.CurrentCamera:WorldToViewportPoint(game.Players.LocalPlayer.Character.RightHand.Position)
            
            TracerLine.Color = azure.Aiming.Target.Tracer.Color
            TracerLine.Transparency = 1
            TracerLine.Thickness = 2
            TracerLine.To = Vector2.new(LineVec.X, LineVec.Y)
            TracerLine.Visible = true
            if azure.Aiming.Target.Tracer.From == "Mouse" then
                TracerLine.From = Vector2.new(LocalPlayerObjs.Mouse.X, LocalPlayerObjs.Mouse.Y + game:GetService("GuiService"):GetGuiInset().Y)
            end
            if azure.Aiming.Target.Tracer.From == "Head" then
                TracerLine.From = Vector2.new(headt.X, headt.Y)
            end
            if azure.Aiming.Target.Tracer.From == "UpperTorso" then
                TracerLine.From = Vector2.new(humanoidt.X, humanoidt.Y)
            end
            if azure.Aiming.Target.Tracer.From == "LowerTorso" then
                TracerLine.From = Vector2.new(lowert.X, lowert.Y)
            end
            if azure.Aiming.Target.Tracer.From == "Gun" then
                TracerLine.From = Vector2.new(gunt.X, gunt.Y)
            end

            spawn(function ()
                if azure.Aiming.Target.Tracer.Enabled == false or azure.Aiming.Target.Enabled == false then
                    TracerLine.Visible = false
                end
            end)
        end
        if azure.Aiming.Target.Highlight.Enabled then
            HLTarget.Parent = TargetTarget.Character
            HLTarget.FillColor = azure.Aiming.Target.Highlight.FillColor
            HLTarget.OutlineColor = azure.Aiming.Target.Highlight.OutlineColor
            spawn(function ()
                if azure.Aiming.Target.Highlight.Enabled == false then
                    HLTarget.Parent = game.CoreGui
                end
            end)
        end

        if azure.Aiming.TargetStrafe.Visualize.Enabled and azure.Aiming.TargetStrafe.Enabled then
            targetstraferangepart.CFrame = TargetTarget.Character.HumanoidRootPart.CFrame
            spawn(function ()
                targetstraferangepart.Size = Vector3.new(azure.Aiming.TargetStrafe.Distance * 0.7, 0.01, azure.Aiming.TargetStrafe.Distance * 0.7)
                targetstraferangepart.Color = azure.Aiming.TargetStrafe.Visualize.Color
            end)
            spawn(function ()
                if azure.Aiming.TargetStrafe.Visualize.Enabled == false or azure.Aiming.TargetStrafe.Enabled == false then
                    targetstraferangepart.CFrame = CFrame.new(0,9999,0)
                end
            end)
        end
    else
        TracerLine.Visible = false
        HLTarget.Parent = game.CoreGui
        workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
        FakeHitboxPart.CFrame = CFrame.new(0,999,0)
        DotParent.CFrame = CFrame.new(0,2000,0)
        targetstraferangepart.CFrame = CFrame.new(0,9999,0)
    end
    
    if azure.Aiming.Target.PingBased == true then
        pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
        split = string.split(pingvalue,'(')
        ping = tonumber(split[1])
        if ping < 360 then
            azure.Aiming.Target.Prediction = 0.16537
        elseif ping < 270 then
            azure.Aiming.Target.Prediction = 0.195566
        elseif ping < 260 then
            azure.Aiming.Target.Prediction = 0.175566
        elseif ping < 250 then
            azure.Aiming.Target.Prediction = 0.1651
        elseif ping < 240 then
            azure.Aiming.Target.Prediction = 0.16780
        elseif ping < 230 then
            azure.Aiming.Target.Prediction = 0.15692
        elseif ping < 220 then
            azure.Aiming.Target.Prediction = 0.165566
        elseif ping < 210 then
            azure.Aiming.Target.Prediction = 0.16780
        elseif ping < 200 then
            azure.Aiming.Target.Prediction = 0.165566
        elseif ping < 190 then
            azure.Aiming.Target.Prediction = 0.166547
        elseif ping < 180 then
            azure.Aiming.Target.Prediction = 0.19284
        elseif ping < 170 then
            azure.Aiming.Target.Prediction = 0.1923111 
        elseif ping < 160 then
            azure.Aiming.Target.Prediction = 0.16
        elseif ping < 150 then
            azure.Aiming.Target.Prediction = 0.15
        elseif ping < 140 then
            azure.Aiming.Target.Prediction = 0.1223333
        elseif ping < 130 then
            azure.Aiming.Target.Prediction = 0.156692
        elseif ping < 120 then
            azure.Aiming.Target.Prediction = 0.143765
        elseif ping < 110 then
            azure.Aiming.Target.Prediction = 0.1455
        elseif ping < 100 then
            azure.Aiming.Target.Prediction = 0.130340
        elseif ping < 90 then
            azure.Aiming.Target.Prediction = 0.136
        elseif ping < 80 then
            azure.Aiming.Target.Prediction = 0.1347
        elseif ping < 70 then
            azure.Aiming.Target.Prediction = 0.119
        elseif ping < 60 then
            azure.Aiming.Target.Prediction = 0.12731
        elseif ping < 50 then
            azure.Aiming.Target.Prediction = 0.127668
        elseif ping < 40 then
            azure.Aiming.Target.Prediction = 0.125
        elseif ping < 30 then
            azure.Aiming.Target.Prediction = 0.11
        elseif ping < 20 then
            azure.Aiming.Target.Prediction = 0.12588
        elseif ping < 10 then
            azure.Aiming.Target.Prediction = 0.9
        end
    end
    if WristPosBind and azure.Aiming.WristPos.Enabled and WristPosTarget.Character and WristPosTarget.Character:FindFirstChild("HumanoidRootPart") then
        if LocalPlayer.Character.RightHand:FindFirstChild("RightWrist") then
            LocalPlayer.Character.RightHand.RightWrist:Destroy()
        end
        repeat
            task.wait()
            LocalPlayer.Character.RightHand.CFrame = CFrame.new(WristPosTarget.Character.HumanoidRootPart.Position) * CFrame.new(0,azure.Aiming.WristPos.Distance,0)
            LocalPlayer.Character.RightHand.Transparency = 1
        until WristPosBind == false or azure.Aiming.WristPos.Enabled == false
        if WristPosBind == false or azure.Aiming.WristPos.Enabled == false then
            LocalPlayer.Character.RightHand.CFrame = LocalPlayer.Character.RightUpperArm.CFrame
            LocalPlayer.Character.RightHand.Transparency = 0
        end
    end
end)

local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)
mt.__namecall = newcclosure(function(...)
    local args = {...}
    if azure.Aiming.Target.Enabled and TargetBindEnabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" then
        args[3] = TargetTarget.Character[azure.Aiming.Target.Hitbox].Position+Vector3.new(0,azure.Aiming.Target.Offset.Y,0)+(TargetTarget.Character[azure.Aiming.Target.Hitbox].Velocity*azure.Aiming.Target.Prediction)
        return old(unpack(args))
    end
    return old(...)
end)

RunService.RenderStepped:Connect(function ()
    if azure.Aiming.Aimbot.VelocityResolver then
        pcall(function ()
            AimbotTargetVelocity = AimbotTarget.Character.HumanoidRootPart.Velocity
            AimbotTarget.Character.HumanoidRootPart.Velocity = Vector3.new(AimbotTargetVelocity.X, -0.000000000000000000000000000000001, AimbotTargetVelocity.Z)
        end)
    end
    if azure.Aiming.Aimbot.Enabled and AimbotBindEnabled and azure.Aiming.Aimbot.Smoothing.Enabled == false then
        if azure.Aiming.Aimbot.ReverseResolver == true then
            local zxc = CFrame.new(workspace.CurrentCamera.CFrame.p, AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Position - AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Velocity/azure.Aiming.Aimbot.Prediction)
            workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(zxc, 1, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
        end
        if azure.Aiming.Aimbot.ReverseResolver == false then
            local zxc = CFrame.new(workspace.CurrentCamera.CFrame.p, AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Position + AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Velocity/azure.Aiming.Aimbot.Prediction)
            workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(zxc, 1, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
        end
    elseif azure.Aiming.Aimbot.Enabled and AimbotBindEnabled and azure.Aiming.Aimbot.Smoothing.Enabled == true then
        if azure.Aiming.Aimbot.ReverseResolver == true then
            local zx = CFrame.new(workspace.CurrentCamera.CFrame.p, AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Position - AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Velocity/azure.Aiming.Aimbot.Prediction)
            workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(zx, azure.Aiming.Aimbot.Smoothing.Value, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
        end
        if azure.Aiming.Aimbot.ReverseResolver == false then
            local zx = CFrame.new(workspace.CurrentCamera.CFrame.p, AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Position + AimbotTarget.Character[azure.Aiming.Aimbot.Hitbox].Velocity/azure.Aiming.Aimbot.Prediction)
            workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(zx, azure.Aiming.Aimbot.Smoothing.Value, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
        end
    end
    if TargetBindEnabled and azure.Aiming.Target.Enabled and TargetTarget.Character and TargetTarget.Character:FindFirstChild("HumanoidRootPart") then
        if azure.Aiming.Target.LookAt then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position, Vector3.new(TargetTarget.Character.HumanoidRootPart.CFrame.X, game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position.Y, TargetTarget.Character.HumanoidRootPart.CFrame.Z))
            LocalPlayer.Character.Humanoid.AutoRotate = false
            spawn(function ()
                if azure.Aiming.Target.LookAt == false then
                    LocalPlayer.Character.Humanoid.AutoRotate = true
                end
            end)
        end
    else
        LocalPlayer.Character.Humanoid.AutoRotate = true
    end
end)

angle_Y = 0

RunService.Stepped:Connect(function (param,FPS)
    if azure.Aiming.TargetStrafe.Enabled then
        if azure.Aiming.Target.Enabled and TargetBindEnabled then
            if Toggles.TargetLookAtTggle.Value == true then
                Toggles.TargetLookAtTggle:SetValue(false)
                wait()
                Toggles.TargetLookAtTggle:SetValue(true)
            end
            angle_Y = angle_Y + FPS / azure.Aiming.TargetStrafe.Speed % 1
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(TargetTarget.Character.HumanoidRootPart.Position) * CFrame.Angles(0, 2 * math.pi * angle_Y, 0) * CFrame.new(0, azure.Aiming.TargetStrafe.Height, azure.Aiming.TargetStrafe.Distance)
        end
    end
end)

local circleinstance = Drawing.new("Circle")
local circleinstancex = Drawing.new("Circle")
RunService.Heartbeat:Connect(function ()
    if AimbotDrawFOV then
        circleinstance.Position = Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y + game:GetService("GuiService"):GetGuiInset().Y)
        circleinstance.Visible = true
        circleinstance.Thickness = 2
        circleinstance.Radius =	AimbotFOVSize
        circleinstance.NumSides = 60
        circleinstance.Color = AimbotFOVClr
    else
        circleinstance.Visible = false
    end
    if TargetFOvEnabled then
        circleinstancex.Position = Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y + game:GetService("GuiService"):GetGuiInset().Y)
        circleinstancex.Visible = true
        circleinstancex.Thickness = 2
        circleinstancex.Radius = TargetFOVSize
        circleinstancex.NumSides = 60
        circleinstancex.Color = TargetFovClr
    else
        circleinstancex.Visible = false
    end
    if azure.Blatant.CFrame.Enabled then
        if LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
            for i = 1, azure.Blatant.CFrame.Value do
                LocalPlayer.Character:TranslateBy(LocalPlayer.Character.Humanoid.MoveDirection)
            end
        end
    end
    if azure.Blatant.Exploits.JumpCooldown then
        LocalPlayer.Character.Humanoid.UseJumpPower = false
    else 
        LocalPlayer.Character.Humanoid.UseJumpPower = true
    end
    if azure.Blatant.Exploits.NoSlow then
        wait()
        local bodyeffectsBounderies = LocalPlayer.Character.BodyEffects.Movement:FindFirstChild('NoJumping') or LocalPlayer.Character.BodyEffects.Movement:FindFirstChild('ReduceWalk') or LocalPlayer.Character.BodyEffects.Movement:FindFirstChild('NoWalkSpeed')
        if bodyeffectsBounderies then
            bodyeffectsBounderies:Destroy()
        end
        if LocalPlayer.Character.BodyEffects.Reload.Value == true then
            LocalPlayer.Character.BodyEffects.Reload.Value = false
        end
    end
    if azure.Blatant.Exploits.AutoStomp then
        game.ReplicatedStorage.MainEvent:FireServer("Stomp")
    end
    if azure.Blatant.Exploits.AntiBag then
        if LocalPlayer.Character["Christmas_Sock"] then
            LocalPlayer.Character["Christmas_Sock"]:Destroy()
        end
    end
    if azure.Blatant.AntiStomp.Enabled then
        if LocalPlayer.Character.Humanoid.Health <= 1 then
            if azure.Blatant.AntiStomp.Type == "Remove Character" then
                for i, v in pairs(LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v:Destroy()
                    end
                end
            elseif azure.Blatant.AntiStomp.Type == "Remove Humanoid" then
                LocalPlayer.Character.Humanoid:Destroy()
            end
        end
    end
    if azure.Blatant.FakeLag.Enabled then
        repeat
            wait()
            Toggles.AntiFlingEnabled:SetValue(true)
            wait(azure.Blatant.FakeLag.Duration/4)
            Toggles.AntiFlingEnabled:SetValue(false)
        until azure.Blatant.FakeLag.Enabled == false
    end
    if azure.Blatant.AntiAim.VelocityUnderGround then
        VelocityUnderGroundAA()
    else
        LocalPlayer.Character.Humanoid.HipHeight = 2
    end
    if azure.Blatant.AntiAim.RotVelocity.Enabled then
        RotVelocityAA()
    end
    if azure.Blatant.GunMod.AutoReload then
        if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
            if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo") then
                if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo").Value <= 0 then
                    game:GetService("ReplicatedStorage").MainEvent:FireServer("Reload", game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")) 
                end
            end
        end
    end
end)

OtherGroupbox:AddToggle('RainbowModeXD', {
    Text = 'Rainbow Theme',
    Default = true,
    Tooltip = 'Enable Rainbow Mode',
})

Toggles.RainbowModeXD:OnChanged(function()
    azure.UISettings.Rainbow = Toggles.RainbowModeXD.Value
end)

OtherGroupbox:AddToggle('WatermarkEnabled', {
    Text = 'Watermark',
    Default = true,
    Tooltip = 'Watermark Enabled',
})

Toggles.WatermarkEnabled:OnChanged(function()
    Library:SetWatermarkVisibility(Toggles.WatermarkEnabled.Value)
end)

OtherGroupbox:AddToggle('KeybindFrameEnabled', {
    Text = 'Keybind Frame',
    Default = true,
    Tooltip = 'Keybind Frame Enabled',
})

Toggles.KeybindFrameEnabled:OnChanged(function()
    Library.KeybindFrame.Visible = Toggles.KeybindFrameEnabled.Value
end)


Library:SetWatermark(title_string)



Library:OnUnload(function()
    Library.Unloaded = true
end)

local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

MenuGroup:AddButton('Unload Cheat', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightShift', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind 
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])

function AimbotGetTarget()
    local distance = AimbotFOVSize
    local zclosest

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y)).magnitude
            if magnitude < distance then
                zclosest = v
                distance = magnitude
            end
        end
    end
    return zclosest
end

function TargetGetTarget()
    local distance = TargetFOVSize
    local zclosest

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y)).magnitude
            if magnitude < distance then
                zclosest = v
                distance = magnitude
            end
        end
    end
    return zclosest
end

function GetTarget()
    local distance = math.huge
    local zclosest

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
            local pos = workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalPlayer:GetMouse().X, LocalPlayer:GetMouse().Y)).magnitude
            if magnitude < distance then
                zclosest = v
                distance = magnitude
            end
        end
    end
    return zclosest
end

function VelocityUnderGroundAA()
    local oldVelocity = LocalPlayer.Character.HumanoidRootPart.Velocity
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, -azure.Blatant.AntiAim.VelocityUnderGroundAmount, oldVelocity.Z)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, oldVelocity.Y, oldVelocity.Z)
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(oldVelocity.X, -azure.Blatant.AntiAim.VelocityUnderGroundAmount, oldVelocity.Z)
    LocalPlayer.Character.Humanoid.HipHeight = VelocityUndergroundHipheight
end

function RotVelocityAA()
    LocalPlayer.Character.HumanoidRootPart.RotVelocity = Vector3.new(0, azure.Blatant.AntiAim.RotVelocity.Value, 0)
end

task.spawn(function()
    while game:GetService("RunService").RenderStepped:Wait() do
        if azure.UISettings.Rainbow then
            local Registry = Window.Holder.Visible and Library.Registry or Library.HudRegistry

            for Idx, Object in next, Registry do
                for Property, ColorIdx in next, Object.Properties do
                    if ColorIdx == "AccentColor" or ColorIdx == "AccentColorDark" then
                        local Instance = Object.Instance
                        local yPos = Instance.AbsolutePosition.Y

                        local Mapped = Library:MapValue(yPos, 0, 1080, 0, 0.5) * 0.69
                        local Color = Color3.fromHSV((Library.CurrentRainbowHue - Mapped) % 1, 0.43, 1)

                        if ColorIdx == "AccentColorDark" then
                            Color = Library:GetDarkerColor(Color)
                        end

                        Instance[Property] = Color
                    end
                end
            end
        end
    end
end)
